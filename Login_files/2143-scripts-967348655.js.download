/*
eUtils
eSpinners
eAddToFavorites
eSortBy
eSortDropdown
eFaq
eButtonTextResize
eVideoResize
eIsoText
eUpdateOrderDetails
eUpdateOrderHistory
eOntraSSO
points-based-search
*/

// var elements = document.getElementsByTagName("option");

// for (var i = 0; i < elements.length; i++) {
//     if( elements[i].textContent.trim() === "" )
//         // elements[i].parentNode.removeChild(elements[i]);
//         elements[i].style.display = 'none';
// }

// for (var i = 0; i < elements.length; i++) {
//     if( elements[i].text.trim() === "" )
//         // elements[i].parentNode.removeChild(elements[i]);
//         // elements[i].style.display = 'none';
//         // $( ".uniqueOrderVal" ).remove( ":contains('')" );
//         $('.uniqueOrderVal').remove();


// }
// $('.fullItemLinkRefresh').click(function () {
//     // sessionStorage.clear();
//     // console.log('CREATIVE SLOT STORY: ', $(this).attr('aria-label'));
    
//     var creativeName1 = $(this).attr('aria-label');
//     sessionStorage.setItem("creative_name_1" , creativeName1);
//     // console.log('creative_name: ', sessionStorage.getItem("creative_name_1"));
//  });
 
//  $('.tile, .tileTitle').click(function () {
//     // sessionStorage.clear();
//     //  console.log('CREATIVE SLOT CARD: ', $(this).find('.tileTitle').text());
    
//      var creativeName1 = $(this).find('.tileTitle').text();
//      sessionStorage.setItem("creative_name_1" , creativeName1);
//     //  console.log('creative_name: ', sessionStorage.getItem("creative_name_1"));
//   });

//   $('.menu-option.secondary-category, .menu-option.primary-category').click(function () {
//     sessionStorage.clear();
//     //  console.log('CREATIVE SLOT CARD: ', $(this).find('span').text());
    
//     //  var creativeName1 = $(this).find('span').text();
//     //  sessionStorage.setItem("creative_name_1" , creativeName1);
//     //  console.log('creative_name: ', sessionStorage.getItem("creative_name_1"));
//   });

//   $('.recently-viewed-slider-container').click(function () {
//     // sessionStorage.clear();
//     //  console.log('CREATIVE SLOT CARD: ', $(this).find('.title span').text());
    
//      var creativeName1 = $(this).find('.title span').text();
//      sessionStorage.setItem("creative_name_1" , creativeName1);
//     //  console.log('creative_name: ', sessionStorage.getItem("creative_name_1"));
//   });

$(window).on('load', function () {
    $(".catCardEnabled").each(function (index, obj) {
        if (obj.value == false || obj.value == 'false') {
            // $(this).closest('.owl-item.active').hide();
            $(this).closest('.owl-item').hide();
        }
    });
});

$('.datepicker, .dateofbirth').attr('autocomplete', 'off');
$('.datepicker, .dateofbirth').on('input', function() {
    $(this).val(''); // Clear the input field when typing starts - 4511
});

$('form#placeOrder').submit(function(){
    $(this).find(':input[type=submit]').prop('disabled', true);
});


$(".fullItemLinkRefresh").mousedown(function (event) {
    var creativeName1 = $(this).attr('aria-label');
    // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
    sessionStorage.setItem("creative_name_1", creativeName1);
});

$(".tile, .tileTitle").mousedown(function (event) {
    var creativeName1 = $(this).find('.tileTitle').text();
    // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
    sessionStorage.setItem("creative_name_1", creativeName1);
});

$(".featured-products-container").mousedown(function (event) {
    var creativeName1 = $(this).find('.titleContainer .title span').text();
    // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
    sessionStorage.setItem("creative_name_1", creativeName1);
});

$(".tilesMainContainer .tilesContainer .tile .tileLink").mousedown(function (event) {
    var creativeName1 = $(this).find('.titleContainer .title span').text();
    // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
    sessionStorage.setItem("creative_name_1", creativeName1);
});

$("#recentViewCarousel .gridItemLink").mousedown(function (event) {
    var creativeName1 =  $('.recently-viewed-slider').find('.titleContainer .title span').text();
    // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
    sessionStorage.setItem("creative_name_1", creativeName1);
});

$(".deals-slider .deals-slider-container .gridItemLink").mousedown(function (event) {
    var creativeName1 = $('.deals-slider .deals-slider-container').find('.titleContainer .title span').text();
    // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
    sessionStorage.setItem("creative_name_1", creativeName1);
});

$(".titleContainer .title").mousedown(function (event) {
    var creativeName1 = $(this).find('span').text();
    // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
    sessionStorage.setItem("creative_name_1", creativeName1);
});


// $(".menu-option.secondary-category, .menu-option.primary-category").mousedown(function (event) {
//     sessionStorage.clear();
// });


$('.uniqueOrderVal:empty').remove();

// if ($(".widget-label").text('')){

// }

// var badgeLength = $(".product-widget.refurb").find('.widget-label').text()
// var badgeLength = $(".product-widget").find('.widget-label').text();
// $(badgeLength).each(function() {
// var maxBadgeLength = 21;
// $(this).substring(0, maxBadgeLength) + '...';
// });
// if($(window).width() < 402){
// var badgeLength = $(".product-widget.refurb, .product-widget.living-green, .product-widget.download, .product-widget.explicit, .product-widget.new, product-widget.minority-owned, product-widget.sale").find('.widget-label').text()
// var maxBadgeLength = 21;
// badgeLength.substring(0, maxBadgeLength) + '...';
// }

// !$('.checkout_hide_no_address').text()[0] == true

// $('#common-right-sidebar').hide();

if (!$(".report-view-allotment, .manageUsers, .uploadcustomers")[0] == true) {
    $('#common-right-sidebar').show();
}

// if (!$(".manageUsers")[0] == true) {
//     $('#common-right-sidebar').show();
// }

// if (!$(".uploadcustomers")[0] == true) {
//     $('#common-right-sidebar').show();
// }


// if ($(".report-view-allotment")[0]) {
//     $('#common-right-sidebar').hide();
// } else {
//     $('#common-right-sidebar').show();
// }


var eUtils = {
    init: function () {
		eUtils.thumbnailHandler();
		eUtils.spotlightCards();
        $(document).on('click', '.show_fpd_preview_modal_oh', function (evt) {
            var _this = $(this);
            var itemId = _this.data('item_id');
            var modalToShow = $('#fpd_preview_modal_oh_' + itemId);
            eGRMModal.open(modalToShow);
        });
        
        $("#new-password,#password").on("focus", function () {
            $(".password-rules").css("display", "block");
        });

        $("#new-password,#password").on("blur", function () {
            $(".password-rules").css("display", "none");
        });
        
        // $("#register-3 #new-password,#register-3 #password").on("focus", function () {
        //     $(".reg-password-rules").css("display", "block");
        // });

        // $("#register-3 #new-password,#register-3 #password").on("blur", function () {
        //     $(".reg-password-rules").css("display", "none");
        // });

        // languageSelectHeader &blLocaleCode=es_MX window.location.href
 
        $('#languageSelectHeader, #languageSelectFooter, #languageSelectFooterNav').on('change', function() {
            var biLocaleCodeVal = $(this).find('option:selected').val();
            var url = window.location.href;
                // window.location.assign(url.split('&blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
    
            if(window.location.href.indexOf("search?") > -1){
                // window.location.href = "?updatedPageSize=" + pageNumVal;
                window.location.assign(url.split('&blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
            }
    
             else if (window.location.href.indexOf("/shop") > -1 && window.location.href.indexOf("updatedPageSize") > -1) {
                // window.location = "&blLocaleCode=" + biLocaleCodeVal;
                window.location.assign(url.split('blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
            }
    
            else if (window.location.href.indexOf("categoryLeftNav") > -1 || window.location.href.indexOf("SearchValue") > -1) {
                // window.location = "&blLocaleCode=" + biLocaleCodeVal;
                window.location.assign(url.split('blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
            }
			
			//Endor 3624 sort in cart and wishlist start
			else if (window.location.href.indexOf("sort=") > -1) {
				window.location.assign(url.split('blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
			}
			//Endor 3624 sort in cart and wishlist end
			
            // else if (window.location.href.indexOf("/shop") > -1) {
            //     // window.location = "&blLocaleCode=" + biLocaleCodeVal;
            //     window.location.assign(url.split('?blLocaleCode')[0] + "?blLocaleCode=" + biLocaleCodeVal)
            // }
    
            // else if (window.location.href.indexOf("/shop") > -1 && window.location.href.indexOf("blLocaleCode") > -1) {
            //     // window.location = "&blLocaleCode=" + biLocaleCodeVal;
            //     window.location.assign(url.split('blLocaleCode')[0] + "?=blLocaleCode=" + biLocaleCodeVal)
            // }
    
            else {
                window.location.assign(url.split('?blLocaleCode')[0] + "?blLocaleCode=" + biLocaleCodeVal)
            }
        });
    
        // ?updatedPageSize=72 page-num
        // $('#page-num').on('change', 'select', function() {
            $('#page-num').on('change', function() {
	
				var url = window.location.href;
				var urlParams = new URLSearchParams(window.location.search);
		        var paramsortValue = urlParams.get('sort');
                var pageNumVal = $(this).find('option:selected').val();
    
                if(window.location.href.indexOf("search?") > -1){
                    var url = window.location.href;
                    window.location.assign(url.split('updated')[0] + "&updatedPageSize=" + pageNumVal)
                }
                else if (window.location.href.indexOf("categoryLeftNav") > -1){
                    var url = window.location.href;
                    window.location.assign(url.split('updated')[0] + "&updatedPageSize=" + pageNumVal)
                }
                else if (window.location.href.indexOf("SearchValue") > -1 || window.location.href.indexOf("mfg=") > -1 || window.location.href.indexOf("saleOfferProduct=") > -1 ){
                    var url = window.location.href;
                    window.location.assign(url.split('updated')[0] + "&updatedPageSize=" + pageNumVal)
                }
                else{
                	if(paramsortValue && paramsortValue != ''){
						window.location.href = "?updatedPageSize=" + pageNumVal+"&sort="+paramsortValue;
					}else{
                		window.location = "?updatedPageSize=" + pageNumVal;
                	}	
                }
            });
            
        // document.getElementById('#languageSelectHeader, #languageSelectFooter').addEventListener('keydown', function(event) {
        //     if (event.key == 9) {
        //     //   event.preventDefault();
        //     //   var elem = document.getElementById('Titleinformation_tb');
        //       $("#languageSelectHeader, #languageSelectFooter").simulate('mousedown');
        //     }
        //   });

        //   document.getElementById('#page-num').addEventListener('keydown', function(event) {
        //     if (event.key == 9) {
        //     //   event.preventDefault();
        //     //   var elem = document.getElementById('Titleinformation_tb');
        //       $("#page-num").simulate('mousedown');
        //     }
        //   });
          
        

        $(".languageSelectHeader, .languageSelectFooter").customSelect();

        $('.datepicker').datetimepicker({
            icons: {
                up: "endorIcon endor-down-open-big",
                down: "endorIcon endor-up-open-big",
                previous: "endorIcon endor-left-arrow",
                next: "endorIcon endor-right-arrow",
                close: "endorIcon endor-cancel-large"
            },
            viewMode: "days",
            showClose: true,
            format:'d/m/Y H:i A',
            formatTime:"H:i A",
      		step:30,
        });
        
        $('.dateofbirth').datetimepicker({
            format: 'd/m/Y',
            useCurrent: false,
            maxDate:new Date(),
			timepicker: false
         });

         $('.input-group-addon').click(function() {
		    $(".dateofbirth").focus();
		    $('.xdsoft_datetimepicker').css('z-index', '99999');
            $(".next").html('<div class="icon-container" style="float: right;padding-top: 4px;position: relative;top:4px;"><i class="eicon-arrow-right"></i></div>');
            $(".prev").html('<div class="icon-container backtoprevious-nav-left-arrow-align" style="position: relative;left: 10px;top:4px;"><i class="eicon-arrow-left"></i></div>');
		 });

         $(".dateofbirth").focus(function(){
			$('.xdsoft_datetimepicker').css('z-index', '99999');
            $(".next").html('<div class="icon-container" style="float: right;padding-top: 4px;position: relative;top:4px;"><i class="eicon-arrow-right"></i></div>');
            $(".prev").html('<div class="icon-container backtoprevious-nav-left-arrow-align" style="position: relative;left: 10px;top:4px;"><i class="eicon-arrow-left"></i></div>');
         });

       /* if($('.onlyfuturedates').length){
            $('.datepicker').data("DateTimePicker").minDate(new Date());
            $('#flowersDeliveryDate').val('');
        }*/

        // Polyfill Fix for IE8 which doesn't support the placeholder attribute
        $('input, textarea').placeholder();

        $(".custom-select").css('width', '100%').customSelect();
        //resize function to be used with bs hooks
        var customSelectResize = function () {
            $(".custom-select").css({
                'width': '100%',
                'height': 'auto'
            });
        };
        customSelectResize();
        //resize custom-select on tab
        $(document).on('shown.bs.tab', '*[data-toggle="tab"]' ,function (e) {
            if ($('#address_trash_alert')) {
                $('#address_trash_alert').addClass("hidden");
            }
            customSelectResize();
            $this = $(this);
            var
                id = $this.attr('href'),
                alertSuccess,
                shippingTaxCalculationErrorMsg = $('.shippingTaxCalculationErrorMsg').val();
            if (alertSuccess = $(id).find('.alert-success')) alertSuccess.remove();
            if (alertFailure = $(id).find('.alert-danger')) alertFailure.remove();
            if(id == "#ship-to") { //GL-2396
                if($this.parent('li').hasClass('beforeactive')){
                    eActivityIndicator.show();
                    window.location.replace("/ecommerce/checkout");
                    return;
                }
            }            
            if ($('div.checkout').length > 0) {
                $('[data-btn-group]').addClass('hide');
                $('[data-btn-group="' + id + '"]').removeClass('hide');
                if (shippingTaxCalculationErrorMsg != "" && (id == "#payment" || id == "#final-review")) {
                    $('.summary-final-review[data-btn-group="' + id + '"]').addClass('hide');
                    $("#shippingTaxCalculationErrorAlert").removeClass("hidden");
                }
                else{
                    $("#shippingTaxCalculationErrorAlert").addClass("hidden");
                }
                // if(id == "#address-form") {
                //     $("#grm-alert-checkout-page").removeClass("col-xs-12 col-sm-8");
                //     $("#grm-alert-checkout-page").addClass("col-md-offset-3 col-md-6 col-sm-offset-2 col-sm-10 col-xs-12");    
                // }else{
                //     $("#grm-alert-checkout-page").removeClass("col-md-offset-3 col-md-6 col-sm-offset-2 col-sm-10 col-xs-12");
                //     $("#grm-alert-checkout-page").addClass("col-xs-12 col-sm-8");
                // }
                if(id == "#ship-to") {
                    $(".order-summary-shipping-price").addClass("hide");
                    $(".order-summary .checkout-total").addClass("hide");
                }
                if(id == "#shipping-options") {
                    $(".order-summary-shipping-price").removeClass("hide");
                    $(".order-summary .checkout-total").removeClass("hide");
                }
            }
            //find checkout li
            $tabToggle = $('.tab-nav .pane-toggle[href="' + id + '"]').parent('li');
            if($tabToggle.parents().hasClass("checkout-ul")){
                $tabToggle.parents().find("li").removeClass('beforeactive'); 
                eUtils.addcheckoutbeforeactive($tabToggle, $tabToggle.parents().find("li").first().find(".pane-toggle").attr("href"));
            }
        });
        
        //4176
        // $('[data-toggle="tooltip"]').tooltip();

        //custom collapse-tab-pane hooks
        $('.collapse-tab-pane').each(function () {
            var
                $this = $(this),
                tabId = $this.attr('id'),
                $tabToggle = $('.pane-toggle[href="#' + tabId + '"]').parent('li');
            $this.not('.datepicker').on('show.bs.collapse', function () {
                $('.collapse-tab-pane, .tab-nav li').removeClass('active');
                $this.addClass('active');
                $tabToggle.addClass('active');
                customSelectResize();
            });
        });

        //sortBy button in header hooks
        var headerSort = $('.header-sort');
        $('a[href="#order-history"]').on('show.bs.tab', function () {
            headerSort.removeClass('hide');
        }).on('hide.bs.tab', function () {
            headerSort.addClass('hide');
        });

        //make sure tab nav and/or buttons have right active class when we tab from within the pane
        $(document).on('click','.btn-next-seg', function () {
            $this = $(this);
            eUtils.setActiveClass($this);
        });

        //contact tab/pane/collapse active class assignment when hash is present
        var $contactTabNav = $('.contact-tab-nav');
        var $contactMobileTabNav = $('.contact-tab-content');
        var $myAccountTabNav = $('.my-account-tab-nav');
        var $myAccountMobileTabNav = $('.my-account-tab-content');
        var hash;
        if ($contactTabNav || $contactMobileTabNav || $myAccountMobileTabNav || $myAccountTabNav) {
            hash = window.location.hash;
        }
        if (hash) {
            $('.active').removeClass('active');
            $contactTabNav.find('a[href="' + hash + '"]').parent('li').addClass('active');
            $myAccountTabNav.find('a[href="' + hash + '"]').parent('li').addClass('active');
            $contactMobileTabNav.find('a[href="' + hash + '"]').next().css("height", "");
            $contactMobileTabNav.find('a[href="' + hash + '"]').next().attr("aria-expanded", "true");
            $contactMobileTabNav.find('a[href="' + hash + '"]').next().addClass("in");

            //My account tab in tablet or mobile view
            $myAccountMobileTabNav.find('a[href="' + hash + '"]').next().css("height", "");
            $myAccountMobileTabNav.find('a[href="' + hash + '"]').next().attr("aria-expanded", "true");
            $myAccountMobileTabNav.find('a[href="' + hash + '"]').next().addClass("in");


            $(hash).addClass('active');

            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                e.preventDefault();
                var href = $(this).attr('href');
                window.location.hash = href;
            });
        }

        $('*[data-scroll]').click(function () {
            var scrollLink = $(this).data('scroll');
            $('html,body').animate({
                scrollTop: $(scrollLink).offset().top
            }, 'slow');
        });

        //add focus treatment for custom-select class
        $('.select-container select').focusin(function (e) {
            $(e.target).siblings('.custom-select').addClass('focused');
        }).focusout(function (e) {
            $(e.target).siblings('.custom-select').removeClass('focused');
        });

        $('.securityAnswer').on('focusin', function () {
            $(this).attr('value', '');
            $(this).attr('type', 'text');
        });

        $('.userNameRegister').on('focusin', function () {
            $(this).attr('value', '');
            $(this).attr('type', 'text');

        });

        //Tab Focus Order for Contact Us Page starts
        setTimeout(function () {
            var mainStoryURL = window.location.href;
            if (mainStoryURL.match("/ecommerce/contactus#general")) {
                $('#generaltab').focus();
                $("#generaltab")[0].click();
            } else if (mainStoryURL.match("/ecommerce/contactus#orders")) {
                $('#orderstab').focus();
                $("#orderstab")[0].click();
            } else if (mainStoryURL.match("/ecommerce/contactus#products")) {
                $('#productstab').focus();
                $("#productstab")[0].click();
            } else if (mainStoryURL.match("/ecommerce/contactus#technical-issues")) {
                $('#technicalissuestab').focus();
                $("#technicalissuestab")[0].click();
            } else if (mainStoryURL.match("/ecommerce/my-account/updateProfile#profile")) {
                $("#profiletab").focus();
                $("#profiletab")[0].click();
            } else if (mainStoryURL.match("/ecommerce/my-account/updateSecurity#order-history")) {
                $("#orderhistorytab").focus();
                $("#orderhistorytab")[0].click();
            } else if (mainStoryURL.match("/ecommerce/my-account#order-history")) {
                $("#orderhistorytab").focus();
                $("#orderhistorytab")[0].click();
            } else if (mainStoryURL.match("/ecommerce/my-account/updateSecurity#security")) {
                $("#security1").focus();
                $("#security1")[0].click();
            } else if (mainStoryURL.match("/ecommerce/my-account#page-header")) {
                $("#profiletab").focus();
                $("#profiletab")[0].click();
            }


            //Fix focus for second dropdown
            if (mainStoryURL.indexOf("/ecommerce/search?q=") > -1 || mainStoryURL.indexOf("/ecommerce/shop") > -1) {
                var dropdown;
                $('.sortMethodSelector_bottom #sortMethodSelector_bottom, #sortMethodSelector').click(function (e) {
                    dropdown = $(this)[0].id;
                    localStorage.setItem("sortByDropdown", dropdown);
                });
                if (mainStoryURL.indexOf("?sort") > -1 || mainStoryURL.indexOf("&sort") > -1) {
                    dropdown = localStorage.getItem("sortByDropdown");
                    if (!!dropdown) {
                        $("#" + dropdown).focus();
                        localStorage.removeItem('sortByDropdown');
                    }
                }
            }

            $("#generaltab").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    var $navItems = $("#navbar .navItem");
                    $navItems[$navItems.length - 1].focus();
                } else if (e.which === 9) {
                    if ($('#help').length > 0) {
                        $('#help').focus();
                        event.preventDefault();
                    } else if ($(".contact-tab-nav li").length > 1) {
                        $(".contact-tab-nav li")[1].focus();
                    } else {
                        $("#generalEmail4").focus();
                    }
                }
            });
            $("#help").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#generaltab').focus();
                    $("#generaltab")[0].click();
                    event.preventDefault();
                }
            });
            $("#send1").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#generaltab').focus();
                    $("#generaltab")[0].click();
                    $("textarea").focus();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#orderstab').focus();
                    $("#orderstab")[0].click();
                    event.preventDefault();
                }
                return true;
            });
            $("#orderstab").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#generaltab').focus();
                    $("#generaltab")[0].click();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#help1').focus();
                    event.preventDefault();
                }
            });
            $("#help1").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#orderstab').focus();
                    $("#orderstab")[0].click();
                    event.preventDefault();
                }
            });
            $("#send2").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#orderstab').focus();
                    $("#orderstab")[0].click();
                    $("textarea").focus();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#productstab').focus();
                    $("#productstab")[0].click();
                    event.preventDefault();
                }
            });
            $("#productstab").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#orderstab').focus();
                    $("#orderstab")[0].click();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#help2').focus();
                    event.preventDefault();
                }
            });
            $("#help2").keydown(function (e) {
                if (event.shiftKey && event.keyCode == 9) {
                    $('#productstab').focus();
                    $("#productstab")[0].click();
                    event.preventDefault();
                }
            });
            $("#send3").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#productstab').focus();
                    $("#productstab")[0].click();
                    $("textarea").focus();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#technicalissuestab').focus();
                    $("#technicalissuestab")[0].click();
                    event.preventDefault();
                }
            });
            $("#technicalissuestab").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#productstab').focus();
                    $("#productstab")[0].click();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#techDate').focus();
                    event.preventDefault();
                }
            });
            $("#techDate").keydown(function (e) {
                if (event.shiftKey && event.keyCode == 9) {
                    $('#technicalissuestab').focus();
                    $("#technicalissuestab")[0].click();
                    event.preventDefault();
                }
            });
            //Tab Focus Order for myaccount Page starts
            $("#profiletab").keydown(function (e) {
                if (event.shiftKey && event.keyCode == 9) {
                    var $navItems = $("#navbar .navItem");
                    $navItems[$navItems.length - 1].focus();
                } else if (e.which === 9) {
                    $('#firstName').focus();
                    event.preventDefault();
                }
            });
            $('#firstName').keydown(function (e) {
                if (event.shiftKey && event.keyCode == 9) {
                    $("#profiletab").focus();
                    $("#profiletab")[0].click();
                    event.preventDefault();
                }
            });
            $("#submit1").keydown(function (e) {
                if (e.which === 9) {
                    $('#orderhistorytab').focus();
                    $("#orderhistorytab")[0].click();
                    event.preventDefault();
                }
            });
            $("#orderhistorytab").keydown(function (e) {
                if (event.shiftKey && event.keyCode == 9) {
                    $("#profiletab").focus();
                    $("#profiletab")[0].click();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#ordersHistory').focus();
                    event.preventDefault();
                }
            });
            $("#contactcustomersupport").keydown(function (e) {
                if (e.which === 9) {
                    $('#security1').focus();
                    $("#security1")[0].click();
                    event.preventDefault();
                }
            });
            $("#security1").keydown(function (e) {
                if (event.shiftKey && event.keyCode == 9) {
                    $("#orderhistorytab").focus();
                    $("#orderhistorytab")[0].click();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#old-validator').focus();
                    event.preventDefault();
                }
            });
            $("#submit-profile").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#profiletab').focus();
                    $("#profiletab")[0].click();
                    $("#custZipCode").focus();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#orderhistorytab').focus();
                    $("#orderhistorytab")[0].click();
                    event.preventDefault();
                }
                return true;
            });
            $("#contactcustomersupport").keydown(function (e) {
                if (e.shiftKey && e.which === 9) {
                    $('#orderhistorytab').focus();
                    $("#orderhistorytab")[0].click();
                    $(".description a").focus();
                    event.preventDefault();
                } else if (e.which === 9) {
                    $('#security1').focus();
                    $("#security1")[0].click();
                    event.preventDefault();
                }
                return true;
            });
        }, 200);

        setTimeout(function () {
            $('.isotope').each(function () {
                var
                    $iso = $(this),
                    $isoContent = $iso.find('.isotope-content');

                eIsotope.textSize($iso);
                eIsotope.textCenter($isoContent);
                //shoehorn of link handling
                if ($(this).attr("href")) {
                    $(this).children(".image-well").addClass("hasLink");
                }

            });
        }, 200);

        // events search results page - no results display
        var resultsList = $('.popular-events-list-results li');

        // document.getElementById("dropdown").focus();
        // $('.languageSelectHeader').focus();

        // $('.languageSelectHeader').keydown(function(e) {
        //     var code = e.keyCode || e.which;
        //     if (code === 9) {  
        //         e.preventDefault();
        //         $("#languageSelectHeader").simulate('mousedown');
        //     }
        // });

        if (resultsList.length === 0) {
            $('.popular-events-list-results').hide();
            $('.no-results-display').show();
        }
        $("#languageSelectFooterNav").change(function () {
            sessionStorage.setItem("language", "footer");
        });
        if (sessionStorage.getItem("language") == "footer") {
            var $languageSelect = $('#languageSelectFooterNav');
            $languageSelect.focus();
            setTimeout(function () {
                $languageSelect.siblings('.customSelect').addClass('custom-focus-outline');
                sessionStorage.removeItem('language');
            });
        }
        $('#languageSelectFooterNav').focusout(function () {
            var $languageSelect = $('#languageSelectFooterNav');
            $languageSelect.siblings('.customSelect').removeClass('custom-focus-outline');
        });
        $("#languageSelectHeader").change(function () {
            sessionStorage.setItem("language", "header");
        });
        if (sessionStorage.getItem("language") == "header") {
            var $languageSelect = $('#languageSelectHeader');
            $languageSelect.focus();
            $('body').addClass('user-is-tabbing');
            $('.customSelect.languageSelectHeader').addClass('customSelectFocus');
            sessionStorage.removeItem('language');
        }

        $("#languageSelectLoginFooterNav").change(function () {
            sessionStorage.setItem("login_language", "footer");
        });
        if (sessionStorage.getItem("login_language") == "footer") {
            var $languageSelect = $('#languageSelectLoginFooterNav');
            $languageSelect.css('opacity', '1');
            $languageSelect.focus();
            $('.customSelect.languageSelectHeader').css('visiblity', 'hidden');
            sessionStorage.removeItem('login_language');
        }
        $('#languageSelectLoginFooterNav').focusout(function () {
            $(this).css('opacity', '0');
            $('.customSelect.languageSelectHeader').css('visiblity', 'visible');
        })
        $("#languageSelectLoginPreHeader").change(function () {
            sessionStorage.setItem("login_language", "header");
        });
        if (sessionStorage.getItem("login_language") == "header") {
            var $languageSelect = $('#languageSelectLoginPreHeader');
            $languageSelect.focus();
            $('body').addClass('user-is-tabbing');
            $('.customSelect.languageSelectHeader').addClass('customSelectFocus');
            sessionStorage.removeItem('login_language');
        }

        // polyfill for endsWith function in IE
        if (!String.prototype.endsWith) {
            String.prototype.endsWith = function (search, this_len) {
                if (this_len === undefined || this_len > this.length) {
                    this_len = this.length;
                }
                return this.substring(this_len - search.length, this_len) === search;
            };
        }
    },

    thumbnailHandler : function() {
	        					             // Check if content is scrollable
        			if($('.imglistcontent').length > 0){
        				function checkScrollable() {
            			    var element = $('.imglistcontent')[0];
            			    var isScrollable = element.scrollWidth > element.clientWidth;
            			    return isScrollable;
            			  }
            			
            			  // Show/hide arrows based on scrollable content and scroll position
            			  function toggleArrows() {
            			    if (checkScrollable()) {
            			      var scrollPosition = $('.imglistcontent').scrollLeft();
            			      if (scrollPosition === 0) {
            			        $('.arrow.left').hide();
            			      } else {
            			        $('.arrow.left').show();
            			      }
            			
            			      var maxScroll = $('.imglistcontent')[0].scrollWidth - $('.imglistcontent').outerWidth();
            			      if (scrollPosition >= maxScroll) {
            			        $('.arrow.right').hide();
            			      } else {
            			        $('.arrow.right').show();
            			      }
            			    } else {
            			      $('.arrow').hide();
            			    }
            			  }
            			
            			  // Initial toggle
            			  toggleArrows();
            			
            			  // Handle arrow click events
            			  $('.arrow.left').click(function() {
            			    $('.imglistcontent').animate({
            			      scrollLeft: '-=100'
            			    }, 'slow');
            			  });
            			
            			  $('.arrow.right').click(function() {
            			    $('.imglistcontent').animate({
            			      scrollLeft: '+=100'
            			    }, 'slow');
            			  });
            			
            			  // Recheck scrollability when the window is resized
            			  $(window).resize(function() {
            			    toggleArrows();
            			  });
            			
            			  // Recheck scrollability when the content is scrolled
            			  $('.imglistcontent').scroll(function() {
            			    toggleArrows();
            			  });
        			}		             
	},
	spotlightCards: function () {
		let currentSlide = 1;
        const totalSlides = $('.popup-slide').length;
        $('#tooltip-modal').hide();
		$(".skip-me").hide();		

		 // Show the tooltip modal when the button is clicked
      $('#tooltip-btn').on('click', function() {
        $('#tooltip-modal').fadeIn();
      });

     
      // Hide the tooltip modal when clicking outside of the modal
      $(window).on('click', function(event) {
        if ($(event.target).is('#tooltip-modal')) {
          $('#tooltip-modal').fadeOut();
        }
      });
      
        function showSlide(slideIndex) {
            $('.popup-slide').hide();
            $(`.popup-slide[data-slide=${slideIndex}]`).show();
            if(slideIndex === totalSlides){
				$(".skip-me").show();
				$(".spotlight-arrow-right-icon").hide();
			}else{
				$(".skip-me").hide();
				$(".spotlight-arrow-right-icon").show(); 
			}
            $('.slide-number').text(`${slideIndex} / ${totalSlides}`);
        }

        $('.close-btn').on('click', function(event){
			event.stopPropagation(); 
			$('#tooltip-modal').show();
            
        });
        $('.remind-me').on('click', function(){
            $('.popup-container').hide();
			//AJAX call to reminder
			var allSpotlights = $('.popup-slide').map(function(){
    			return $(this).attr('data-spotlight');
			}).get();
			
            BLC.ajax({
	            url: '/ecommerce/my-account/spotlight/dismiss_all/session?spotlightIds='+allSpotlights,
                type: 'GET'
            }, function () { });
        });
        $('.dont-remind-me').on('click', function(){
            $('.popup-container').hide();
			//AJAX call to reminder
			var allSpotlights = $('.popup-slide').map(function(){
    			return $(this).attr('data-spotlight');
			}).get();
			
            BLC.ajax({
	            url: '/ecommerce/my-account/spotlight/dismiss/permanent?spotlightIds='+allSpotlights,
                type: 'GET'
            }, function () { });
        });
        $('.next').on('click', function(e) {
			$('#tooltip-modal').hide();
            e.preventDefault();
            currentSlide = currentSlide < totalSlides ? currentSlide + 1 : 1;
            showSlide(currentSlide);
        });

        $('.prev').on('click', function(e) {
			$('#tooltip-modal').hide();
            e.preventDefault();
            currentSlide = currentSlide > 1 ? currentSlide - 1 : totalSlides;
            showSlide(currentSlide);
        });

		// Function to close the tooltip
		function closeToolTip() {
		  $('.tooltip-modal').hide(); // or .remove() if you want to remove it completely
		}
		
		// Add event listener to the body
		$('body').on('click', function(event) {
		  if (!$('.tooltip-modal').is(event.target) && $('.tooltip-modal').has(event.target).length === 0) {
		    closeToolTip();
		  }
		});
		
		//Double click blocking Init
			let clickTimer = null; 
            $('.close-btn, .spotlight-action-btn').on('click', function() { // add in case of any more class
				var blockElement = $(this);
                // If clickTimer exists, it means a click has already happened, so we block the second one
                if (clickTimer) {
                    console.log('Double click blocked.');
                   blockElement.css('pointer-events', 'none');
                    return;
                }
                // Set the timer to reset clickTimer after a delay (e.g., 300ms)
                clickTimer = setTimeout(function() {
                    clickTimer = null; 
                    console.log('Window closed.');
                    blockElement.css('pointer-events', 'auto');
                }, 5000);
            });
        //Double click blocking End 

        showSlide(currentSlide);
	},
    setActiveClass: function ($this) {
        //remove current active tabNav class
        $('.tab-nav .active, .btn-collapse.active').removeClass('active');
        //find corresponding tabNav anchor parent li
        var
            tabHref = $this.attr('href'),
            $tabToggle = $('.tab-nav .pane-toggle[href="' + tabHref + '"]').parent('li'),
            $collapseToggle = $('.btn-collapse[href="' + tabHref + '"]').parent('li');
            $(tabHref).addClass("in");
        $tabToggle.removeClass('hide').addClass('active');

        //find and remove blockers
        if ($tabToggle.find('.blocker') || $collapseToggle.find('.blocker')) {
            $tabToggle.find('.blocker').remove();
            $collapseToggle.find('.blocker').remove();
        }

        //find checkout li
        if($tabToggle.parents().hasClass("checkout-ul")){
            $tabToggle.parents().find("li").removeClass('beforeactive'); 
            eUtils.addcheckoutbeforeactive($tabToggle, $tabToggle.parents().find("li").first().find(".pane-toggle").attr("href"));
        }
    },
    footerFix: function () {
        $(".footerNav nav > ul > span > li").unwrap();
    },
    addcheckoutbeforeactive: function ($tabToggle, $firstToggle){
        $prevToggle = $tabToggle.prev("li");
        if($prevToggle.length > 0){
        $prevToggle.addClass('beforeactive');
        if($prevToggle.find(".pane-toggle").attr("href") != $firstToggle){
            eUtils.addcheckoutbeforeactive($prevToggle, $firstToggle);
        }
    }
    },
    getViewport: function () {
        var width = Math.max(
            document.documentElement.clientWidth,
            window.innerWidth || 0
        );
        if (width <= 575.98) return 'xs';
        if (width <= 767.98) return 'sm';
        if (width <= 991.98) return 'md';
        if (width <= 1199.98) return 'lg';
        return 'xl';
    }

};

var eSpinners = {
    opts: {
        lines: 17,
        length: 2,
        width: 2,
        radius: 10
    },
    show: function (id, container, opts) {
        if (!opts) opts = eSpinners.opts;

        var $wrapper = $('#' + id);
        var height = $wrapper.closest(container).height();
        var target = document.getElementById(id);
        var spinner = new Spinner(opts).spin(target);

        $wrapper.addClass('blocker').css('height', height);
    },
    hide: function (id) {
        setTimeout(function () {
            $('#' + id).removeClass('blocker').css('height', '0px');
            $('#' + id).find('.spinner').remove();
        }, 1000);
    },
    inputSpinner: function () {
        $('*[data-spinner]').focusin(function () {
            var
                id = $(this).data('spinner'),
                target = document.getElementById(id),
                spinner = new Spinner(eSpinners.opts).spin(target);

        });
    }, 
        // duplicate ID activity-indicator WCAG
    timedSpinner: function (time) {
    	$('.activity-indicator').show();
        setTimeout(function () {
        	$('.activity-indicator').hide();
        }, time);
    }
};

var eActivityIndicator = {
    show: function () {
        $('.activity-indicator').show();
    },
    hide: function (id) {
        setTimeout(function () {
            $('.activity-indicator').hide();
        }, 1000);
    }
};


var eGAFunctions = {
	gtagPromotion: function (name,id,feature_region_name,item_id,item_name){
		// console.log('Enter the gtagPromotion');
		// if(item_id == '')
		// {
		// 	console.log('1A: gtagPromotion('+name+','+id+','+feature_region_name+','+item_id+','+item_name+')');
		// 	// gtag("event", "select_promotion", {
        //        gtag("event", "view_promotion", {
		// 	  creative_slot: feature_region_name,
		// 	  promotion_id: id,
		// 	  promotion_name: name,
		// 	});
			
		// }
		// else
		// {
		// 	console.log('1B: gtagPromotion('+name+','+id+','+feature_region_name+','+item_id+','+item_name+')');
		// 	// gtag("event", "select_promotion", {
        //     gtag("event", "view_promotion", {
		// 	  creative_slot: feature_region_name,
		// 	  promotion_id: id,
		// 	  promotion_name: name,
		// 	  items: [
		// 	    {
		// 	      item_id: item_id,
		// 	      item_name: item_name,
		// 	      creative_slot: feature_region_name,
		// 	      promotion_name: name
		// 	    }
		// 	  ],
		// 	});
			
		// }
	},

    gaEvent: function (category, action, label) {

        if (typeof ga == 'function') {
            ga('master.send', 'event', category, action, label);
        }
        
           // sessionStorage.clear();
           var promoIdValue = category;
           sessionStorage.setItem("promo_id" , promoIdValue);

           var promoNameValue = label;
           sessionStorage.setItem("promo_name" , promoNameValue);
          
           var creativeNameValue =  sessionStorage.getItem("creative_name_1");

        if (label == 'undefined' || label == null || label == 'null' || label == undefined){
            label = $(this).attr('href');
        }

          if (typeof gtag == 'function') {
				//https://developers.google.com/tag-platform/gtagjs/reference/events#select_promotion
                gtag("event", "select_promotion", {
                  items: [
                    {
                      'promotion_id': category,
                      'promotion_name': label,
                      'creative_name': creativeNameValue
                  //  'action': action,
                    }
                  ]
                });
                        // }
                }
    },
    
};  

var siteOriginUrl = window.location.origin + '/ecommerce/';
var homepageUrl = window.location.href;
if(siteOriginUrl == homepageUrl){
    // localStorage.clear();
    sessionStorage.clear();
}

// $('.grm-icon.favorites, .flyout-toggle.grm-icon.shopping-cart, .footer-nav-list a').click(function () {
    $('.footer-nav-list a').click(function () {

    sessionStorage.clear();
});

// var value = 'value';
// localStorage.setItem("GetData" , value);
// localStorage.getItem("GetData")
// localStorage.clear();
// window.location.origin

// window.location.href
// grm-icon favorites

var eSortBy = {
    init: function () {
        $('.btn-sort').each(function () {
            $(this).click(function () {
                var
                    $this = $(this),
                    targetDropdown = $this.data('toggle'),
                    $dropdown = $(targetDropdown);
                if ($dropdown.hasClass('open')) {
                    $dropdown.removeClass('open');
                } else {
                    $dropdown.addClass('open');
                }
            });
        });
    }
};
//when list page is sorted via faux-dropdown, this populates the faux dropdown's text
var eSortDropdown = {
    init: function () { //
        $("#sortMethodSelector").change(function () {
            var sortByContainer = $('.sortMethodSelector select').find(":selected").attr("href");
            var sortByVerbiage = $('.sortMethodSelector select').find(":selected").text();
            var sortText = $('.sortMethodSelector span');

            if (sortByContainer.indexOf("sort=price+asc") > -1) {

                window.location.replace(sortByContainer);
                $(sortText).text(sortByVerbiage);
            }
            if (sortByContainer.indexOf("sort=price+desc") > -1) {

                window.location.replace(sortByContainer);
                $(sortText).text(sortByVerbiage);
            }
            if (sortByContainer.indexOf("sort=name+asc") > -1) {

                window.location.replace(sortByContainer);
                $(sortText).text(sortByVerbiage);
            }
            if (sortByContainer.indexOf("sort=biProductId+desc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=relevancy") > -1) {

                window.location.replace(sortByContainer);
                $(sortText).text(sortByVerbiage);
            }

        });

        // if (window.location.href.indexOf("pprd") > -1) {
        //     alert("PPRD");
        //   }else {alert("PROD")}
           
           
            if ($('#sessionDetail').text() != null || $('#sessionDetail').text() != 'null' || $('#sessionDetail').text() != 'undefined' || $('#sessionDetail').text() != '' ){
                var liveId = $('#sessionDetail').text();
                }else{
                    var liveId = 'placeholder'
                }

                
                
            $(document).on('click', function(event) {
                // add_shipping_info
			    	if (event.target.className === 'grm-btn grm-btn-primary btn-jumbo btn-checkout btn-checkout-continue-address') {

						var currency =   $(this).find(".gtag_currency").val();
						var value = $('.cartTotal').val();

						//TODO: this will need some rework
						//https://developers.google.com/tag-platform/gtagjs/reference/events#add_shipping_info

						//items will need to be populated
				    	//gtag('event', 'add_shipping_info', {
						//	currency:  currency,
						//	value: Number(value),
						//	items: items
				    	//})
				    }
              });

            // view_list_item
            if ($('.productId').text()[0] && (!$('.checkout_hide_no_address').text()[0] == true && !$('.my_cart__title').text()[0] == true && !$('#my-whish-list').text()[0] == true))  {

                  var items = [];

                  $('.gridItem').each(function () {
					var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4];
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}			
                      var item_id = $(this).find(".gtag_view_item_id").val();
                      var quantity = Number($(this).find(".gtag_view_item_qty").val());
                      //var has_options = $(this).find(".gtag_view_item_opt").val();
                      var item_brand = $(this).find(".gtag_view_item_brand").val();
                      var item_name = $(this).find(".gtag_view_item_name").val();
                      var price = Number($(this).find(".gtag_view_item_price").val());
                      var index = Number($(this).find(".gtag_index").val());
                      var promotion_id = sessionStorage.getItem("promo_id");
                      var promotion_name = sessionStorage.getItem("promo_name");  
                      //var item_category = $(this).find(".gtag_view_category").val();
					if(item_id != null)
					{
                      items.push({ item_id, quantity, item_brand, item_name, item_category, item_category2, item_category3, item_category4, item_category5, price, index, promotion_id, promotion_name});
                      items.forEach((object, i) => object.index = i + 1);
					}						
                  });
					//TODO: might need a rework
                  gtag("event", "view_item_list", {
                         items: items
                  })


              }
          


    // view_list_item
    if ($('.my_cart__title').text()[0]) {
        // if ($('.checkout_hide_no_address').text()[0] || $('.my_cart__title').text()[0] || $('#my-whish-list').text()[0]) {

        var items = [];

                  $('.view-cart-list').each(function () {
					var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4];
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}		                      
					  var item_id = $(this).find(".gtag_view_item_id").val();
                      var quantity = Number($(this).find(".gtag_view_item_qty").val());
                    //   var has_options = $(this).find(".gtag_view_item_opt").val();
                      var item_brand = $(this).find(".gtag_view_item_brand").val();
                      var item_name = $(this).find(".gtag_view_item_name").val();
                      var price = Number($(this).find(".gtag_view_item_price").val());
                      var index = Number($(this).find(".gtag_index").val());
                      var promotion_id = sessionStorage.getItem("promo_id");
                      var promotion_name = sessionStorage.getItem("promo_name");  
                     // var item_category = $(this).find(".gtag_view_category").val();
					if(item_id != null)
					{
                      items.push({ item_id, quantity, item_name, price,item_brand, index, item_category,item_category2, item_category3,item_category4, item_category5, promotion_id, promotion_name});
                      items.forEach((object, i) => object.index = i + 1);
					}
                  });

        
                    gtag("event", "view_item_list", {
                            items:  items
                    })
                
                }

                if ($('#my-whish-list').text()[0]) {
                    // if ($('.checkout_hide_no_address').text()[0] || $('.my_cart__title').text()[0] || $('#my-whish-list').text()[0]) {
                    var items = [];
            
                              $('.wish-list-item').each(function () {
				 				var categories = $(this).find(".gtag_view_category").val();
								var	item_category; 
								var	item_category2;
								var	item_category3;
								var	item_category4;
								var	item_category5;				
								if(categories != null)
								{
									categoryTokens =  categories.split('/');
									if(categoryTokens[1] != null)
									{
										item_category =categoryTokens[1];
									}
									if(categoryTokens[2] != null)
									{
										item_category2 =categoryTokens[2];
									}
									if(categoryTokens[3] != null)
									{
										item_category3 =categoryTokens[3];
									}
									if(categoryTokens[4] != null)
									{
										item_category4 =categoryTokens[4];
									}
									if(categoryTokens[5] != null)
									{
										item_category5 =categoryTokens[5];
									}
								}           
	
                                  var item_id = $(this).find(".gtag_view_item_id").val();
                                  var quantity = Number($(this).find(".gtag_view_item_qty").val());
                                //   var has_options = $(this).find(".gtag_view_item_opt").val();
                                  var item_brand = $(this).find(".gtag_view_item_brand").val();
                                  var item_name = $(this).find(".gtag_view_item_name").val();
                                  var price = Number($(this).find(".gtag_view_item_price").val());
                                  var index = Number($(this).find(".gtag_index").val());
                                  //var item_category = $(this).find(".gtag_view_category").val();
                                  var promotion_id = sessionStorage.getItem("promo_id");
                                  var promotion_name = sessionStorage.getItem("promo_name");  

								if(item_id != null)
								{
                                  items.push({ item_id, quantity, item_name, price,item_brand, index, item_category,item_category2,item_category3,item_category4,item_category5, promotion_id, promotion_name});
                                  items.forEach((object, i) => object.index = i + 1);
								}
                              });
            
                    
                                gtag("event", "view_item_list", {
                                          items:  items
                                })
                            
                            }


            $('.gridItemLink, .gtag_select_item').on('click', function () {
    
				var categories = $(this).find(".gtag_view_category").val();
				var	item_category; 
				var	item_category2;
				var	item_category3;
				var	item_category4;
				var	item_category5;				
				if(categories != null)
				{
					categoryTokens =  categories.split('/');
					if(categoryTokens[1] != null)
					{
						item_category =categoryTokens[1];
					}
					if(categoryTokens[2] != null)
					{
						item_category2 =categoryTokens[2];
					}
					if(categoryTokens[3] != null)
					{
						item_category3 =categoryTokens[3];
					}
					if(categoryTokens[4] != null)
					{
						item_category4 =categoryTokens[4];
					}
					if(categoryTokens[5] != null)
					{
						item_category5 =categoryTokens[5];
					}
				}
				
				var items = [];
                var item_id = $(this).find(".gtag_view_item_id").val();
                var quantity = Number($(this).find(".gtag_view_item_qty").val());
                var item_brand = $(this).find(".gtag_view_item_brand").val();
                var item_name = $(this).find(".gtag_view_item_name").val();
                var price = Number($(this).find(".gtag_view_item_price").val());
                var index = Number($(this).find(".gtag_index").val());
                var promotion_id = sessionStorage.getItem("promo_id");
                var promotion_name = sessionStorage.getItem("promo_name");  
                //var item_category = $(this).find(".gtag_view_category").val();

					if(item_id != null)
					{
	                    items.push({ item_id, quantity, item_name, price, item_brand,item_category,item_category2,item_category3,item_category4,item_category5,index, promotion_id, promotion_name });
					}

                gtag("event", "select_item", { 
                    items: items
		          });
            })

            $('.gridItemLink, .gtag_select_item').on('click', function () {
    
				var categories = $(this).find(".gtag_view_category").val();
				var	item_category; 
				var	item_category2;
				var	item_category3;
				var	item_category4;
				var	item_category5;				
				if(categories != null)
				{
					categoryTokens =  categories.split('/');
					if(categoryTokens[1] != null)
					{
						item_category =categoryTokens[1];
					}
					if(categoryTokens[2] != null)
					{
						item_category2 =categoryTokens[2];
					}
					if(categoryTokens[3] != null)
					{
						item_category3 =categoryTokens[3];
					}
					if(categoryTokens[4] != null)
					{
						item_category4 =categoryTokens[4];
					}
					if(categoryTokens[5] != null)
					{
						item_category5 =categoryTokens[5];
					}
				}
				
				var items = [];
                var item_id = $(this).find(".gtag_view_item_id").val();
                var quantity = Number($(this).find(".gtag_view_item_qty").val());
                var item_brand = $(this).find(".gtag_view_item_brand").val();
                var item_name = $(this).find(".gtag_view_item_name").val();
                var price = Number($(this).find(".gtag_view_item_price").val());
                var index = Number($(this).find(".gtag_index").val());
                var promotion_id = sessionStorage.getItem("promo_id");
                var promotion_name = sessionStorage.getItem("promo_name");  
                //var item_category = $(this).find(".gtag_view_category").val();

					if(item_id != null)
					{
	                    items.push({ item_id, quantity, item_name, price, item_brand,item_category,item_category2,item_category3,item_category4,item_category5,index, promotion_id, promotion_name });
					}
					
                gtag("event", "view_item", { 
					currency:  $(this).find(".gtag_currency").val(),
					value: Number($(this).find(".gtag_view_item_price").val()),
                    items: items
		          });
                })


            if ($('.order__summary').text()[0] )  {  
              
               
                var items = [];

                $('.product-item-body').each(function () {
						var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4]; 
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}		
                    var item_id = $(this).find(".gtag_view_item_id").val();
                    var quantity = Number($(this).find(".gtag_view_item_qty").val());
                    var item_brand = $(this).find(".gtag_view_item_brand").val();
                    var item_name = $(this).find(".gtag_view_item_name").val();
                    var price = Number($(this).find(".gtag_view_item_price").val());
                    var index = Number($(this).find(".gtag_index").val());
                    //var item_category = $(this).find(".gtag_view_category").val();
					// var item_variant = $(this).find(".gtag_item_attributes").val();
                    var promotion_id = sessionStorage.getItem("promo_id");
                    var promotion_name = sessionStorage.getItem("promo_name");

                    var gtagArr = $(this).find(".gtag_item_attributes").val();
                    gtagArr = gtagArr.replaceAll("{", '["')
					gtagArr = gtagArr.replaceAll("}", '"]')
					gtagArr = gtagArr.replaceAll(",", '",')
					gtagArr = gtagArr.replaceAll(", ", ', "')
					var item_variant = JSON.parse(gtagArr).sort();

                    

					if(item_id != null)
					{
	                    items.push({ item_id, quantity, item_name, price, item_brand,item_variant,item_category,item_category2,item_category3,item_category4,item_category5, index, promotion_id, promotion_name });
	                    items.forEach((object, i) => object.index = i + 1);
					}
                });
               
                  gtag("event", "purchase", {
                          'transaction_id' : $('.gtag_orderNumb').val(), 
                          'value': Number($('.gtag_totalPrice').val()),
                          'shipping': Number($('.gtag_totalShipping').val()),
                          'tax': Number($('.gtag_totalTax').val()),
						  'currency': $('.gtag_currency').val(),
                          //'program_id':  liveId.trim('\n').replace(/"/g, ''),                           
                          'items':  items
                  })
              }
                           
            
        $("#sortMethodSelector_bottom").change(function () {
            var sortByContainer = $(this).find(":selected").attr("href");
            var sortByVerbiage = $('.sortMethodSelector select option').find(":selected").attr("selected", "selected");


            if (sortByContainer.indexOf("sort=price+asc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=price+desc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=name+asc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=biProductId+desc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=relevancy") > -1) {

                window.location.replace(sortByContainer);
            }

        });

        $("#sortMethodSelector_bottom-sm").change(function () {
            var sortByContainer = $(this).find(":selected").attr("href");
            var sortByVerbiage = $('.sortMethodSelector select option').find(":selected").attr("selected", "selected");


            if (sortByContainer.indexOf("sort=price+asc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=price+desc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=name+asc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=biProductId+desc") > -1) {

                window.location.replace(sortByContainer);
            }
            if (sortByContainer.indexOf("sort=relevancy") > -1) {

                window.location.replace(sortByContainer);
            }

        });

    }
};
//when list page is sorted via faux-dropdown, this populates the faux dropdown's text
var eFaq = {
    init: function () {
        //temporary first faq item click until nested widgets are built
        $(".faq .contact-tab-nav ul li:nth-child(2) a").trigger("click");
        $(".faq .contact-tab-nav ul li:nth-child(1) a").trigger("click");
    }
};

//counts our button text characters and adds class if text breaks button width
var eButtonTextResize = {
    init: function () {

        $('.btn-jumbo, .btn-primary').each(function (index, element) {
            var
                $this = $(this),
                buttonText = $this.text();
            if ($this.is("input")) {
                buttonText = $this.val();
            }
            var charCount = buttonText.length;
            if (charCount > 11) {
                if (!$this.hasClass("expressCheckoutBtn")) {
                    $this.addClass("characterOverload");
                }
            }
        });

    }
};

//sets mobile checkout view for order-summary
var eMobileSummary = {
    init: function () {
        var summaryHeight = $(".mobileSummary").height() + 30;

        if (($(".mobileSummary").length) && ($(".checkout").length) && ($(window).width() < 767)) {
            $("footer").hide();
            $("body").css("padding-bottom", summaryHeight);
        }
    }
};

//remove hard e.whichd height and width attributes on iframes and resize video on load
var eVideo = {
    $iframes: $("iframe[src^='//www.youtube.com']"),
    $figure: $("figure"),
    init: function () {

        eVideo.$iframes.each(function () {
            $(this)
                .data('aspectRatio', this.height / this.width)
                .removeAttr('height')
                .removeAttr('width');

        });
    }
};
// // POINTS BASED SEARCH -------------------------------------------------------------------->
// // SIDEBAR SLIDER ----------------------------------------------------------------------->
// // slider ( this input is converted to the actual slider itself by the plugin,
// // so it is not in the HTML intitally )
// var pointsBasedSearchSlider = $('#points-based-search-slider'),
//     // both inputs
//     pointsBasedSearchInputs = $('input.points-based-search-input'),
//     // individual input
//     rangeFloorInput = $('#rangeFloor'),
//     rangeCeilingInput = $('#rangeCeiling'),
//     // convert input values from the DOM to type number and round off to prevent decimal values
//     // then set them as the slider min/max values
//     sliderMinVal = Math.round(parseInt($('#points-based-search-value-floor').attr('value'))),
//     sliderMaxVal = Math.round(parseInt($('#points-based-search-value-ceiling').attr('value')));
// // RESULTS SECTION -----------------=----------------------------------------------------->
// // convert the results value from the DOM to type number and round off to prevent decimal values
// var results = Math.round(parseInt($('#points-based-search-results').val())) || 0;
// //set the results defaults
// if (isNaN(results)) {
//     results = 0;
// }
// // set the value of the results display
// $('.resultsValue').text(results);
// // TICKS ---------------------------------------------------------------------------------->
// // get the tick number from the '#points-based-search-ticks' hidden input in the DOM
// var ticksInput = $('#points-based-search-ticks').attr('value');
// // set the number of ticks to default to 4
// if ((isNaN(ticksInput)) || (ticksInput === undefined) || (ticksInput === '')) {
//     ticksInput = 4;
// }
// ticksInput = parseInt(ticksInput),
//     tickNumber = ticksInput,
//     // get the range for the ticks to span
//     tickRange = sliderMaxVal - sliderMinVal,
//     // set the value of the first tick to the minimum slider value
//     firstTick = sliderMinVal,
//     // determine the length of each segment between ticks
//     segmentLength = tickRange / (ticksInput - 1),
//     // determine the number of segments between ticks
//     segments = tickRange / segmentLength,
//     // declare the array to hold the ticks
//     // and set the first value to be the minimum slider value
//     tick = firstTick,
//     sliderTicks = [tick];
// // populate the array with the values for the remaining ticks
// for (i = 0; i < segments; i++) {
//     tick = tick + segmentLength;
//     sliderTicks.push(tick);
// }
// // added document ready fiunction to display the slider only after page load,
// // otherwise it shows the empty text input while loading, not the slider
// $(function () {
//     $('.points-based-search-container').css('display', 'block');
//     // SLIDER INIT ------------------------------------------------------------------------------>
//     // create the slider and pass in the options object
//     pointsBasedSearchSlider.slider({
//         min: sliderMinVal,
//         max: sliderMaxVal,
//         range: true,
//         ticks: sliderTicks,
//         tooltip: 'hide',
//         labelledby: ['Minimum search value', 'Maximum search value'],
//         value: [sliderMinVal, sliderMaxVal],
//         formatter: function (value) {
//             return 'Current value: ' + value;
//         }
//     });
// });

// // KEY EVENTS ------------------------------------------------------------------------------->
// // create an empty array to hold the updated slider value array
// var updateSliderValue = function (e, input) {
//     // if the submit button has been disabled, enable it
//     if ($('#points-based-searchresults-submit').attr('disabled', true)) {
//         $('#points-based-searchresults-submit').removeAttr('disabled');
//     }
//     var resetValArray = [];
//     // ensure valid input values -
//     // get the currently focused input's value
//     var currentValueString = e.currentTarget.value;
//     // check the curent value for non-numeric characters
//     if (currentValueString.match(/[^0-9]/)) {
//         // if the value has non-numeric characters, remove them
//         currentValueString = currentValueString.replace((/[^0-9]/), '');
//     }
//     // set the current input value to the valid value
//     e.currentTarget.value = currentValueString;
//     // update the focused input's value with the valid input values
//     currentValueString = Math.round(parseInt(currentValueString));
//     if (input.attr('id') === rangeFloorInput.attr('id')) {
//         resetValArray[0] = currentValueString;
//         resetValArray[1] = Math.round(parseInt(rangeCeilingInput.val(), 10));
//     }
//     if (input.attr('id') === rangeCeilingInput.attr('id')) {
//         resetValArray[0] = Math.round(parseInt(rangeFloorInput.val(), 10));
//         resetValArray[1] = currentValueString;
//     }
//     return resetValArray;
// } // end updateSliderValue function

// // CALL THE updateSliderValue FUNCTION AND UPDATE THE SLIDER VALUES ON INPUT EVENT ---------->
// // update the slider values on input events
// pointsBasedSearchInputs.on('input', function (e) {
//     var that = $(this);
//     var resetValArray = updateSliderValue(e, that);
//     pointsBasedSearchSlider.slider('setValue', resetValArray);
// });

// // PAGE LOAD ---------------------------------------------------------------------------------->
// // set the floor/ceiling values for the slider on page load
// rangeCeilingInput.val(sliderMaxVal);
// rangeFloorInput.val(sliderMinVal);
// // set the input to display the placeholder text and hide the slider,
// // hide the sidebar sections, and disable the submit button
// // until a new value is typed in either input
// if (!$.isNumeric(sliderMinVal)) {
//     rangeFloorInput.val('');
//     $('#slider-container').css('display', 'none');
//     $('#points-based-searchresults-submit').attr('disabled', 'disabled');
// }
// if (isNaN(sliderMaxVal) || sliderMaxVal == '') {
//     rangeCeilingInput.val('');
//     $('#slider-container').css('display', 'none');
//     $('#points-based-searchresults-submit').attr('disabled', 'disabled');
// }
// // if both input have the same value, (or if they are both 0) hide the slider,
// // hide the sidebar sections, and disable the submit button
// // until a new value is typed in either input
// if (rangeFloorInput.val() === rangeCeilingInput.val()) {
//     $('#slider-container').css('display', 'none');
//     $('#points-based-searchresults-submit').attr('disabled', 'disabled');
// }
// if (pointsBasedSearchInputs.val() === 0) {
//     pointsBasedSearchInputs.val('');
//     $('#slider-container').css('display', 'none');
//     $('#points-based-searchresults-submit').attr('disabled', 'disabled');
// }
// // SLIDE EVENT ------------------------------------------------------------------------------->
// // set the input to refresh as the handles are slid / after they stop sliding
// pointsBasedSearchSlider.on("slide slideStop", function (slideEvt) {
//     var slideFloorValue = Math.round(parseInt(slideEvt.value[0]));
//     if (isNaN(slideFloorValue)) {
//         slideFloorValue = 0;
//     }
//     var slideCeilingValue = Math.round(parseInt(slideEvt.value[1]));
//     if (isNaN(slideCeilingValue)) {
//         slideCeilingValue = 0;
//     }
//     rangeFloorInput.val(slideFloorValue);
//     rangeCeilingInput.val(slideCeilingValue);
// });
// // if the ceiling input value is less than the floor input val,
// // set the floor input value to be equal to the ceiling input value
// $('.points-based-search-input').focusout(function () {
//     if (Math.round(parseInt(rangeFloorInput.val())) > Math.round(parseInt(rangeCeilingInput.val()))) {
//         rangeCeilingInput.val(rangeFloorInput.val());
//     }
// });
// $('#events-points-based-searchresults-submit').on('click touchend', function (e) {
//     var prices = $('.ticketPrice');

// });
// // END POINTS BASED SEARCH ------------------------------------------------------------------------------->

var results = Math.round(parseInt($('.points-based-search-results').val())) || 0;
if (isNaN(results)) {
    results = 0;
}
$('.resultsValue').text(results);

var eIsotope = {
    edit: function () {
        var $isoLink = $("a.isotope");
        $isoLink.each(function (e) {
            $(this).on("click", function (e) {
                e.preventDefault();
            });
        });
    },
    textCenter: function ($content) {
        $content.each(function () {
            var
                $this = $(this),
                height = $(this).height(),
                marginTop = (height / 2);

            $(this).css('margin-top', '-' + marginTop + 'px');
        });
    },
    textSize: function ($isotope) {
        var
            currentHeight = $isotope.height(),
            $isoContent = $isotope.find('.isotope-content'),
            currentWidth = $isoContent.width(),
            $isoLines = $isoContent.children(),
            contentContainerHeight = $isotope.find(".image-well").height(),
            paddingHeight = currentHeight / 10;

        currentHeight = currentHeight - paddingHeight;
        currentWidth = currentWidth;

        $isoLines.each(function () {

            var $this = $(this);
            var $word = $this.text();
            var contentHeight = $isoContent.height();
            var isoWidth = $isoContent.width() - 20;
            var isoMeasure = $this.children('span');
            var contentWidth = isoMeasure.innerWidth();
            var percentOverload = parseInt((isoWidth / contentWidth * 100), 10);

            if (contentWidth > isoWidth) {
                $(this).addClass("fontModified");
                $(this).parents(".isotope-content").addClass("tooWide");
                $(this).children("span").css("font-size", percentOverload + "%");
            }
            if (contentHeight > contentContainerHeight) {
                $(this).parents(".isotope-content").addClass("tooTall");
            }

        });

    },
    clickEffect: function () {
        var $isoLink = $(".flexbox a.isotope");
        $isoLink.each(function (e) {
            $(this).on("click", function (e) {
                var opts2 = {
                    lines: 15 // The number of lines to draw
                        ,
                    length: 28 // The length of each line
                        ,
                    width: 14 // The line thickness
                        ,
                    radius: 62 // The radius of the inner circle
                        ,
                    scale: 2 // Scales overall size of the spinner
                        ,
                    corners: 1 // Corner roundness (0..1)
                        ,
                    color: '#000' // #rgb or #rrggbb or array of colors
                        ,
                    opacity: 0.25 // Opacity of the lines
                        ,
                    rotate: 0 // The rotation offset
                        ,
                    direction: 1 // 1: clockwise, -1: counterclockwise
                        ,
                    speed: 1.7 // Rounds per second
                        ,
                    trail: 48 // Afterglow percentage
                        ,
                    fps: 20 // Frames per second when using setTimeout() as a fallback for CSS
                        ,
                    zIndex: 2e9 // The z-index (defaults to 2000000000)
                        ,
                    className: 'spinner' // The CSS class to assign to the spinner
                        ,
                    top: '50%' // Top position relative to parent
                        ,
                    left: '50%' // Left position relative to parent
                        ,
                    shadow: false // Whether to render a shadow
                        ,
                    hwaccel: true // Whether to use hardware acceleration
                        ,
                    position: 'absolute' // Element positioning
                }
                var $thisDiv = $(this);
                var $thisId = $thisDiv.attr("id");

                $thisDiv.children(".hasLink").addClass("exploded"); //.children(".isotope-content").fadeOut();
                eSpinners.show('isotope-spinner-wrapper', $thisId, opts2);
                e.preventDefault();
            })
        });
    }

};

//change event and ajax call for contact us page update order details select
var eUpdateOrderDetails = {
    init: function () {
        $('#ordersList').change(function () {
            eActivityIndicator.show();
            var orderNumber = $(this).find('option:selected').val();
            var csrfToken = $('[name=csrfToken]').val();

            eSpinners.show('spinner-wrapper', '#orderDetailsTable');

            BLC.ajax({
                url: "/ecommerce/contactus/getOrderDetails",
                timeout: 90000,
                type: 'POST',
                dataType: "html",
                data: {
                    orderNumber: orderNumber,
                    csrfToken: csrfToken
                },
            }, function (data) {
                eActivityIndicator.hide();
                eSpinners.hide('spinner-wrapper');
                $('#orderDetailsTable').html(data);
            });

        });
    }
};

//change event and ajax call for my account page update order history select
var eUpdateOrderHistory = {
    init: function () {
        $('#ordersHistory').change(function () {

            var orderNumber = $(this).find('option:selected').val();
            var csrfToken = $('[name=csrfToken]').val();

            eSpinners.show('spinner-wrapper', '#orderDetailsTable');
            eActivityIndicator.show();
            BLC.ajax({
                url: "/ecommerce/my-account/getOrderHistory",
                type: 'POST',
                dataType: "html",
                data: {
                    orderNumber: orderNumber,
                    csrfToken: csrfToken
                },
            }, function (data) {
                eActivityIndicator.hide();
                eSpinners.hide('spinner-wrapper');
                $('#orderDetailsTable').html(data);
            });

        });
    }
};
//change event and ajax call for my account page update order history select
var eUpdateAccountApprovals = {
    init: function () {
        $('#accountApprovals').change(function () {

            var orderNumber = $(this).find('option:selected').val();
            var csrfToken = $('[name=csrfToken]').val();

            eSpinners.show('spinner-wrapper', '#orderApprovalDetailsTable');
            eActivityIndicator.show();
            BLC.ajax({
                url: "/ecommerce/my-account/getOrderApproval",
                type: 'POST',
                dataType: "html",
                data: {
                    orderNumber: orderNumber,
                    csrfToken: csrfToken
                },
            }, function (data) {
                eActivityIndicator.hide();
                eSpinners.hide('spinner-wrapper');
                $('#orderApprovalDetailsTable').html(data);
            });

        });
    }
};
//onchange of country dropdown corresponding states will change.
var eCountrySelectUpdate = {
    init: function () {
        $('#countryId').change(function () {
            var
                selectedCountry = $(this).val(),
                $form = $(this).closest('form'),
                fullPageRefresh = $form.find("#refreshPageOnCountryChange").val();
            formId = $form.attr('id');

            if (formId == 'my-account') {
                url = "register/getStates";
            } else if (formId == 'checkout-address-form') {
                url = "/checkout?isoCountryAlpha2=";
            } else {
                url = $form.attr('action') + '/getStates';
            }
            // on change of shipping country, do a full page refresh instead of an ajax call
            if (formId == 'checkout-address-form') {
                window.location.href = BLC.servletContext + url + selectedCountry;
            } else {
                BLC.ajax({
                    url: url,
                    type: "POST",
                    dataType: "json",
                    data: {
                        country: selectedCountry
                    }
                }, function (data) {
                    if (data.error) {} else {
                        var
                            $countrySubDivisionId = $("#countrySubDivisionId"),
                            $body = $("body"),
                            bodyEditClicked = $body.data("btn-edit-clicked");
                        $countrySubDivisionId.empty();
                        $countrySubDivisionId.append('<option selected="selected" value="NONE">State/Province*</option>');
                        $countrySubDivisionId.closest('.select-container')
                            .find('.customSelectInner')
                            .empty()
                            .text($("#countrySubDivisionId option:selected").text());
                        if (bodyEditClicked !== null && bodyEditClicked == 'true') {
                            $body.data("btn-edit-clicked", null);
                        } else if (bodyEditClicked === null) {
                            $countrySubDivisionId.val('NONE').change();
                        }
                        for (row in data) {
                            $countrySubDivisionId.append('<option value="' + data[row].abbreviation + '">' + data[row].name + '</option>');
                        }
                        var state = $body.data("state-selected");
                        if (state !== null) {
                            if (state == undefined) {
                                state = null;
                                return false;
                            }
                            $countrySubDivisionId.val(state).change();
                            $body.data("state-selected", null);
                        }
                    }
                });
            }
        });
    }
};

var eSocial = {
    init: function () {
        $(".socialShares a, .socialIcons a").each(function () {
            socialURL = $(this).attr("href");
            currentURL = window.location.href;
            newURL = socialURL.replace('full_URL', currentURL);
            $(this).attr("href", newURL);
        });
    }
};

var eGlobalAlert = {
    init: function () {
        $('.globalAlert').on("click", function () {
            $(this).slideUp();
        });
    }
};

var eMusicPreview = {
    init: function () {
        var listenWidget = $(".listen .widget");

        listenWidget.each(function () {

            var thisSong = $(this).siblings("audio")[0];
            var playTarget = $(this).children(".endorIcon");
            var thisStopwatch = $(this).children(".stopwatch");

            playTarget.each(function () {

                var thisWidget = $(this).parents(".widget");
                var thisButton = thisWidget.children(".endorIcon");

                thisStopwatch.TimeCircles({
                    "animation": "smooth",
                    "total_duration": 30,
                    "direction": "Counter-clockwise",
                    "start": false,
                    "count_past_zero": false,
                    "bg_width": 1,
                    "circle_bg_color": "#666666",
                    "fg_width": 0.07,
                    "time": {
                        "Days": {
                            "show": false
                        },
                        "Hours": {
                            "show": false
                        },
                        "Minutes": {
                            "show": false
                        },
                        "Seconds": {
                            "text": "",
                            "color": "#CCCCCC",
                            "show": true
                        }
                    }
                }).addListener(function (unit, value, total) {
                    var thisStopwatch = $(this);
                    var thisButton = $(this).siblings(".endorIcon");
                    //when time runs out...
                    if (total === 0) {
                        thisStopwatch.TimeCircles().destroy();
                        thisStopwatch.TimeCircles({
                            "animation": "smooth",
                            "total_duration": 30,
                            "direction": "Counter-clockwise",
                            "start": false,
                            "count_past_zero": false,
                            "bg_width": 1,
                            "circle_bg_color": "#666666",
                            "fg_width": 0.07,
                            "time": {
                                "Days": {
                                    "show": false
                                },
                                "Hours": {
                                    "show": false
                                },
                                "Minutes": {
                                    "show": false
                                },
                                "Seconds": {
                                    "text": "",
                                    "color": "#CCCCCC",
                                    "show": true
                                }
                            }
                        });
                        //swap the play/pause
                        thisButton.toggleClass("endor-pause").toggleClass("endor-play");
                    }
                });

                $(this).on("click", function () {
                    if (thisWidget.hasClass("playing")) {
                        thisSong.pause();
                        thisWidget.removeClass("playing");
                        thisButton.removeClass("endor-pause").addClass("endor-play");
                        thisStopwatch.TimeCircles().stop();
                    } else {
                        thisWidget.addClass("playing");
                        thisSong.play();
                        thisButton.removeClass("endor-play").addClass("endor-pause");
                        thisStopwatch.TimeCircles().start();
                    }

                });
            });
        });
    }
};
var eEvents = {
    init: function () {
        $(document).on('click', '.searchfeatureEvents', function (e) {
            e.preventDefault();
            eEvents.requestFeaturedEvents();
        });

        //init events if the button exists
        if ($('.searchfeatureEvents').length > 0) { // Endor-1109 update to jquery 3.4.1
            eEvents.requestFeaturedEvents();
        }

        $('.locationFilter').keypress(function (e) {
            if (e.which == 13) { //Enter key pressed
                e.preventDefault();
                eEvents.requestFeaturedEvents();
            }
        });

        // EVENTS HOME PAGE LAYOUT MODIFICATIONS ---------------------------------------------------- >
        // this function adds a comma and a space between the city and state
        // if the displayed address info includes them by adding a class with an :after pseudo element
        var eventCity = $('.popular-event-city'),
            eventState = $('.popular-event-state');
        $.each(eventCity, function (i) {
            if (($(eventCity[i]).text() != '') && ($(eventState[i]).text() != '')) {
                $(eventCity[i]).addClass('venue-address-format-city');
                $(eventState[i]).addClass('venue-address-format-state');
            }
        });

        // SEARCH RESULTS CONTAINER --------------------------------------------------------------- >
        // if the active tab has search results without any tertiary search results to display
        // add the '.events-no-children' class to change the flex display
        $(document).ready(function () {
            var eventsIconSearchNoChildrenCheck = function () {
                var itemsWithSubcategories = $('.icon-search-secondary-category.active').find('.no-children');
                if (itemsWithSubcategories.length > 0) {
                    $('.icon-search-secondary-category.active').addClass('events-no-children');
                }
            }
            $('.icon-search-primary-category').on('shown.bs.tab', function (e) {
                eventsIconSearchNoChildrenCheck();

                $(".icon-search-primary-category .primary-category").each(function () {
                    if ($(this).hasClass("active")) {
                        $(this).attr("tabindex", "0");
                        $(this).attr("aria-selected", "true");
                        $(this).prevAll('li').attr("tabindex", "0");
                        $(this).nextAll('li').attr("tabindex", "-1");
                    } else {
                        $(this).attr("aria-selected", "false");
                    }
                });
                //secondary category keyboard event
                $('.icon-search-secondary-category.active .icon-search-tertiary-category-item').last().on('keydown', function (e) {
                    if ((!e.shiftKey && e.which === 9)) {
                        if ($(".icon-search-primary-category .primary-category.active").next('li').length) {
                            e.preventDefault();
                            $(".icon-search-primary-category .primary-category.active").next('li').focus();
                        }
                    }
                });
            });
            eventsIconSearchNoChildrenCheck();

            $.each($('.icon-search-results-row'), function () {
                var shortListItems = $(this).find($('.icon-search-secondary-category-item'));
                if (shortListItems.length <= 5) {
                    $(shortListItems).addClass('search-results-short-list');
                    $(this).addClass('search-results-short-list-row');
                }
            });
            // set tab focus on active list
            $('.icon-search-primary-category .primary-category.active').attr("tabindex", "0");
            $('.icon-search-primary-category .primary-category.active').attr("aria-selected", "true");
            //primary category keyboard event
            $(".icon-search-primary-category .primary-category").each(function () {
                $(this).on('keydown', function (e) {
                    if (e.keyCode === 13) {
                        if ($(this).is(":focus")) {
                            e.preventDefault();
                            $(this).click();
                        }
                    } else if (!e.shiftKey && e.keyCode === 9) {
                        if (!$(this).hasClass("active")) {
                            if ($(this).next('li').length) {
                                e.preventDefault();
                                $(this).next('li').focus();
                            } else {
                                // disable a tag tabindex for active
                                $('.icon-search-secondary-category.active').find('a').attr("tabindex", "-1");
                            }
                        } else {
                            //enable a tag tabindex for active 
                            $('.icon-search-secondary-category.active').find('a').attr("tabindex", "0");
                            if (!$('.icon-search-secondary-category.active').find('a').length) {
                                if ($(this).next('li').length) {
                                    e.preventDefault();
                                    $(this).next('li').focus();
                                }
                            }
                        }
                    } else if (e.shiftKey && e.keyCode === 9) {
                        if ($(this).prev('li').length) {
                            e.preventDefault();
                            if ($(this).prev('li').hasClass("active")) {
                                if ($('.icon-search-secondary-category.active').find('a').length) {
                                    $('.icon-search-secondary-category.active').find('a').last().focus();
                                } else {
                                    $(this).prev('li').focus();
                                }
                            } else {
                                $(this).prev('li').focus();
                            }
                        }
                    }
                });
            });
            //secondary category keyboard event
            $('.icon-search-secondary-category.active .icon-search-tertiary-category-item').last().on('keydown', function (e) {
                if ((!e.shiftKey && e.which === 9)) {
                    if ($(".icon-search-primary-category .primary-category.active").next('li').length) {
                        e.preventDefault();
                        $(".icon-search-primary-category .primary-category.active").next('li').focus();
                    }
                }
            });
        });

        // this controls the left and right gradient in the icon search results section in mobile viewports
        var mobileScrollGradients = function () {
            var resultsContainer = $('.icon-search-secondary-category.active');
            // hide the right gradient if the resultsContainer contains
            // all of the search result items without needing to scroll
            if ($('.icon-search-secondary-category.active').prop('scrollWidth') === $(resultsContainer).innerWidth()) {
                $('.mobile-border-gradient-right').hide();
            }
            // scroll event handler
            resultsContainer.scroll(function () {
                var scrollDistance = $(resultsContainer).scrollLeft(),
                    resultsContainerWidth = $(resultsContainer).innerWidth(),
                    resultsContainerScrollWidth = $('.icon-search-secondary-category.active').prop('scrollWidth'),
                    leftMobileGradient = $('.mobile-border-gradient-left'),
                    rightMobileGradient = $('.mobile-border-gradient-right');

                if (scrollDistance === 0) {
                    leftMobileGradient.fadeOut(500);
                } else {
                    leftMobileGradient.fadeIn(500);
                }
                if (scrollDistance + resultsContainerWidth === resultsContainerScrollWidth) {
                    rightMobileGradient.fadeOut(500);
                } else {
                    rightMobileGradient.fadeIn(500);
                }
            });
        }
        // call the mobileScrollGradients function on page load so the gradients work on the initial tab pane
        mobileScrollGradients();
        // call the call the mobileScrollGradients function on tab change so it works When the tabs are switched
        $('.icon-search-primary-category').on('shown.bs.tab', function () {
            $('.mobile-border-gradient-left, .mobile-border-gradient-right').hide();
            $('.icon-search-secondary-category.active').scrollLeft(0);
            $('.mobile-border-gradient-right').show();
            mobileScrollGradients();
        });

        // EVENTS HOME PAGE LOCATION AND DATERANGE FILTERS --------------------------------------------------- >
        // DATERANGE PICKER FILTER ------------------------------------------- >
        // instantiate the daterange picker

        // layout and functionality modifications
        // add the icon we want to the plugin dropdown trigger container
        $('.dr-presets').html('<a class="date-range-picker-trigger" href="#"><img src="https://s7d4.scene7.com/is/image/BIworldwide/calendar-check-B-MM?fmt=png-alpha&amp;$GRMIcon$" alt="Date Picker"><span class="sr-only">Date Range Picker</span></a>');
        $('.dr-presets a').on('click tap', function (e) {
            e.preventDefault();
        });
        // add the "activate" class to the datepicker container when the last preset list item is clicked ( date range option )
        // so that the callback that gets triggered by the presets key in the Calander object
        // wont submit the form when a new date is saved
        $('.dr-list-item:last-of-type').on('click', function () {
            $('.daterange--double').addClass('activate');
        });
        // This function prevents the headers on the search results page from creating widows,
        // which was putting apersands on their own line in longer headings
        $('.icon-search-results-column-header').each(function () {
            // get the text
            var textString = $(this).html();
            // use regex to replace the last space in the string with a &nbsp;
            textString = textString.replace(/ ([^ ]*)$/, '&nbsp;$1');
            // insert the new string
            $(this).html(textString);
        });

        // LOCATION FILTER ------------------->
        $('.eventsResultsFilter').customSelect();
        // show / hide the location filter dropdown content on the events HOME page
        $('#location-filter-trigger').on('click tap', function (e) {
            e.preventDefault();
            // clear the input so the placeholder text shows when the drawer is opened
            // in case the user starts typing in the input and navigates away from the drawer
            // and then opens it again
            $('.location-filter-search-input').val('');
            // clear the input value, and hide the dropdown on click of the search icon
            $('.location-filter-search-icon').on('click tap', function (e) {
                e.preventDefault();
                $('.location-filter-dropdown-container').removeClass('filter-dropdown-show');
                $('.location-filter-search-input').val('');
            });
            // hide/show the current dropdown section
            $(this).next().toggleClass('filter-dropdown-show');
            // get a ref to $( this ) for the document click event
            var $this = $(this);
            // close the dropdown sections if the user clicks/taps anywhere else on the DOM
            $(document).on('click touchend', function (e) {
                if ($this.parent().has(e.target).length === 0) {
                    $this.next().removeClass('filter-dropdown-show');
                    $(this).off(e);
                }
            });
        });
        //toggle tab index for date range picker
        $('.date-range-picker-trigger').on('click tap', function (e) {
            $('.dr-list-item').each(function () {
                if ($(this).attr('tabindex') == "-1") {
                    $(this).attr('tabindex', '0');
                } else {
                    $(this).attr('tabindex', '-1');
                }
            })
        });

        //toggle tab index for location
        $('i.location-edit-icon').on('keydown', function (e) {
            if (e.which == 13) {
                e.preventDefault();
                //toggle tabindex
                if ($('.sidebar-location-filter-search-input').attr("tabindex") == "0") {
                    $('.sidebar-location-filter-search-input').attr("tabindex", "-1");
                } else {
                    $('.sidebar-location-filter-search-input').attr("tabindex", "0");
                }
                if ($('.location-submit-trigger').attr("tabindex") == "0") {
                    $('.location-submit-trigger').attr("tabindex", "-1");
                } else {
                    $('.location-submit-trigger').attr("tabindex", "0");
                }
                if ($('.current-location').attr("tabindex") == "0") {
                    $('.current-location').attr("tabindex", "-1");
                } else {
                    $('.current-location').attr("tabindex", "0");
                }
                $('.sidebar-location-filter-dropdown-container').toggleClass('filter-dropdown-show');
                $('.sidebar-location-filter-search-input').val('');

                $('.sidebar-location-filter-search-input').focus();

                $('.sidebar-location-filter-search-icon').on('keydown', function (e) {
                    if (e.which == 13) {
                        e.preventDefault();
                        $('.sidebar-location-filter-dropdown-container').removeClass('filter-dropdown-show');
                        $('.sidebar-location-filter-search-input').val('');
                    }
                });

                // populate the hidden input for location data when the location icon is clicked
                $('.location-submit-trigger').on('keydown', function (e) {
                    if (e.which == 13) {
                        var locationInputValue = $('.sidebar-location-filter-search-input').val();
                        $('#location').val(locationInputValue);
                        $('#events-filter-form').submit();
                    }
                });

                // populate the hidden input for location data when the "use my default location" link is clicked
                $('.current-location').on('keydown', function (e) {
                    if (e.which == 13) {
                        $('#location').val('default');
                        $('#events-filter-form').submit();
                    }
                });
                var $this = $(this);
                $(document).on('click touchend', function (e) {
                    // if the user clicks anywhere on the page except the location text input, close the location dropdown
                    if ($this.parent().has(e.target).length === 0 && !($(e.target).hasClass('sidebar-location-filter-search-input'))) {
                        $('.sidebar-location-filter-dropdown-container').removeClass('filter-dropdown-show');
                        $(this).off(e);
                    }
                });
            }
        });
        $('.dr-list-item:last-of-type').keydown(function (e) {
            if (e.which == 13) {
                $('.daterange--double').addClass('activate');
            }
        });
        $('.view-more-button-container').keydown(function (e) {
            if (e.which == 13) {
                $(this).find('a')[0].scrollIntoView();
            }
        });

        // show / hide the location filter dropdown content in the sidebar on the events SEARCH RESULTS page
        $('i.location-edit-icon').on('click tap', function (e) {
            e.preventDefault();
            //toggle tabindex
            if ($('.sidebar-location-filter-search-input').attr("tabindex") == "0") {
                $('.sidebar-location-filter-search-input').attr("tabindex", "-1");
            } else {
                $('.sidebar-location-filter-search-input').attr("tabindex", "0");
            }
            if ($('.location-submit-trigger').attr("tabindex") == "0") {
                $('.location-submit-trigger').attr("tabindex", "-1");
            } else {
                $('.location-submit-trigger').attr("tabindex", "0");
            }
            if ($('.current-location').attr("tabindex") == "0") {
                $('.current-location').attr("tabindex", "-1");
            } else {
                $('.current-location').attr("tabindex", "0");
            }
            $('.sidebar-location-filter-dropdown-container').toggleClass('filter-dropdown-show');
            $('.sidebar-location-filter-search-input').val('');

            $('.sidebar-location-filter-search-input').focus();
            $('.sidebar-location-filter-search-icon').on('click tap', function (e) {
                e.preventDefault();
                $('.sidebar-location-filter-dropdown-container').removeClass('filter-dropdown-show');
                $('.sidebar-location-filter-search-input').val('');
            });
            // populate the hidden input for location data when the location icon is clicked
            $('.location-submit-trigger').on('click tap', function () {
                var locationInputValue = $('.sidebar-location-filter-search-input').val();
                $('#location').val(locationInputValue);
                $('#events-filter-form').submit();
            });
            // populate the hidden input for location data when the "use my default location" link is clicked
            $('.current-location').on('click tap', function () {
                $('#location').val('default');
                $('#events-filter-form').submit();
            });
            var $this = $(this);
            $(document).on('click touchend', function (e) {
                // if the user clicks anywhere on the page except the location text input, close the location dropdown
                if ($this.parent().has(e.target).length === 0 && !($(e.target).hasClass('sidebar-location-filter-search-input'))) {
                    $('.sidebar-location-filter-dropdown-container').removeClass('filter-dropdown-show');
                    $(this).off(e);
                }
            });
        });
        // mobile overlay animation
        $('.events-sidebar-filter-trigger').on('click tap', function (e) {
            e.preventDefault();
            $('.filters, .mobile-overlay').toggleClass('events-sidebar-animation-in');
            $('.mobile-sidebar-status-icon, .sidebar-header-icon').toggleClass('rotate-icon-forward');
        });
        // end home page location and date filters

        // EVENTS RESULTS PAGE PAGINATION --------------------------------------------------- >
        var pagination = function () {
            var searchResultsPaginationInput = $('.search-results-pagination input[type="text"]'),
                searchResultsPaginationInputValue = Math.round(parseInt($(searchResultsPaginationInput).val())),
                searchResultsPaginationControls = $('.search-results-pagination .pagination-icon-container a'),
                searchResultsPaginationRange = Math.round(parseInt($('#page-count').text().replace(/[^0-9]/g, ''))),
                searchResultsViewSelector = $('.search-results-view-selector');
            // ON PAGE LOAD --------------------------------------------------- >
            // if there is only one page of results, disable the controls
            if (searchResultsPaginationRange === 1) {
                $(searchResultsPaginationControls).addClass('disableLink');
                $(searchResultsPaginationControls).attr('disabled', 'disabled');
            }
            if (searchResultsPaginationRange === searchResultsPaginationInputValue) {
                $(searchResultsPaginationControls[1]).addClass('disableLink');
                $(searchResultsPaginationControls[1]).attr('disabled', 'disabled');

            }
            // results per page control
            searchResultsViewSelector.on('click touchend', function (e) {
                e.preventDefault();
                searchResultsViewSelector.removeClass('search-results-active');
                $(this).addClass('search-results-active');
            });
            // if the first results page number returned is one,
            // disable the back arrow control
            if (Math.round(parseInt(searchResultsPaginationInput.val()) === 1)) {
                $(searchResultsPaginationControls[0]).addClass('disableLink');
            }
            // if the user selects the input ( clearing it ), does nothing,
            // and clicks outside the input, set the input value back to the original value
            $(searchResultsPaginationInput).on('blur', function () {
                if ($(searchResultsPaginationInput).val() === '') {
                    $(searchResultsPaginationInput).val(searchResultsPaginationInputValue);
                }
            });
            // WHEN THE USER FOCUSES AND TYPES IN THE PAGINATION INPUT:
            // validate form inputs
            var inputValidator = function (input) {
                // clear the input on focus
                $(input).on('focus', function (e) {
                    e.currentTarget.value = '';
                });
                $(input).on('input', function (e) {
                    // validate input values -
                    // get the current value of the input
                    var currentInputValueString = e.currentTarget.value;
                    // check the curent value for non-numeric characters,
                    // and check if it isNaN()
                    if (currentInputValueString.match(/[^0-9]/) || isNaN(currentInputValueString)) {
                        // if the value has non-numeric characters, remove them
                        currentInputValueString = currentInputValueString.replace((/[^0-9]/), '');
                        // convert the input value to type number and round it off to prevent decimal values
                        currentInputValueString = Math.round(parseInt(currentInputValueString));
                        // set the current input value to the valid value
                        e.currentTarget.value = currentInputValueString;
                        // handler for isNaN()
                        if (isNaN(currentInputValueString)) {
                            currentInputValueString = '';
                            e.currentTarget.value = currentInputValueString;
                        }
                    }
                    // make sure the user doesn't exceed the max page range
                    if ($(input).val() >= searchResultsPaginationRange) {
                        // reset the value if it is over the max
                        e.currentTarget.value = searchResultsPaginationRange;
                        // disable the appropriate link
                        $(searchResultsPaginationControls[1]).addClass('disableLink');
                    } else {
                        $(searchResultsPaginationControls[1]).removeClass('disableLink');
                    }
                    // make sure the user doesn't go below the min page range
                    // parse the input value
                    currentInputValueString = Math.round(parseInt(currentInputValueString));
                    if (currentInputValueString === 0) {
                        // reset the value to one if it is less than one
                        e.currentTarget.value = 1;
                        // disable the appropriate link
                        $(searchResultsPaginationControls[0]).addClass('disableLink');
                    } else {
                        $(searchResultsPaginationControls[0]).removeClass('disableLink');
                    }
                });
            }
            // call inputValidator()
            inputValidator(searchResultsPaginationInput);
            // WHEN THE USER FOCUSES AND TYPES IN THE INPUT: -------------------->
            // disable pagination controls if the input value
            // is greater than the upper range limit,
            // or it is less than or equal to one
            var disablePaginationControl = function (input, controls, range) {
                $(input).on('input', function (e) {
                    // clear the disabled attr and remove the 'disableLink' class
                    // if they have been set
                    $.each(controls, function (i) {
                        if ($(controls[i]).attr('disabled', 'disabled')) {
                            $(controls[i]).parent().removeClass('disableLink');
                            $(controls[i]).removeAttr('disabled');
                        }
                    });
                    // get the input value, parse it, and round it off
                    var parseInputValue = Math.round(parseInt($(input).val()));
                    // get the range value, parse it, and round it off
                    var parseRange = Math.round(parseInt(range));
                    // handlers for isNaN()
                    if (isNaN(parseInputValue)) {
                        parseInputValue = 0;
                    }
                    if (isNaN(parseRange)) {
                        parseRange = 0;
                    }
                    // set the disabled attr and add the 'disableLink' class
                    // if the input value is <= 1, or if it is >= the range value
                    if ((parseInputValue) <= 1) {
                        $(controls[0]).attr('disabled', 'disabled');
                        $(controls[0]).parent().addClass('disableLink');
                        return false;
                    }

                    if ((parseInputValue) >= parseRange) {
                        $(controls[1]).attr('disabled', 'disabled');
                        $(controls[1]).parent().addClass('disableLink');
                        return false;
                    }
                    if (parseRange === 1) {
                        $(controls).addClass('disableLink');
                        return false;
                    }
                });
                // WHEN THE USER CLICKS THE PAGINATION CONTROLS:-------------------->
                // disable pagination controls if the input value
                // is greater than the upper range limit,
                // or it is less than or equal to one
                $(searchResultsPaginationControls).on('click touchend', function (e) {
                    e.preventDefault();
                    // get the value
                    var inputValue = Math.round(parseInt($(searchResultsPaginationInput).val()));
                    // left arrow - decrements the value if the value is > one
                    if ((e.currentTarget === searchResultsPaginationControls[0]) && (inputValue > 1)) {
                        inputValue--;
                        $(searchResultsPaginationInput).val(inputValue);
                    };
                    // right arrow - increments the value if the value is < the top of the results range
                    if ((e.currentTarget === searchResultsPaginationControls[1]) && (inputValue < (searchResultsPaginationRange))) {
                        inputValue++;
                        $(searchResultsPaginationInput).val(inputValue);
                    };
                    // disable the appropriate controls
                    if (inputValue > 1) {
                        $(searchResultsPaginationControls[0]).removeClass('disableLink');
                    } else if (inputValue === 1) {
                        $(searchResultsPaginationControls[0]).addClass('disableLink');
                        return false;
                    }
                    if (inputValue < searchResultsPaginationRange) {
                        $(searchResultsPaginationControls[1]).removeClass('disableLink');
                    } else if (inputValue === searchResultsPaginationRange) {
                        $(controls[1]).attr('disabled', 'disabled');
                        $(searchResultsPaginationControls[1]).addClass('disableLink');
                        $(this).parents('.search-results-pagination').find('.events-pagination-form').submit();
                        return false;
                    }
                    // submit the form
                    var pageNum = Math.round(parseInt($(this).parents('.search-results-pagination').find('.events-page-num').val()));
                    $(this).parents('.search-results-pagination').find('.events-pagination-form').submit();
                    $(this).off(e);
                });
            }
            // call disablePaginationControl()
            disablePaginationControl(searchResultsPaginationInput, searchResultsPaginationControls, searchResultsPaginationRange);
            // end results page pagination
        }();
        // SIDE BAR SEARCH RESULTS SECTION FUNCTIONALITY ------------------------------------------ >
        // on page load, if there is a search results item in either the "team" or "venue" sections that has the checked attr checked
        // collapse all of the items except the selected one, and set up a click event listener
        // on the radio label so that when it is clicked, the item list expands and the form submits
        $(document).ready(function () {
            // get all the radio containers that are not in the location section
            $('input[type="radio"]:checked').next().find('.custom-radio-button-checked').show();
            var $radioContainers = $('.filter').not('.location').find($('.radio-container'));
            var sideBarMakeSelection = function () {
                var $radioLabels = $($radioContainers).find($('.search-results-subcat-item-label')),
                    $eventsSearchResultsSelectedItem = $($radioContainers).find($('input[type="radio"]:checked')),
                    $radioButtons = $($radioContainers).find($('input[type="radio"]')),
                    $eventContainers = $($radioContainers).find($('.event')),
                    $viewMoreButtonContainer = $($radioContainers).parents('.events-container').find($('.view-more-button-container'));
                // on page load, if a result item has the checked attr set to checked, only display the selected item in that sidebar section
                // and a reset button that clears the selection and displays the full list of search results when the selected item's label is clicked
                // - if there is more than one selected item - do this
                if ($eventsSearchResultsSelectedItem.length > 1) {
                    // hide the 'View More' button ( if it is visible )
                    $viewMoreButtonContainer.fadeOut(500);
                    //prevent duplicate buttons on the selected results item
                    $($radioContainers).find($('.radio-reset-button')).remove();
                    // add the 'filtered' class to the parent container
                    $eventsSearchResultsSelectedItem.closest($('.event')).addClass('filtered');

                    $eventsSearchResultsSelectedItem.next().find($('.custom-radio-button-checked')).show();
                    // create / add the reset button html to the DOM
                    $eventsSearchResultsSelectedItem.parent().find('.search-results-subcat-item-label').after('<a class="radio-reset-button" href="javascript: void(0)"><i class="reset-icon endorIcon endor-close"></i></a>');
                    // hide all of the results options but the currently selected one
                    $eventContainers.filter(':not(.filtered, .hidden-event)').slideUp(500);
                    // if the selected event's parent container was hidden as part of the "view more" button jQuery ( see grid.js ),
                    // reset display: none; to show the selected item on page load
                    if ($eventsSearchResultsSelectedItem.parents('.event').hasClass('hidden-event')) {
                        $eventsSearchResultsSelectedItem.parents('.event').show();
                    }
                }
                // - if there is only one selected item - do this
                if ($eventsSearchResultsSelectedItem.length === 1) {
                    // now we need the elements for the relevant section only
                    var $currentRadioSelection = $radioContainers.find($('input[type="radio"]:checked')),
                        $currentRadioSelectionParentContainer = $currentRadioSelection.parents('.radio-container'),
                        $currentRadioSelectionAllRadios = $currentRadioSelectionParentContainer.find($('input[type="radio"]')),
                        $currentRadioSelectionAllRadioLabels = $currentRadioSelectionParentContainer.find('.search-results-subcat-item-label'),
                        $currentRadioSelectionAllEvents = $currentRadioSelectionParentContainer.find('.event'),
                        $currentRadioSelectionResetButton = $currentRadioSelectionParentContainer.find('.radio-reset-button'),
                        $currentRadioSelectionListToggleButton = $currentRadioSelectionParentContainer.parents('.events-container').find('.view-more-button-container');
                    // same as above except only for the relevant section
                    $currentRadioSelectionListToggleButton.fadeOut(500);
                    $currentRadioSelectionResetButton.remove();
                    $currentRadioSelection.closest($('.event')).addClass('filtered');
                    $eventsSearchResultsSelectedItem.next().find($('.custom-radio-button-checked')).show();
                    $currentRadioSelection.parent().find('.search-results-subcat-item-label').after('<a class="radio-reset-button" href="javascript: void(0)"><i class="reset-icon endorIcon endor-close"></i></a>');
                    $currentRadioSelectionAllEvents.filter(':not(.filtered, .hidden-event)').slideUp(500);
                    if ($currentRadioSelection.parents('.event').hasClass('hidden-event')) {
                        $currentRadioSelection.parents('.event').show();
                    }
                }
            } // end sideBarMakeSelection function
            // call the sideBarMakeSelection function on page load
            sideBarMakeSelection();
            // when the reset button is clicked, check which section the click happened in
            // if the clear button in the "venue" section was clicked, clear the disabled and checked states on the selected item,
            // replace the 'View More' button if it is visible, show all of the options, and remove the reset button html from the DOM in the venue section,
            // if the clear button in the "team" section was clicked, do the above to both the "team" and "venue" sections
            var sideBarResetSubmit = function (selectedItems) {
                $(selectedItems).on('click touchend', function (e) {
                    // get the class name of the section the click event happened in and split it into an array
                    // the section class is hard coded in the template so should not change
                    var sectionClassNameArray = $(e.currentTarget).parents('section').attr('class').split(' ');
                    // if the user is changing the venue, dont reset the other selected filter items ( team, etc )
                    if ($.inArray('venue', sectionClassNameArray) !== -1) {
                        var $radioContainer = $(e.currentTarget).parents('.radio-container'),
                            $resetButton = $radioContainer.find('.radio-reset-button'),
                            $toggleItemListButton = $radioContainer.find('.view-more-button-container'),
                            $eventContainers = $radioContainer.find('.event'),
                            $selectedItem = $radioContainer.find('input[type="radio"]:checked');
                        // remove the reset button from the DOM
                        $resetButton.remove();
                        // replace the 'View More' button
                        $toggleItemListButton.fadeIn(500);
                        // don't toggle the selected item or the hidden events controlled by the 'view more' button
                        $eventContainers.filter(':not(.filtered, .hidden-event)').slideDown(500);
                        // uncheck the selected radio button
                        $selectedItem.prop('checked', false);
                        $selectedItem.next().find($('.custom-radio-button-checked')).hide();
                        $selectedItem.closest($('.event')).removeClass('filtered');
                        // allow the animation to complete before the form gets submitted
                        setTimeout(function () {
                            $('#events-filter-form').submit();
                        }, 500);
                    }
                    // if the user is changing any parameter besides the venue, reset all selected filter items
                    if ($.inArray('team', sectionClassNameArray) !== -1) {
                        var $allViewMoreButtonContainers = $('.view-more-button-container'),
                            $allEventContainers = $('.event'),
                            $allEventsSearchResultsSelectedItems = $radioContainers.find($('input[type="radio"]:checked')),
                            $allRadioResetButtons = $('.radio-reset-button');
                        // remove the reset buttons from the DOM
                        $allRadioResetButtons.remove();
                        // replace the 'View More' buttons
                        $allViewMoreButtonContainers.fadeIn(500);
                        // don't toggle the selected items or the hidden events controlled by the 'view more' buttons
                        $allEventContainers.filter(':not(.filtered, .hidden-event)').slideDown(500);
                        // uncheck and reset the selected radio buttons to the default state
                        $allEventsSearchResultsSelectedItems.next().find($('.custom-radio-button-checked')).hide();
                        $allEventsSearchResultsSelectedItems.prop('checked', false);
                        $allEventsSearchResultsSelectedItems.closest($('.event')).removeClass('filtered');
                        setTimeout(function () {
                            $('#events-filter-form').submit();
                        }, 500);
                    }
                });
            };
            // after the page loads, when any radio button or label is clicked, submit the form
            var $currentRadioSelectionsButtons = $('.filtered').find($('.radio-reset-button')),
                $currentRadioSelectionsLabels = $('.filtered').find($('.search-results-subcat-item-label')),
                $currentSelections = $currentRadioSelectionsButtons.add($currentRadioSelectionsLabels);
            // pass currentSelections to the sideBarResetSubmit() function so it is listening
            // for a click event on the reset button if there is one in the DOM
            sideBarResetSubmit($currentSelections);
            // set up an event listener that will submit the form
            // for all of the radios that are not currently selected
            var unfilteredEvents = $('#events-filter-form').find($('.event')).not('.filtered'),
                $radioLabels = $(unfilteredEvents).find($('.search-results-subcat-item-label')),
                $radioButtons = $(unfilteredEvents).find($('.custom-radio-button')),
                // include all of the labels and custom radio buttons in the selection
                allRadiosAndLabels = $radioButtons.add($radioLabels);
            // listener for all of the radios and labels
            $.each(allRadiosAndLabels, function (i) {
                $(allRadiosAndLabels[i]).on('click', function (e) {
                    // toggle visibiltity and checked prop of any checked custom radios
                    $(this).parents('section').find($('.custom-radio-button-checked')).hide();
                    $(this).parents('section').find($('input[type="radio"]')).prop('checked', false);
                    // set visibiltity and checked prop of the currently selected custom radio
                    $(this).parents('.radio').find($('.custom-radio-button-checked')).show();
                    $(this).parents('.radio').find($('input[type="radio"]')).prop('checked', true);
                    // submit the #events-filter-form ( precedes the sidebar in the DOM )
                    $('#events-filter-form').submit();
                });
                $(allRadiosAndLabels[i]).on('keydown', function (e) {
                    if (e.which == 13) {
                        e.preventDefault();
                        // toggle visibiltity and checked prop of any checked custom radios
                        $(this).parents('section').find($('.custom-radio-button-checked')).hide();
                        $(this).parents('section').find($('input[type="radio"]')).prop('checked', false);
                        // set visibiltity and checked prop of the currently selected custom radio
                        $(this).parents('.radio').find($('.custom-radio-button-checked')).show();
                        $(this).parents('.radio').find($('input[type="radio"]')).prop('checked', true);
                        // submit the #events-filter-form ( precedes the sidebar in the DOM )
                        $('#events-filter-form').submit();
                    }
                });
            });

        });

        var initialResultsArray = $('.search-results-list li');
        var initialArray = $('.search-results-list');
        var resizeResultsList = function (itemsArray, results) {
            var itemsWidth = 0;
            var containerWidth = $('.search-results-list').width();
            itemsArray.each(function (i, item) {
                itemPadding = parseInt($(this).css('padding-right').replace(/[^0-9]/g, ''));
                itemWidth = $(this).width();
                totalWidth = itemPadding + itemWidth;
                itemsWidth = itemsWidth + totalWidth;
                if (itemsWidth >= containerWidth) {
                    itemsArray.splice(i, itemsArray.length);
                    results.html(itemsArray);
                    results.append('<a class="viewAllLink" href="#">view all</a>');
                    return false;
                }
            });
        };
        resizeResultsList($('.search-results-list li'), $('.search-results-list'));
        $('.viewAllLink').click(function () {
            $('.search-results-list').html(initialResultsArray);
            $('.search-results-list').find('.viewAllLink').remove();
            $('.search-results-list').append('<a class="viewLessLink" href="#"> &nbsp; view less</a>');
            $('.viewLessLink').click(function () {
                $('.search-results-list').find('.viewLessLink').remove();
                resizeResultsList($('.search-results-list li'), $('.search-results-list'));
            });

        });

    },
    nearbyEventsExpand: function () {
        var localEvents = $(".eventSearchResults .eventItem");
        var expander = $(".eventExpander");
        var expandButton = $(".eventExpander a.btn");
        var localEventsTotal = $(".eventSearchResults .eventItem").length; // Endor-1109 update to jquery 3.4.1
        localEvents.hide();
        $(".eventSearchResults .eventItem:lt(5)").show().addClass("initialShow");

        if (localEventsTotal >= 5) {
            expander.insertAfter(".eventSearchResults .eventItem:nth-child(8)");
            expander.show();
        }

        expandButton.on("click", function (e) {
            $(this).parent("div").insertAfter(".eventSearchResults .eventItem:last-child");
            localEvents.slideDown(1500);
            $(this).parent("div").hide();
            e.preventDefault();
        });
    },
    allEventsPagination: function () {
        var allEvent = $(".row.eventItem");
        var allEvents = allEvent.length; // Endor-1109 update to jquery 3.4.1
    },
    clearFilters: function () {
        $("#clearFiltersTrigger").on("click", function (e) {
            $("#eventsFilter").trigger("click");
            e.preventDefault();
        });
    },
    eventsLinkFeatureEvents: function () {
        $('.eventsLink').on('click', function (e) {
            $(this).closest('.eventForm').submit();
            e.preventDefault();
        });
    },
    requestFeaturedEvents: function () {
        eSpinners.show('filter-spinner-wrapper', '#featureEventsWrapper');

        var $form = $('#featureEventsForm');
        var data = BLC.serializeObject($form);
        BLC.ajax({
            url: "/ecommerce/featured_events/getFeatureEventsByLoc",
            type: 'POST',
            data: data
        }, function (data) {
            eSpinners.hide('filter-spinner-wrapper', '#featureEventsWrapper');

            //rebuild events near me html and rewire listeners
            $('#featureEventsContainer').html(data);
            eEvents.nearbyEventsExpand();
            eEvents.eventsLinkFeatureEvents();
            $('#location').keypress(function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                    eEvents.requestFeaturedEvents();
                }
            });
        });
    }
};

var eOntraSSO = {
    init: function () {

        var $ontraLink = $('a#ontraSSODesktop, a#ontraSSOMobile');
        var $ontraEMLink = $('a#ontraEMSSODesktop, a#ontraEMSSOMobile');
        var modalContent = document.getElementsByClassName('gdpr-modal-content')[0];
        $ontraLink.on('click', function (e) {
            e.preventDefault();
            eActivityIndicator.show();
            eOntraSSO.makeVentureOutRequest();
        });
        $ontraEMLink.on('click', function (e) {
            e.preventDefault();
            eActivityIndicator.show();
            eOntraSSO.makeRequest(true);
        });

        $('#ontraSSOMsg span.close').on('click', function () {
            var modal = document.getElementById('ontraSSOMsg');
            modal.style.display = "none";
            $(modalContent).children('.gdpr-alert').remove();
        });
        $('#ontraSSOMsg').on('click', window, function (event) {
            var modal = document.getElementById('ontraSSOMsg');
            if (event.target == modal) {
                modal.style.display = "none";
                $(modalContent).children('.gdpr-alert').remove();
            }
        });
    },
    makeRequest: function (sameWindow) {
        $.ajax({
            url: '/ecommerce/emSSO',
            timeout: 90000,
            success: function (responseData, status, xhr) {
                // Redirecting on session expired.
                var contentType = xhr.getResponseHeader("Content-Type");
                if (xhr.status === 200 && contentType.toLowerCase().indexOf("text/html") >= 0) {
                    window.location.reload();
                    return;
                }
                eActivityIndicator.hide();
                var error = responseData.error;
                var errorType = responseData.errortype;
                var errorMsg = responseData.errormessage;
                var ontraSSOUrl = responseData.ontrassourl;
                var ontraSSOErrorUrl = responseData.ontrassoerrorurl;
                var ontraMsgConnecting = $("#OmsgConnecting").text();
                var ontraMsgConnectingSubText = $("#OmsgConnectingSubtext").text();
                var ontraMsgDescriptionExperiences = $("#OmsgDescriptionExperiences").text();
                var ontraMsgProfile = $("#OmsgProfile").text();
                var ontraMsgProfileSubText = $("#OmsgProfileSubtext").text();
                var ontraMsgContinue = $("#OmsgContinue").text();
                var ontraMsgMaybeLater = $("#OmsgMaybeLater").text();

                var ontraMsgEditProfile = $("#OmsgEditProfile").text();

                var ontraProfileURL = '/ecommerce/my-account?fromEM=true';
                var modal = document.getElementById('ontraSSOMsg');
                var modalContent = document.getElementsByClassName('gdpr-modal-content')[0];
                var div = document.createElement("div");
                div.setAttribute("class", "gdpr-alert")

                if (error && errorType === 'profile') {

                    div.innerHTML = (

                        '<div class="gdpr-banner">' +
                        '<a href="javascript:void(0)" id="ontraCancel" class="ontraCancel"></a>' +
                        '<p id="ontraMsgConnecting">' + ontraMsgProfile +
                        '<br/>' + '<span id="ontraMsgConnectingSubText">' + ontraMsgProfileSubText + '<span>' +
                        '</p>' +
                        '</div>' +
                        '<p>' +
                        '<span>' + errorMsg + '</span>' +
                        '<br />' +
                        '<a class="grm-btn grm-btn-secondary ontraDecline ontraLater">' + ontraMsgMaybeLater + '</a>' +
                        '<a class="grm-btn grm-btn-primary ontraEdit" href="' + ontraProfileURL + '" target="_blank" rel="noopener noreferrer">' + ontraMsgEditProfile + '</a>' +
                        '</p>'

                    );
                    modalContent.appendChild(div);
                    modal.style.display = "flex";

                    var $ontraCancel = $('a.ontraCancel');
                    var $ontraDecline = $('a.ontraDecline');
                    var $ontraFlyout = $('#ontraSSOMsg');
                    $($ontraCancel).add($ontraDecline).on('click', function (e) {
                        e.preventDefault();
                        $ontraFlyout.fadeOut();
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    });

                } else if (error) {

                    div.innerHTML = (
                        '<p>' + errorMsg + '</p>'
                    );

                    modalContent.appendChild(div);
                    modal.style.display = "flex";

                    var $ontraCancel = $('a.ontraCancel');

                    var $ontraDecline = $('a.ontraDecline');

                    var $ontraFlyout = $('#ontraSSOMsg');

                    $($ontraCancel).add($ontraDecline).on('click', function (e) {
                        e.preventDefault();
                        $ontraFlyout.fadeOut();
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    });
                } else if (sameWindow) {
                    return onSuccess(ontraSSOUrl);

                } else {
                    var moddedOntraSSOUrl = "`" + ontraSSOUrl + "`";
                    div.innerHTML = (
                        '<div class="gdpr-banner">' +
                        '<a href="javascript:void(0)" id="ontraCancel" class="ontraCancel"></a>' +
                        '<p id="ontraMsgConnecting">' + ontraMsgConnecting +
                        '<br/>' + '<span id="ontraMsgConnectingSubText">' + ontraMsgConnectingSubText + '<span>' +
                        '</p>' +
                        '</div>' +
                        '<p>' +
                        '<span>' + ontraMsgDescriptionExperiences + '</span>' +
                        '<br />' +
                        '<a class="grm-btn grm-btn-primary ontraContinue" href="#" rel="noopener noreferrer">' + ontraMsgContinue + '</a>' +
                        '</p>'
                    );

                    modalContent.appendChild(div);
                    modal.style.display = "flex";
                    $("#ontraCancel").focus();
                    var $ontraCancel = $('a.ontraCancel');
                    var $ontraDecline = $('a.ontraDecline');
                    var $ontraFlyout = $('#ontraSSOMsg');
                    $($ontraCancel).add($ontraDecline).on('click', function (e) {
                        e.preventDefault();
                        $ontraFlyout.fadeOut();
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    });
                    var $ontraContinue = $('a.ontraContinue');
                    $($ontraContinue).on('click', function (e) {
                        e.preventDefault();
                        window.open(ontraSSOUrl);
                        var $ontraContinueURL = $(this).attr('href');
                        BLC.ajax({
                            url: '/ecommerce/acceptDIYGDPRConsent',
                            type: 'GET'
                        }, function () { });
                    });
                }
            }
        });
    },
    makeVentureOutRequest: function (sameWindow) {
        $.ajax({
            url: '/ecommerce/ontraSSO',
            success: function (responseData, status, xhr) {
                // Redirecting on session expired.
                var contentType = xhr.getResponseHeader("Content-Type");
                if (xhr.status === 200 && contentType.toLowerCase().indexOf("text/html") >= 0) {
                    window.location.reload();
                    return;
                }
                eActivityIndicator.hide();
                var error = responseData.error;
                var errorType = responseData.errortype;
                var errorMsg = responseData.errormessage;
                var ontraSSOUrl = responseData.ontrassourl;
                var ontraSSOErrorUrl = responseData.ontrassoerrorurl;
                var ontraMsgConnecting = $("#OmsgConnecting").text();
                var ontraMsgConnectingSubText = $("#OmsgConnectingSubtext").text();
                var ontraMsgDescription = $("#OmsgDescription").text();
                var ontraMsgProfile = $("#OmsgProfile").text();
                var ontraMsgProfileSubText = $("#OmsgProfileSubtext").text();
                var ontraMsgContinue = $("#OmsgContinue").text();
                var ontraMsgMaybeLater = $("#OmsgMaybeLater").text();

                var ontraMsgEditProfile = $("#OmsgEditProfile").text();

                var ontraProfileURL = '/ecommerce/my-account?fromontra=true';
                var modal = document.getElementById('ontraSSOMsg');
                var modalContent = document.getElementsByClassName('gdpr-modal-content')[0];
                var div = document.createElement("div");
                div.setAttribute("class", "gdpr-alert")

                if (error && errorType === 'profile') {

                    div.innerHTML = (

                        '<div class="gdpr-banner">' +
                        '<a href="javascript:void(0)" id="ontraCancel" class="ontraCancel"></a>' +
                        '<p id="ontraMsgConnecting">' + ontraMsgProfile +
                        '<br/>' + '<span id="ontraMsgConnectingSubText">' + ontraMsgProfileSubText + '<span>' +
                        '</p>' +
                        '</div>' +
                        '<p>' +
                        '<span>' + errorMsg + '</span>' +
                        '<br />' +
                        '<a class="grm-btn grm-btn-secondary ontraDecline ontraLater">' + ontraMsgMaybeLater + '</a>' +
                        '<a class="grm-btn grm-btn-primary ontraEdit" href="' + ontraProfileURL + '" target="_blank" rel="noopener noreferrer">' + ontraMsgEditProfile + '</a>' +
                        '</p>'

                    );
                    modalContent.appendChild(div);
                    modal.style.display = "flex";

                    var $ontraCancel = $('a.ontraCancel');
                    var $ontraDecline = $('a.ontraDecline');
                    var $ontraFlyout = $('#ontraSSOMsg');
                    $($ontraCancel).add($ontraDecline).on('click', function (e) {
                        e.preventDefault();
                        $ontraFlyout.fadeOut();
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    });

                } else if (error) {

                    div.innerHTML = (
                        '<p>' + errorMsg + '</p>'
                    );

                    modalContent.appendChild(div);
                    modal.style.display = "flex";

                    var $ontraCancel = $('a.ontraCancel');

                    var $ontraDecline = $('a.ontraDecline');

                    var $ontraFlyout = $('#ontraSSOMsg');

                    $($ontraCancel).add($ontraDecline).on('click', function (e) {
                        e.preventDefault();
                        $ontraFlyout.fadeOut();
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    });
                } else if (sameWindow) {
                    return onSuccess(ontraSSOUrl);

                } else {
                    var moddedOntraSSOUrl = "`" + ontraSSOUrl + "`";
                    div.innerHTML = (
                        '<div class="gdpr-banner">' +
                        '<a href="javascript:void(0)" id="ontraCancel" class="ontraCancel"></a>' +
                        '<p id="ontraMsgConnecting">' + ontraMsgConnecting +
                        '<br/>' + '<span id="ontraMsgConnectingSubText">' + ontraMsgConnectingSubText + '<span>' +
                        '</p>' +
                        '</div>' +
                        '<p>' +
                        '<span>' + ontraMsgDescription + ' ' +
                        '<a href="https://www.ventureoutawards.com/ontrabi/GDPR/PrivacyNotice.html" id="ontraPrivacyPolicyLink" target="_blank" rel="noopener noreferrer" class="ontraPrivacyPolicyLink" th:text="#{ontraSSOMsg.msgPrivacyPolicyLink}">' + 'privacy policy' + '</a>' +
                        '<span>' + '.' + '</span>' +
                        '</span>' +
                        '<br />' +
                        '<a class="grm-btn grm-btn-primary ontraContinue" href="#" rel="noopener noreferrer">' + ontraMsgContinue + '</a>' +
                        '</p>'
                    );

                    modalContent.appendChild(div);
                    modal.style.display = "flex";
                    $("#ontraCancel").focus();
                    var $ontraCancel = $('a.ontraCancel');
                    var $ontraDecline = $('a.ontraDecline');
                    var $ontraFlyout = $('#ontraSSOMsg');
                    $($ontraCancel).add($ontraDecline).on('click', function (e) {
                        e.preventDefault();
                        $ontraFlyout.fadeOut();
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    });
                    var $ontraContinue = $('a.ontraContinue');
                    $($ontraContinue).on('click', function (e) {
                        e.preventDefault();
                        window.open(ontraSSOUrl);
                        $ontraFlyout.fadeOut();
                        var $ontraContinueURL = $(this).attr('href');
                        BLC.ajax({
                            url: '/ecommerce/acceptDIYGDPRConsent',
                            type: 'GET'
                        }, function () {
                            location.reload();
                        });
                    });
                }
            }
        });
    }
};

function onSuccess(redirect) {
    eActivityIndicator.show();
    window.open(redirect);
    eActivityIndicator.hide();
}

$('#login_form input').keydown(function (e) {
    if (e.which == 13) {
        $('#login_form').submit();
    }
});

$('#story-photo').on('change', function () {
    var filePath = $(this).val();
});


//Main story (target url has an external URL)
$('.fullItemLink').click(function (e) {
    var mainStoryURL = $(this).attr('href');
    if (mainStoryURL !== undefined || mainStoryURL != null) {
        if (mainStoryURL.match("/ecommerce")) {} else if (!mainStoryURL.match("/ecommerce")) {
            window.open(mainStoryURL);
            return false;

        }
        eGAFunctions.gaEvent('story-navigation', 'click', mainStoryURL);
    }
});
$('.fullItemLinkRefresh').click(function (e) {
    var mainStoryURL = $(this).attr('href');
//Endor 766 - Added this if conditional to prevent opening a new window when attempting to launch EM sso
	var mainStoryId = $(this).attr('id');
	if (mainStoryId !== undefined || mainStoryId != null) {
		eGAFunctions.gaEvent('hero-story-navigation', 'click', mainStoryURL);
		return false;
	}
//End 766 change		
    if (mainStoryURL !== undefined || mainStoryURL != null) {
        if (mainStoryURL.match("/ecommerce")) {} else if (!mainStoryURL.match("/ecommerce")) {
            window.open(mainStoryURL);
            return false;

        }
        eGAFunctions.gaEvent('hero-story-navigation', 'click', mainStoryURL);
    }
});

//For Isotope (target url has an external URL)
$('.isotope').click(function (e) {
    var mainStoryURL = $(this).attr('href');
    if (mainStoryURL !== undefined || mainStoryURL != null) {
        if (mainStoryURL.match("/ecommerce")) {} else if (!mainStoryURL.match("/ecommerce")) {
            window.open(mainStoryURL);
            return false;

        }
        eGAFunctions.gaEvent('isotope-navigation', 'click', mainStoryURL);
    }
});

$(".content-cards-container .tileLink").mousedown(function(event){
    var $this = $(this);
    if($this.attr('href') != '#'){
	// console.log('Content card clicky = '+$this.attr('data-gtag'));
		eGAFunctions.gtagPromotion($this.attr('data-gtag'));    	
		eGAFunctions.gaEvent('content-cards-nav', 'click', $this.attr('href'));
    } else {
	// console.log('Banner card clicky = '+$this.attr('data-gtag'));
		eGAFunctions.gtagPromotion($this.attr('data-gtag'));
		eGAFunctions.gaEvent('content-cards-nav', 'click', $this.attr('data-src'));
    }
 });

$(".banners-container .tileLink").mousedown(function(event){
    var $this = $(this);
    if($this.attr('href') != '#'){
	// console.log('Banner card clicky = '+$this.attr('onclick'));
    	eGAFunctions.gaEvent('banner-nav', 'click', $this.attr('href'));
		eGAFunctions.gtagPromotion($this.attr('onclick'));
    } else {
	// console.log('Banner card clicky = '+$this.attr('onclick'));
    	eGAFunctions.gaEvent('banner-nav', 'click', $this.attr('data-src'));
		eGAFunctions.gtagPromotion($this.attr('onclick'));
    }
 });
//1926 - Fixing featured product slider link click target
//$(".featured-products-container .tileLink").mousedown(function(event){
//    var $this = $(this);
//    if($this.attr('href') != '#'){
//    	eGAFunctions.gaEvent('featured-product-nav', 'click', $this.attr('href'));
//    } else {
//    	eGAFunctions.gaEvent('featured-product-nav', 'click', $this.attr('data-src'));
//    }
// });
$(".featured-products-container .gridItemLink").mousedown(function(event){
    var $this = $(this);
    eGAFunctions.gaEvent('featured-product-nav', 'click', $this.attr('href'));
 });
//1926 - Fixing deals slider link click target
//$(".deals-slider-container .tileLink").mousedown(function(event){
//    var $this = $(this);
//    eGAFunctions.gaEvent('deals-product-nav', 'click', $this.attr('href'));
// });
$(".deals-slider-container .gridItemLink").mousedown(function(event){
    var $this = $(this);
    eGAFunctions.gaEvent('deals-product-nav', 'click', $this.attr('href'));
 });


//1926 - Adding GA targets for content cards on Home page and list page
//$(".category-cards-container .tileLink").mousedown(function(event){
//    var $this = $(this);
//    eGAFunctions.gaEvent('category-card-nav', 'click', $this.attr('href'));
//  });
$(".category-cards-container .tileLink").mousedown(function(event){
    var $this = $(this);
    eGAFunctions.gaEvent('category-card-home-nav', 'click', $this.attr('href'));
 });
$(".category-carousel-container .tileLink").mousedown(function(event){
    var $this = $(this);
	eGAFunctions.gaEvent('category-card-list-nav', 'click', $this.attr('href'));
 });

//  $(window).load(function(e){
//     itemListView();
// });


function ChangeTabIndex() {
    document.getElementById("point-range-trigger").tabIndex = 2;
    document.getElementById("megaSearchHideTrigger").tabIndex = 3;
    document.getElementById("myInput").tabIndex = 1;
    document.getElementById("languageSelectHeader").tabIndex = -1;
    document.getElementById("endorIcon endor-heart").tabIndex = -1;
    document.getElementById("endorIcon endor-speech").tabIndex = -1;
    document.getElementById("endorIcon endor-user").tabIndex = -1;
    document.getElementById("logout").tabIndex = -1;
    document.getElementById("endorIcon endor-cart").tabIndex = -1;
}

function ResetTabIndex() {
    document.getElementById("point-range-trigger").tabIndex = -1;
    document.getElementById("megaSearchHideTrigger").tabIndex = -1;
    document.getElementById("myInput").tabIndex = -1;
    document.getElementById("searchFlyoutRangeFloor").tabIndex = -1;
    document.getElementById("searchFlyoutRangeCeiling").tabIndex = -1;
    document.getElementById("languageSelectHeader").tabIndex = 0;
    document.getElementById("endorIcon endor-heart").tabIndex = 0;
    document.getElementById("endorIcon endor-speech").tabIndex = 0;
    document.getElementById("endorIcon endor-user").tabIndex = 0;
    document.getElementById("logout").tabIndex = 0;
    document.getElementById("endorIcon endor-cart").tabIndex = 0;
}

function ChangePointTabIndex() {
    document.getElementById("myInput").tabIndex = 1;
    document.getElementById("point-range-trigger").tabIndex = 2;
    document.getElementById("searchFlyoutRangeFloor").tabIndex = 3;
    document.getElementById("searchFlyoutRangeCeiling").tabIndex = 4;
    document.getElementById("megaSearchHideTrigger").tabIndex = 5;
}

function ChangeInputTabIndex() {
    document.getElementById("myInput").tabIndex = -1;
}

//Tab Focus Order for Contact Us Page starts
var econtactUsTabItems = {
    init: function () {
        $("#generaltab").focus(function (e) {
            $("#generaltab").click();
        });
        $("#generaltab").keydown(function (e) {
            if (e.shiftKey && e.which === 9) {
                var $navItems = $("#navbar .navItem");
                $navItems[$navItems.length - 1].focus();
            } else if (e.which === 9) {
                if ($('#help').length > 0) {
                    $('#help').focus();
                    event.preventDefault();
                } else if ($(".contact-tab-nav li").length > 1) {
                    $(".contact-tab-nav li")[1].focus();
                } else {
                    $("#generalEmail4").focus();
                }
            }
        });
        $("#help").keydown(function (e) {
            if (e.shiftKey && e.which === 9) {
                $('#generaltab').focus();
                $("#generaltab")[0].click();
                event.preventDefault();
            }

        });
        $("#send1").keydown(function (e) {

            if (e.shiftKey && e.which === 9) {
                $('#generaltab').focus();
                $("#generaltab")[0].click();
                $("textarea").focus();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#orderstab').focus();
                $("#orderstab")[0].click();
                event.preventDefault();
            }
            return true;
        });
        $("#orderstab").keydown(function (e) {

            if (e.shiftKey && e.which === 9) {
                $('#generaltab').focus();
                $("#generaltab")[0].click();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#help1').focus();
                event.preventDefault();
            }
        });
        $("#help1").keydown(function (e) {
            if (e.shiftKey && e.which === 9) {
                $('#orderstab').focus();
                $("#orderstab")[0].click();
                event.preventDefault();
            }

        });
        $("#send2").keydown(function (e) {

            if (e.shiftKey && e.which === 9) {
                $('#orderstab').focus();
                $("#orderstab")[0].click();
                $("textarea").focus();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#productstab').focus();
                $("#productstab")[0].click();
                event.preventDefault();
            }
        });
        $("#productstab").keydown(function (e) {
            if (e.shiftKey && e.which === 9) {
                $('#orderstab').focus();
                $("#orderstab")[0].click();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#help2').focus();
                event.preventDefault();
            }
        });
        $("#help2").keydown(function (e) {
            if (event.shiftKey && event.keyCode == 9) {
                $('#productstab').focus();
                $("#productstab")[0].click();
                event.preventDefault();
            }

        });
        $("#send3").keydown(function (e) {
            if (e.shiftKey && e.which === 9) {
                $('#productstab').focus();
                $("#productstab")[0].click();
                $("textarea").focus();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#technicalissuestab').focus();
                $("#technicalissuestab")[0].click();
                event.preventDefault();
            }
        });
        $("#technicalissuestab").keydown(function (e) {

            if (e.shiftKey && e.which === 9) {
                $('#productstab').focus();
                $("#productstab")[0].click();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#techDate').focus();
                event.preventDefault();
            }
        });
        $("#techDate").keydown(function (e) {
            if (event.shiftKey && event.keyCode == 9) {
                $('#technicalissuestab').focus();
                $("#technicalissuestab")[0].click();
                event.preventDefault();
            }

        });
        $("#send4").keydown(function (e) {
            if (e.shiftKey && e.which === 9) {
                $('#techComments2').focus();
                event.preventDefault();
            } else if ($("#presonalshoppertab").length > 0 && e.which === 9) {
                $('#presonalshoppertab').focus();
                $("#presonalshoppertab")[0].click();
                event.preventDefault();
            }
        });
        $("#presonalshoppertab").keydown(function (e) {
            if (e.shiftKey && e.which === 9) {
                $('#technicalissuestab').focus();
                $("#technicalissuestab")[0].click();
                event.preventDefault();
            }
        });
    }
};


//Tab Focus Order for Help Page starts
//Dynamically assigning id for the tabs presents in Help Page
var mainStoryURL = window.location.href;
var tab = ['contactus', 'myaccount', 'shopnavigate', 'shippingreturns', 'orderstab1', 'merchandise'];
if (mainStoryURL.match("/ecommerce/help")) {
    i = 0;
    $('.nav li').attr('id', function () {
        $('a', this).attr('id', tab[i]);
        i = i + 1;
    });
}

//1st tab - Contact Us
$("#contactus").keydown(function (e) {
    if (e.which === 9) {
        $("#contact-us .faq-results").find("a:first").focus();
        event.preventDefault();
    }


});

$("#contact-us .faq-results").find("a:last").keydown(function (e) {
    if (e.which === 9) {
        $('#myaccount').focus();
        $("#myaccount")[0].click();
        event.preventDefault();
    }

    if (event.shiftKey && event.keyCode == 9) {
        $('#contactus').focus();
        $("#contactus")[0].click();
        event.preventDefault();
    }

});

//2nd tab - My Account
$("#myaccount").keydown(function (e) {
    if (e.which === 9) {
        $('#shopnavigate').focus();
        $("#shopnavigate")[0].click()
        event.preventDefault();
    }


    if (event.shiftKey && event.keyCode == 9) {
        $('#contactus').focus();
        $("#contactus")[0].click();
        event.preventDefault();
    }

});

//3rd tab - Shopping & Navigation
$("#shopnavigate").keydown(function (e) {
    if (e.which === 9) {
        $("#shopping-navigation .faq-results").find("a:first").focus();
        event.preventDefault();
    }


    if (event.shiftKey && event.keyCode == 9) {
        $('#myaccount').focus();
        $("#myaccount")[0].click();
        event.preventDefault();
    }

});

$("#shopping-navigation .faq-results").find("a:first").keydown(function (e) {
    if (event.shiftKey && event.keyCode == 9) {
        $('#shopnavigate').focus();
        $("#shopnavigate")[0].click();
        event.preventDefault();
    }

});

$("#shopping-navigation .faq-results").find("a:last").keydown(function (e) {
    if (e.which === 9) {
        $('#shippingreturns').focus();
        $("#shippingreturns")[0].click();
        event.preventDefault();
    }

    if (event.shiftKey && event.keyCode == 9) {
        $('#shopnavigate').focus();
        $("#shopnavigate")[0].click();
        $("#shopping-navigation .faq-results").find("a:eq(-2)").focus();
        event.preventDefault();
    }

});

//4th tab - Shipping Returns
$("#shippingreturns").keydown(function (e) {
    if (e.which === 9) {
        $("#shipping-returns .faq-results").find("a:first").focus();
        event.preventDefault();
    }
    if (event.shiftKey && event.keyCode == 9) {
        $('#shopnavigate').focus();
        $("#shopnavigate")[0].click();
        event.preventDefault();
    }

});

$("#shipping-returns .faq-results").find("a:last").keydown(function (e) {
    if (e.which === 9) {
        $('#orderstab1').focus();
        $("#orderstab1")[0].click();
        event.preventDefault();
    }

    if (event.shiftKey && event.keyCode == 9) {
        $('#shippingreturns').focus();
        $("#shippingreturns")[0].click();
        $("#shipping-returns .faq-results").find("a:eq(-2)").focus();
        event.preventDefault();
    }

});

//5th tab - Orders 
$("#orderstab1").keydown(function (e) {
    if (e.which === 9) {
        $('#merchandise').focus();
        $("#merchandise")[0].click()
        event.preventDefault();
    }
    if (event.shiftKey && event.keyCode == 9) {
        $('#shippingreturns').focus();
        $("#shippingreturns")[0].click()
        event.preventDefault();
    }

});

//6th tab - Merchandise Concierge
$("#merchandise").keydown(function (e) {
    if (event.shiftKey && event.keyCode == 9) {
        $('#orderstab1').focus();
        $("#orderstab1")[0].click()
        event.preventDefault();
    }

});

// Tab Focus Order for myaccount Page starts
var eMyAccountTabItems = {
    init: function () {
        $("#profiletab").keydown(function (e) {
            if (event.shiftKey && event.keyCode == 9) {
                var $navItems = $("#navbar .navItem");
                $navItems[$navItems.length - 1].focus();
            } else if (e.which === 9) {
                $('#firstName').focus();
                event.preventDefault();
            }
        });
        $('#firstName').keydown(function (e) {
            if (event.shiftKey && event.keyCode == 9) {
                $("#profiletab").focus();
                $("#profiletab")[0].click();
                event.preventDefault();
            }
        });
        $("#submit1").keydown(function (e) {
            if (e.which === 9) {
                $('#orderhistorytab').focus();
                $("#orderhistorytab")[0].click();
                event.preventDefault();
            }
        });
        $("#orderhistorytab").keydown(function (e) {
            if (event.shiftKey && event.keyCode == 9) {
                $("#profiletab").focus();
                $("#profiletab")[0].click();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#ordersHistory').focus();
                event.preventDefault();
            }
        });
        $("#ordersHistory").keydown(function (e) {
            if (event.shiftKey && event.keyCode == 9) {
                $("#orderhistorytab").focus();
                $("#orderhistorytab")[0].click();
                event.preventDefault();
            }
        });
        $("#contactcustomersupport").keydown(function (e) {
            if (e.which === 9) {
                $('#security1').focus();
                $("#security1")[0].click();
                event.preventDefault();
            }
        });
        $("#security1").keydown(function (e) {
            if (event.shiftKey && event.keyCode == 9) {
                $("#orderhistorytab").focus();
                $("#orderhistorytab")[0].click();
                event.preventDefault();
            } else if (e.which === 9) {
                $('#old-validator').focus();
                event.preventDefault();
            }
        });
    }
};

//Tab focus outline appears upon mouse click
//May need to remove/revise this code if the performance is negatively impacted by this change
function handleFirstTab(e) {
    if (e.keyCode === 9) {
        //The user is tabbing so add the tabbing class 
        document.body.classList.add('user-is-tabbing');

        // window.removeEventListener('keydown', handleFirstTab);
        // document.addEventListener('mousedown', handleFirstClick);
    }
}

function handleFirstClick(e) {
    //The user has began using the mouse so remove the tabbing class
    document.body.classList.remove('user-is-tabbing');

    // document.removeEventListener('mousedown', handleFirstClick);
    // window.addEventListener('keydown', handleFirstTab);
}
window.addEventListener('keydown', handleFirstTab);
window.addEventListener('mousedown', handleFirstClick);


$.urlParam = function (name) {
    var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
    if (results == null) {
        return null;
    }
    return decodeURI(results[1]) || 0;
}

// GL 738
var eContactUsRefresh = {
    init: function() {
        $('#contact__topiclist').on('change', function() {
            $('.contact__topic').addClass('hidden');
            var sourceTab = $('#contact__' + this.value).data('sourcetab');
            if (sourceTab && sourceTab == 99) {
                $('#contact__' + this.value).find('.has-error').removeClass('has-error');
                $('#' + this.value + '_confirm_email').val("");
                $('#' + this.value + '_comments').val("");
                $('#contact__' + this.value).find('.grm-alert').addClass('hidden');
            }
            // India template unique contact us option for Orders forms
             if (this.value.slice(0, 7) == 'orders.') {
                $('#uniqueOrder').attr('value', this.value.slice(7));
                $('#contact__' + this.value.slice(0, 6)).removeClass('hidden');
            } 
            // default order form
            else {
                $('#uniqueOrder').attr('value', 'Orders');
                $('#contact__' + this.value).removeClass('hidden');
            } 
        
            // India template unique contact us option for General forms
             if (this.value.slice(0, 8) == 'general.') {
                $('#uniqueGen').attr('value', this.value.slice(8));
                $('#contact__' + this.value.slice(0, 7)).removeClass('hidden');
            } 
            // default general form
            else {
                $('#uniqueGen').attr('value', 'General');
                $('#contact__' + this.value).removeClass('hidden');

            } 
            
            // India template unique contact us option for tech-issues forms
             if (this.value.slice(0, 12) == 'tech-issues.') {
                $('#uniqueTi').attr('value', this.value.slice(12));
                $('#contact__' + this.value.slice(0, 11)).removeClass('hidden');
            }
            // default tech-issues form
            else {
                $('#uniqueTi').attr('value', 'Technical Issues');
                $('#contact__' + this.value).removeClass('hidden');

            } 
           
            // India template unique contact us option for products forms
            if (this.value.slice(0, 9) == 'products.') {
                $('#uniqueProduct').attr('value', this.value.slice(9));
                $('#contact__' + this.value.slice(0, 8)).removeClass('hidden');
            }  
            // default products form
            else {
                $('#uniqueProduct').attr('value', 'Products');
                $('#contact__' + this.value).removeClass('hidden');

            } 
        
             // default personal shop form 
             if (this.value == 'personal-shop') {
                $('#uniquePs').attr('value', 'Personal Shopper');
                $('#contact__' + this.value).removeClass('hidden');
            } 

            $('#contact__' + this.value).removeClass('hidden');
        });
      
        var formType = $.urlParam('formType') ? $.urlParam('formType') : null;
        if (formType) {
            var $btn = $('#contact__' + formType + this.value).find('.grm-form-submit');
            var $form = $('#contact__' + formType + this.value).find('.grm-form');
            eFormValidator.errMsgHandler($btn, $form);
            $('#contact__topiclist').val(formType).change();
        } else {
            // GL 2295 - Removed default topic
            // $('#contact__general').removeClass('hidden');
        }
    }
};

// $("#custCellPhone").val().trim; 

var phoneTrim = $("#custCellPhone").val() == undefined ? '' : $("#custCellPhone").val().trim();
phoneTrim = phoneTrim.replace(/ /g, '%20');

var eFormValidator = {
    init: function() {
        $('.grm-form-submit').on('click', function(e) {
            var
                $btn = $(this),
                $form = $btn.closest('.grm-form');
            if ($btn.is('button[type="submit"]')) {
                e.preventDefault();
            }
            eFormValidator.validate($btn, $form);
        });
    },
    validate: function($btn, $form) {
        var valid = true;
        var formFields = $form.find('[required]');

        formFields.each(function(index, ele) {
            var $ele = $(ele);
            var val = null;
            if ($ele.is(':disabled')) {
                valid = false;
            }
            if ($ele.is('input') || $ele.is('textarea')) {
                val = $ele.val();
            } else if ($ele.is('select')) {
                val = $ele.find('option:selected').attr('value');
                if (val === 'NONE') {
                    val = null;
                }
            }
            if (!val) {
                valid = false;
                $ele.parent().addClass('has-error')
            }
        });

        if (!valid) {
            eFormValidator.errMsgHandler($btn, $form);
        } else if (valid && $btn.is('button[type="submit"]')) {
            $form.submit();
        } else {
            console.log("something went wrong");
        }
    },
    errMsgHandler: function($btn, $form) {
        $errorFields = $form.find('.has-error');
        $errorInputs = $errorFields.find('input,textarea');
        $errorSelects = $errorFields.find('select');
        if ($errorFields.length) {
            $btn.addClass('disabled');
        };

        $errorInputs.on('keydown change paste', function (evt) {
            var _that = $(this);
            setTimeout(function (e) {
                if (_that.val()) {
                    _that.parent().removeClass('has-error');
                    if (!$form.find('.has-error').length) {
                        $btn.removeClass("disabled");
                    }
                } else {
                    _that.parent().addClass('has-error');
                    if ($form.find('.has-error').length) {
                        $btn.addClass("disabled");
                    }
                }
            });
        }).blur(function(e) {
            if (!$(this).val()) {
                $(this).parent().addClass('has-error');
                if ($form.find('.has-error').length) {
                    $btn.addClass("disabled");
                }
            }
        });

        $errorSelects.on('change', function() {
            if (this.value && this.value !== 'NONE') {
                $(this).parent().removeClass('has-error');
                if (!$form.find('.has-error').length) {
                    $btn.removeClass("disabled");
                }
            } else {
                $(this).parent().addClass('has-error');
                if ($form.find('.has-error').length) {
                    $btn.addClass("disabled");
                }
            }
        });
    }
};

var eGRMUtils = {
    init: function() {
        $('.btn-sm-final-rev').click(function (evt) {
            $('a[href="#final-review"]:visible').click();
        });
        $('.btn-sm-proceed-pay').click(function (evt) {
            $('a[href="#payment"]:visible').click();
        });

        $('.product-edit-xs').click(function (evt) {
            $(this).parents('.item').find(".product-options .product__edit-btn").click()
        });
        $('.cart-product-edit-mb').click(function (evt) {
            $(this).parents('.item').find('.product-options .product__edit-btn').click();
        });
        $('.padding-bottom-filler').css('padding-bottom', ($('footer:visible').height() + 60) + 'px');
        if ($('.related-items-container').is(':visible')) {
            $('.related-items-container').css('padding-bottom', ($('footer:visible').height()) + 'px');
        } else {
            $('.product-detail-wrapper').css('padding-bottom', ($('footer:visible').height()) + 'px');
        }

        if ($('.recently-viewed-prods-container').is(':visible')) {
            $('.recently-viewed-prods-container').css('padding-bottom', ($('footer:visible').height()) + 'px');
        }

        $(document).on('click', '.grm-alert-close', function () {
            $(this).parent('.grm-alert').addClass('hidden');
        });

        $('.snackbar-alert-close').click(function () {
            $(this).parent('#snackbar').removeClass('visible');
            $('#snackbar').removeClass('snackbarErr');
        });

        $('.grm-dropdown .dropdown-toggle').on('click', function (event) {
            $(this).parent().toggleClass('open');
        });

        $('body').on('click', function (e) {
            if (!$('.grm-dropdown .dropdown-toggle').is(e.target) &&
                $('.grm-dropdown .dropdown-toggle').has(e.target).length === 0 &&
                $('.grm-dropdown.open').has(e.target).length === 0
            ) {
                $('.grm-dropdown.open').removeClass('open');
            }
        });
        $('.push-to-top').click(function (evt) {
            $('.push-to-top').removeClass('selected');
            $(this).addClass('selected');
            $('html, body').animate({
                scrollTop: $(this.hash).offset().top - 50
            }, 500);
            return false;
        })

        $(".help__section .collapse").on('shown.bs.collapse', function () {
            $(this).children('.grm-panel-body').attr("tabindex", 0);

        });

        $(".help__section .collapse").on('hidden.bs.collapse', function () {
            $(this).children('.grm-panel-body').attr("tabindex", -1);
        });
    }
}

// Restrict input from alphabets and special chars
$.fn.inputFilter = function (inputFilter) {
    return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
        if (inputFilter(this.value)) {
            this.oldValue = this.value;
            this.oldSelectionStart = this.selectionStart;
            this.oldSelectionEnd = this.selectionEnd;
        } else if (this.hasOwnProperty("oldValue")) {
            this.value = this.oldValue;
            this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
        }
    });
};

function removeURLParameter(url, parameter) {
    //prefer to use l.search if you have a location/link object
    var urlparts = url.split('?');   
    if (urlparts.length >= 2) {

        var prefix = encodeURIComponent(parameter) + '=';
        var pars = urlparts[1].split(/[&;]/g);

        //reverse iteration as may be destructive
        for (var i = pars.length; i-- > 0;) {    
            //idiom for string.startsWith
            if (pars[i].lastIndexOf(prefix, 0) !== -1) {  
                pars.splice(i, 1);
            }
        }

        return urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : '');
    }
    return url;
}

function replaceUrlParam(url, paramName, paramValue)
{
    if (paramValue == null) {
        paramValue = '';
    }
    var pattern = new RegExp('\\b('+paramName+'=).*?(&|#|$)');
    if (url.search(pattern)>=0) {
        return url.replace(pattern,'$1' + paramValue + '$2');
    }
    url = url.replace(/[?#]$/,'');
    return url + (url.indexOf('?')>0 ? '&' : '?') + paramName + '=' + paramValue;
}

var eGRMSeachBar = {
    init: function () {
        var qs_q = $("[name=q]:hidden").val() ? $("[name=q]:hidden").val() : null;
        var qs_minValue = $.urlParam('minSearchValue') ? $.urlParam('minSearchValue') : null;
        var qs_maxValue = $.urlParam('maxSearchValue') ? $.urlParam('maxSearchValue') : null;
        var qs_catId = $.urlParam('searchCatId') ? $.urlParam('searchCatId') : null;
        if (qs_q && qs_q != '*') {
            $('#myInput').val(qs_q);
        }
        if (qs_minValue) {
            $('#search-min_points').val(qs_minValue);
            $('.points-selected').text(qs_minValue + " - " + qs_maxValue);
        }
        if (qs_maxValue) {
            $('#search-max_points').val(qs_maxValue);
            $('.points-selected').text(qs_minValue + " - " + qs_maxValue);
        }

        if (qs_catId) {
            setTimeout(function () {
                $('.search-cat-item[data-catid=' + qs_catId + ']').click();
            })
        }

        $('#myInput').keydown(function (e) {
            if (e.which == 13) {
                e.preventDefault();
                //clear Filter section local catch gitlab-4244
                localStorage.setItem("arrowInfo", JSON.stringify({
				  collapsed: [],
				  expanded: []
				}));
				localStorage.setItem("eventCatId", '');	
				
                $('#searchForm').submit();
            }
        });

        $('#show_me-check').on('change', function () {
            if ($(this).is(':checked')) {
                var minVal = $('#search-min_points').val();
                var maxVal = $('.mediaAmount:first').text()
                if (!minVal) {
                    minVal = 0;
                    $('#search-min_points').val(minVal);
                }
                $('#search-max_points').val(maxVal);
                $('#search-max_points').addClass('disabled');
                $('#search-min_points').addClass('disabled');

            } 
            else {
                eGRMSeachBar.clearPoints();
                $('#search-max_points').removeClass('disabled');
                $('#search-min_points').removeClass('disabled');
               
            }
        });
        $('#show_me-check-xs').on('change', function () {
            if ($(this).is(':checked')) {
                var minVal = $('#search-min_points').val();
                var maxVal = $('.mediaAmount:first').text();
                if (!minVal) {
                    minVal = 0;
                    $('#search-min_points').val(minVal);
                }
                $('#search-max_points').val(maxVal);
            } 
           
            else {
                eGRMSeachBar.clearPoints();
            }
        });

        $('.category-wrapper button.dropdown-toggle').click(function (evt) {
            $(document).find('.menu-option .primary-category .active').removeClass('active');
            var catValue = $('.category-wrapper button.dropdown-toggle .cat-selected').text().trim();
            var isExpanded = $('.category-wrapper button.dropdown-toggle').attr('aria-expanded');
            $('.category-wrapper ul.dropdown-menu li a').each(function (index, ele) {
                var item = $(ele);
                var itemVal = item.text().trim();
                item.removeClass('active');
                /////////Endor- 4291-Init////////
                var seen = {};
			    $('.search-wrapper .dropdown-menu li').each(function() {
			        var txt = $(this).text();
			        if (seen[txt])
			            $(this).remove();
			        else
			            seen[txt] = true;
			    });
				/////////Endor-4291-End////////
                if (catValue == itemVal) {
                    item.addClass('active');
                }
            });
        });

        $('.category-wrapper ul.dropdown-menu li a').click(function (evt) {
            $('.category-wrapper ul.dropdown-menu li a').removeClass("active");
            var _this = $(this);
            var selVal = _this.text();
            _this.addClass("active");
            $('.category-wrapper button.dropdown-toggle .cat-selected').text(selVal);
        });

        $('.points-actions .points-clear').click(function (evt) {
            eGRMSeachBar.clearPoints();
        });

        $('.points-actions .points-done').click(function (evt) {
            var minVal = $('#search-min_points').val();
            var maxVal = $('#search-max_points').val();
            var minValId = '#search-min_points';
            var maxValId = '#search-max_points';

            if(eGRMProductListPage.validatePointsFilter(minVal, maxVal, minValId, maxValId)){
                $('.points-selected').text(minVal + " - " + maxVal);
                $(this).parents('.dropdown.open').removeClass('open');
                $('#searchForm').submit();
            }
        })

        $('.points-go-wrapper .filter-points-search-btn').click(function (evt) {
            var minVal = $('#rangeFloor').val();
            var maxVal = $('#rangeCeiling').val();
            var minValId = '#rangeFloor';
            var maxValId = '#rangeCeiling';
            if(!eGRMProductListPage.validatePointsFilter(minVal, maxVal, minValId, maxValId)){
				$(maxValId).css({"border-color": "#d0023e", 
		             "border-width":".5px", 
		             "border-style":"solid"});
                return false;
            }
        })
        
        $('#search-min_points').inputFilter(function (value) {
            if (value.length > 7) {
                return false;
            }
            return /^\d*$/.test(value);
        });

        $('#search-max_points').inputFilter(function (value) {
            if (value.length > 7) {
                return false;
            }
            return /^\d*$/.test(value);
        });

        $('.search-btn-wrapper button').click(function (evt) {
            $('#searchForm').submit();
        });

        $('.search-cat-item').click(function () {
            var catId = parseInt($(this).data('catid'), 10);
            if (catId) {
                $('#searchCatId').val(catId);
            } else {
                $('#searchCatId').val(null);
            }
        });
    },
    clearPoints: function () {
        $('#search-min_points').parent().removeClass('has-error');
        $('#search-max_points').parent().removeClass('has-error');
        $('#search-min_points').val('');
        $('#search-max_points').val('');
        $('#show_me-check-xs').prop("checked", false);
        $('#show_me-check').prop("checked", false);
        $('.points-selected').text($('#points-any').text().trim() + ' ' + $('#points-menu label').text().trim());
    }
}

var eGRMProductListPage = {
    init: function () {
        //Carousels
        eGRMProductListPage.categoryCardsCarousel();
        eGRMProductListPage.paginationCarousel();
        //Filters
        eGRMProductListPage.pointsRangeFilter();
        eGRMProductListPage.attrFilter();
        eGRMProductListPage.attrFilterClear();
        eGRMProductListPage.categoryFilterClear();
        // Product cards
        eGRMProductListPage.productCards();
        // Recently Viewed products
        eGRMProductListPage.recentProductsCarousel();

        // GL1524
        $('.active-category-input').keydown(function (e) {
            if (e.which === 13) {
                event.preventDefault();
                var _this = $(this);
                _this.prop("checked", false);
                eGRMProductListPage.triggerCategoryFilter(_this);
            }
        });
        $('.category-input').keydown(function (e) {
            if (e.which === 13) {
                event.preventDefault();
                var _this = $(this);
                _this.prop("checked", true);
                eGRMProductListPage.triggerCategoryFilter(_this);
            }
            if (!event.shiftKey && e.which === 9) {
                var listItem = $(this).parents('li');
                if(listItem.next('li').length){
                    event.preventDefault();
                    listItem.next('li').find(".category-input").focus();
                }
            }
            if (event.shiftKey && event.keyCode == 9) {
                var listItem = $(this).parents('li');
                if(listItem.prev('li').length){
                    event.preventDefault();
                    listItem.prev('li').find(".category-input").focus();
                }
            }
        });
        $('.search-category-input').keydown(function (e) {
            if (e.which === 13) {
                event.preventDefault();
                var _this = $(this);
                if(_this.hasClass('checked')){
                    _this.prop("checked", false);
                }else{
                    _this.prop("checked", true);
                }
                eGRMProductListPage.triggerCategoryFilter(_this);
            }
            if (!event.shiftKey && e.which === 9) {
                var listItem = $(this).parents('li').first();
                if(listItem.find('ul').length){
                    event.preventDefault();
                    var elderChild = listItem.find('ul > li').first();
                    elderChild.find('.search-category-input').focus();
                }else{
                    if(listItem.next('li').length){
                        event.preventDefault();
                        listItem.next('li').find(".search-category-input").focus();
                    }else{
                        var parentNxtItem = listItem.parents('li.category-list-item').next('li');
                        if(parentNxtItem.length){
                            event.preventDefault();
                            parentNxtItem.find('.search-category-input').first().focus();
                        }else{
                           var parentNxtList =  listItem.parents('ul.category-list').next('ul');
                           if(parentNxtList.find('li.category-list-item').length){
                            event.preventDefault();
                            parentNxtList.find('.search-category-input').first().focus();
                           }
                        }
                    }
                }
            }
            if (event.shiftKey && event.keyCode == 9) {
                var listItem = $(this).parents('li').first();
                if(listItem.prev('li').length){
                    event.preventDefault();
                    listItem.prev('li').find(".search-category-input").first().focus();
                }else{
                    var parentList = listItem.parent('ul');
                    if(parentList.hasClass('category-list')){
                        var parentPrevList =  parentList.prev('ul');
                        if(parentPrevList.children('li.category-list-item').length){
                            event.preventDefault();
                            var parentPrevListItem = parentPrevList.children('li.category-list-item').last();
                            parentPrevListItem.find('.search-category-input').first().focus();
                        }
                    }else{
                        event.preventDefault();
                        var currentList = listItem.parent('ul.sub-category-list');
                        var parentListItem = currentList.parent('li.category-list-item');
                        parentListItem.find('.search-category-input').first().focus();
                    }
                }
            }
        });
        // GL1524

        $('.filter-by-container').click(function (evt) {
            $('body').addClass('overflow-hidden');
            $('.filter-container-overlay').addClass('show');
        });

        $('.filter-container-overlay').click(function (evt) {
            if (evt.target == this) {
                $('body').removeClass('overflow-hidden');
                $('.filter-container-overlay').removeClass('show');
            }
        });

        var pointSearchCount = 0;
        if($('#rangeFloor').val()){
            pointSearchCount++;
        }
        if($('#rangeCeiling').val()){
            pointSearchCount++;
        }
        if($('#show_me-filter-check').is(':checked')){
            pointSearchCount++;
        }
        $('.point-search-filter .total-filter').text("(" + pointSearchCount + ")");
        $('.point-search-filter').click(function(evt){
            var clearURL = window.location.href;
            eGRMProductListPage.clearPoints();
            // remove price, min and max from url
            clearURL = removeURLParameter(clearURL,'price');
            clearURL = removeURLParameter(clearURL,'minSearchValue');
            clearURL = removeURLParameter(clearURL,'maxSearchValue');
            window.open(clearURL, '_self', false);
            //$(this).parents('.points-filter-container').find('form').submit();
        });
    },
    clearPoints: function () {
        $('#rangeFloor').parent().removeClass('has-error');
        $('#rangeCeiling').parent().removeClass('has-error');
        $('#rangeFloor').val('');
        $('#rangeCeiling').val('');
        $('#show_me-filter-check').prop("checked", false);
    },
    paginationCarousel: function () {
        $('#category-pagination-carousel').addClass('no-carousel');
        var currentPage = $('#current-page').val();
        var totalPages = $('#total-pages').val();
        
        if(currentPage && currentPage == 1){
            $('.cat-pagination .pag-carousel-prev-action').addClass('hidden');
        }

        if(currentPage && totalPages && (currentPage == totalPages)){
            $('.cat-pagination .pag-carousel-next-action').addClass('hidden');
        }

        $(".pag-carousel-prev").on("click touchend", function () {
            var pageNumber = parseInt(currentPage)-1;
            var redirectURL = replaceUrlParam(window.location.href,'page',pageNumber)
            window.open(redirectURL,'_self',false);
        });

        $(".pag-carousel-next").on("click touchend", function () {
            var pageNumber = parseInt(currentPage)+1;
            var redirectURL = replaceUrlParam(window.location.href,'page',pageNumber)
            window.open(redirectURL,'_self',false);
        });
    },
    categoryCardsCarousel: function () {
        var categoryCardLimit = 4;
        if (window.innerWidth < 992) {
            categoryCardLimit = 3;
        } //tablet potrait

        if (window.innerWidth < 576) {
            categoryCardLimit = 2;
        } // mobile potrait

        var categoryCards = $('#product-category-carousel .cat-card').length;
        if (categoryCards > categoryCardLimit) {
            $('#product-category-carousel').removeClass('no-carousel');

            $('#product-category-carousel').owlCarousel({
                items: categoryCardLimit,
                itemsDesktop: [1200,4],
                itemsDesktopSmall: [1024,4],
                itemsTablet: [992,3],
                itemsTabletSmall: [768,3],
                itemsMobile: [576,2],
                pagination: false,
                navigation: false,
                slideSpeed: 300,
                stopOnHover: true,
                addClassActive: true,
                mouseDrag: true,
                touchDrag: true,
                autoPlay: false,
                autoHeight: false,
                transitionStyle: "fadeUp",
                responsive: true,
                responsiveRefreshRate: 200,
                responsiveBaseWidth: window,
                beforeMove: function () {

                },
                afterMove: function () {
                    if ($('#product-category-carousel .owl-item:first').hasClass('active')) {
                        $('.category-carousel-container .carousel-prev-action').addClass('hidden');
                    } else {
                        $('.category-carousel-container .carousel-prev-action').removeClass('hidden');
                    }

                    if ($('#product-category-carousel .owl-item:last').hasClass('active')) {
                        $(".category-carousel-container .carousel-next-action").addClass('hidden');
                    }
                    else {
                        $(".category-carousel-container .carousel-next-action").removeClass('hidden');
                    }
                },
                afterInit: function () {
                    var tallest = 0;
                    $("#product-category-carousel .cat-card-label").each(function () {
                        var thisHeight = $(this).height();
                        if (thisHeight > tallest) {
                            tallest = thisHeight;
                        }
                    });
                    //$("#product-category-carousel .cat-card-label").height(tallest);
                    if ($('#product-category-carousel .owl-item:last').hasClass('active')) {
                        $(".category-carousel-container .carousel-next-action").addClass('hidden');
                    }
                },
                afterUpdate: function () {

                }
            });

            $('.category-carousel-container .carousel-next-action').removeClass('hidden');

            $(".cat-carousel-prev").on("click touchend", function () {
                $('#product-category-carousel').trigger('owl.prev');
                eGAFunctions.gaEvent('category-card-nav', 'click', 'Previous');
            });

            $(".cat-carousel-next").on("click touchend", function () {
                $('#product-category-carousel').trigger('owl.next');
                eGAFunctions.gaEvent('category-card-nav', 'click', 'Next');
            });
        } else {
            $('#product-category-carousel').addClass('no-carousel');
            $('.category-carousel-container .carousel-prev-action').addClass('hidden');
            $('.category-carousel-container .carousel-next-action').addClass('hidden');
        }
    },
    CategoryNavhandler: function (cb) {
        if (cb.is(':checked')) {
            window.open($(cb).attr('href'), '_self', false)
        } else {
            if($(cb).attr('parent-href')){
                window.open($(cb).attr('parent-href'), '_self', false)
            }else{
                window.location.reload(false);
            }
        }
    },
    categoryFilterClear: function () {
        var CatFilterCount = $(".category-filter-container input[type='radio']:checked").length;
        if (CatFilterCount > 0) {
            $('.category-filter-clear .total-filter').text("(" + CatFilterCount + ")");
        }
        $('.category-filter-clear').click(function (evt) {
            $(".category-filter-container input[type='radio']:checked:first").click()
        });
        $('.category-filter-clear').keydown(function(e){
            if (e.which === 13) {
                e.preventDefault();
                $(this).click();
            }
        })
    },
    attrFilter: function () {
        $('.attr-list-wrapper').each(function () {
            var $this = $(this);
            var attrFilterList = $(this).find('li').length;
            if (attrFilterList === 0) {
                $this.parents('.attr-filter-container').addClass('hidden');
                $this.addClass('hidden');
            } else {
                $this.parents('.attr-filter-container').removeClass('hidden');
                $this.removeClass('hidden');
            }
        });

        $('.attr-list-wrapper:visible').each(function () {
            var attrFilterList = $(this).find('li').length;
            if(attrFilterList > 15){ //set max-height upto 15
                var listHeight = 0;
                $(this).find('li').each(function(idx){
                    var $this = $(this);
                    if(idx<=14){
                        listHeight = listHeight + $this.outerHeight();
                    }
                });
                $(this).css('max-height',listHeight+'px');
            }
        });

        $('.attr-list-wrapper:visible').not(':last').each(function () {
            var $this = $(this);
            var attrFilterList = $(this).find('li').length;
            if (attrFilterList > 4) { //set max-height upto 4
                var listHeight = 0;
                $(this).find('li').each(function(idx){
                    var $this = $(this);
                    if(idx<=3){
                        listHeight = listHeight + $this.outerHeight();
                    }
                });
                $(this).css('max-height',listHeight+'px');
                $this.addClass('partially-expanded'); 
                $this.next('.attr-list-view').removeClass('hidden');
            }
        });

        $('.attr-list-view-btn').click(function (evt) {
            var attrListWrapper = $(this).parents('.filter-collape-body').find('.attr-list-wrapper');
            attrListWrapper.scrollTop(0);
            if (attrListWrapper.hasClass('partially-expanded')) {

                var listHeight = 0;
                attrListWrapper.find('li').each(function(idx){
                    var $this = $(this);
                    if(idx<=14){
                        listHeight = listHeight + $this.outerHeight();
                    }
                });
                attrListWrapper.css('max-height',listHeight+'px');

                attrListWrapper.removeClass('partially-expanded'); //set max-height upto 15
                $('.btnTextLess').show();
                $('.btnTextMore').hide();
            } else {

                var listHeight = 0;
                attrListWrapper.find('li').each(function(idx){
                    var $this = $(this);
                    if(idx<=3){
                        listHeight = listHeight + $this.outerHeight();
                    }
                });
                attrListWrapper.css('max-height',listHeight+'px')

                attrListWrapper.addClass('partially-expanded'); //set max-height upto 4
                $('.btnTextLess').hide();
                $('.btnTextMore').show();
            }
        });

        $('.search-attr-list').on({
            keyup: function () {
                var input, filter, ul, li, a, i, txtValue, vmbtn, attrLstWrapper;
                input = $(this);
                attrLstWrapper = input.parents('.filter-collape-body').find('.attr-list-wrapper');
                vmbtn = input.parents('.filter-collape-body').find('.attr-list-view-btn');

                if (!attrLstWrapper.next('.attr-list-view').hasClass('hidden')) {
                    vmbtn.addClass('hidden');
                    attrLstWrapper.removeClass('partially-expanded');
                }

                filter = input.val().toUpperCase();
                ul = attrLstWrapper.find('ul');
                li = ul.find("li");

                for (i = 0; i < li.length; i++) {
                    label = li[i].getElementsByTagName("label")[0];
                    txtValue = label.textContent || label.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        li[i].style.display = "";
                    } else {
                        li[i].style.display = "none";
                    }
                }

                if (input.val() == "") {
                    if (!attrLstWrapper.next('.attr-list-view').hasClass('hidden')) {
                        vmbtn.removeClass('hidden');
                        attrLstWrapper.addClass('partially-expanded');
                    }
                }
            }
        });
    },
    attrFilterClear: function () {
        $('.attr-filter-container').each(function () {
            var $this = $(this);
            var attrListWrapper = $this.find('.attr-list-wrapper');
            var attrActiveCount = attrListWrapper.find('input[type="checkbox"]:checked').length;
            if (attrActiveCount > 0) {
                $this.find('.attr-filter-clear .total-filter').text("(" + attrActiveCount + ")");
            }
            $this.find('.attr-filter-clear').click(function (evt) {
                // Need to add dynamic handler
                var attrIden = $(this).find('.attr-identifier').text();
                var resultURL = removeURLParameter(window.location.href,attrIden);
            	if($(this).find('.attr-identifier').text().toLowerCase() == "badges"){ 
            		const badges = ['saleOfferProduct',
            		                'newProduct',
            		                'refurbishedProduct',
            		                'downloadableProduct',
            		                'explicitWarning',
            		                'livingGreenProduct',
            		                'minorityOwnedProduct',
            		                'newMarkdown'];
            		for (var i = 0; i < badges.length; i++) {
            			resultURL = removeURLParameter(resultURL,badges[i]);
            		}
            	}
                window.open(resultURL, '_self', false);
            });
        });
    },
    pointsRangeFilter: function () {
        var qs_minValue = $.urlParam('minSearchValue') ? $.urlParam('minSearchValue') : 0;
        var qs_maxValue = $.urlParam('maxSearchValue') ? $.urlParam('maxSearchValue') : null;
        
        $('#rangeFloor').val(qs_minValue);

        if (qs_maxValue) {
            $('#rangeCeiling').val(qs_maxValue);
        }
        
        $('.points-go-wrapper .right-arrow').prev().attr('disabled',true);

        $('#rangeCeiling').inputFilter(function (value) {
            if (value.length > 7) {
                return false;
            }
            return /^\d*$/.test(value);
        });

        $('#rangeFloor').inputFilter(function (value) {
            if (value.length > 7) {
                return false;
            }
            return /^\d*$/.test(value);
        });

        if ($('#showMeCheck').attr('value') === 'false') {
            $('#showMeCheck').show();
        }
        else {
            $('#showMeCheck').hide();
        }

        $('#show_me-filter-check').on('change', function () {
            if ($(this).is(':checked')) {
                var minVal = $('#rangeFloor').val();
                var maxVal = $('.mediaAmount:first').text();
                if (!minVal || minVal > maxVal) {
                    minVal = 0;
                    $('#rangeFloor').val(minVal);
                }
                $('#rangeCeiling').val(maxVal);
                $('#rangeCeiling').addClass('disabled');
                $('#rangeFloor').addClass('disabled');
                $('.points-go-wrapper .right-arrow').prev().attr('disabled',false);
                $('.points-go-wrapper .right-arrow').prev().click(); // submit the form
            }

            else{
                eGRMProductListPage.clearPoints();
                $('#rangeFloor').val(qs_minValue);
                $('#rangeCeiling').val(qs_maxValue);
                $('#rangeCeiling').removeClass('disabled');
                $('#rangeFloor').removeClass('disabled');
            }
        });

        $('#view-all-check').on('change', function () {
            if ($(this).is(':checked')) {
                var minVal = $('#rangeFloor').val();
                var maxVal = 9999999;
                if (!minVal || minVal > maxVal) {
                    minVal = 0;
                    $('#rangeFloor').val(minVal);
                }
                $('#rangeCeiling').val(maxVal);
                $('#rangeCeiling').addClass('disabled');
                $('#rangeFloor').addClass('disabled');
                $('.points-go-wrapper .right-arrow').prev().attr('disabled',false);
                $('.points-go-wrapper .right-arrow').prev().click(); // submit the form
            }

            else{
                eGRMProductListPage.clearPoints();
                $('#rangeFloor').val(qs_minValue);
                $('#rangeCeiling').val(qs_maxValue);
                $('#rangeCeiling').removeClass('disabled');
                $('#rangeFloor').removeClass('disabled');
            }
        });

        if ($('#viewAllCheck').attr('value') === 'true') {
            $('#viewAllCheck').show();
        }
        else {
            $('#viewAllCheck').hide();
        }

        $('.points-go-wrapper .right-arrow').click(function(evt){
            evt.preventDefault();
            var minVal = $('#rangeFloor').val();
            var maxVal = $('#rangeCeiling').val();
            var minValId = '#rangeFloor';
            var maxValId = '#rangeCeiling';

            if(eGRMProductListPage.validatePointsFilter(minVal, maxVal, minValId, maxValId)){
                $('.points-go-wrapper .right-arrow').prev().attr('disabled',false);
                $('.points-go-wrapper .right-arrow').prev().click(); // submit the form
            }
        });
        
        $('#rangeCeiling').keydown(function(evt){
            if(event.keyCode == 13){
                evt.preventDefault();
                $('.points-go-wrapper .right-arrow').click();
            }
        });
    },
    validatePointsFilter:function(minVal, maxVal, minValId, maxValId){
        if (!minVal) {
            minVal = 0;
            $(minValId).val(minVal);
        }
        if (!maxVal) {
            maxVal = 999999;
            $(maxValId).val(maxVal);
        }
        if ($.isNumeric(minVal) && $.isNumeric(maxVal)) {
            minVal = parseInt(minVal, 10);
            maxVal = parseInt(maxVal, 10);

            if (maxVal >= minVal) {
                $(minValId).parent().removeClass('has-error');
                $(maxValId).parent().removeClass('has-error');
                return true;
            } else {
                $(maxValId).parent().addClass('has-error');
            }
        } else {
            if (!$.isNumeric(minVal) && !$.isNumeric(maxVal)) {
                $(minValId).parent().addClass('has-error');
                $(maxValId).parent().addClass('has-error');
            } else if (!$.isNumeric(minVal) && $.isNumeric(maxVal)) {
                $(minValId).parent().addClass('has-error');
                $(maxValId).parent().removeClass('has-error');
            } else if ($.isNumeric(minVal) && !$.isNumeric(maxVal)) {
                $(minValId).parent().removeClass('has-error');
                $(maxValId).parent().addClass('has-error');
            }
        }
        return false;
    },
    productCards: function () {
        /* $('.products-grid-container .gridItem').on({
            mouseenter: function () {
                $(this).find('.product-widgets.condensed').click();
            },
            mouseleave: function () {
                $(this).find('.product-widgets.condensed.expanded').click();
            },
            focusin: function () {
                $(this).find('.product-widgets.condensed').click();
            },
            focusout: function () {
                $(this).find('.product-widgets.condensed.expanded').click();
            }
        }); */

        $('.gridItem').each(function () {
            var _this = $(this);
            var widgets = _this.find('ul.product-widgets li.product-widget');
            var totalWidgets = widgets.length;
            if (totalWidgets > 0) {
                var CONST_MARGIN_LEFT = 8;
                var CONST_POS_LEFT = 8;
                var maxMarginLeft = totalWidgets * CONST_MARGIN_LEFT;
                var WIDGET_OFFSET_WIDTH = $(widgets[totalWidgets - 1]).outerWidth();
                widgets.each(function (index) {
                    maxMarginLeft = maxMarginLeft - CONST_MARGIN_LEFT;
                    $(this).css('margin-left', maxMarginLeft + 'px');
                    var posLeft = (WIDGET_OFFSET_WIDTH - $(this).outerWidth()) + CONST_POS_LEFT;
                    $(this).css('left', posLeft + 'px');
                });
            }
        });
        
        $(document).on('click', '.listProductAddToCart.carted', function (evt) {
            var productId = $(this).attr('data-product-id');
            $(".cartItem a[data-product-id='" + productId + "']").click();
            $(this).removeClass('carted');
        });

        $('.merchInfo').each(function(){
            var $this = $(this);
            var isColorOptionEnable = $this.find('.color-swatch-container').is(':visible');
            if(isColorOptionEnable){
                var containerWidth = $this.width();
                var colorSwatches = $this.find('.color-swatch-container ul.color-swatches li.color-swatch');
                var totalCount = colorSwatches.length;
                var accommodateCount = ((Math.floor(containerWidth/20)) - 1);
                if(totalCount > accommodateCount){
                    for(var i=0;i<=accommodateCount-1;i++){
                        $(colorSwatches[i]).removeClass('hidden');
                    }
                    $('.color-swatch-container ul.color-swatches li.more-swatch').removeClass('hidden');
                }else{
                    colorSwatches.each(function(){
                        $(this).removeClass('hidden');
                    });
                }
            }
            $('.color-swatch-container ul.color-swatches li.color-swatch').click(function(evt){
                evt.preventDefault();
                $('.color-swatch-container ul.color-swatches li.color-swatch .color.selected').removeClass('selected');
                $(this).find('.color').addClass('selected');
                var carouselToTrigger = $(this).parents(".gridItemInner").find(".colorChoiceItemCarousel");
                var activeItemIndex = $(this).find('.color').data('colorid') ? $(this).find('.color').data('colorid'):0;
                carouselToTrigger.triggerHandler("owl.goTo", activeItemIndex);
            });
        });
    },
    recentProductsCarousel: function () {
        var recentProductsLimit = 5;
        if (window.innerWidth < 992) {
            recentProductsLimit = 2;
        } //tablet potrait

        if (window.innerWidth < 576) {
            recentProductsLimit = 1;
        } // mobile potrait

        var recentProductss = $('#recent-prod-carousel .gridItem').length;
        if (recentProductss > recentProductsLimit) {
            $('#recent-prod-carousel').removeClass('no-carousel');

            $('#recent-prod-carousel').owlCarousel({
                items: recentProductsLimit,
                itemsDesktop: false,
                itemsDesktopSmall: false,
                itemsTablet: false,
                itemsTabletSmall: false,
                itemsMobile: false,
                pagination: false,
                navigation: false,
                slideSpeed: 300,
                stopOnHover: false,
                addClassActive: false,
                mouseDrag: false,
                touchDrag: false,
                autoPlay: false,
                autoHeight: false,
                transitionStyle: "fadeUp",
                responsive: false,
                responsiveRefreshRate: 200,
                responsiveBaseWidth: window,
                beforeMove: function () {

                },
                afterMove: function () {
                    if ($('#recent-prod-carousel .owl-item:first').hasClass('active')) {
                        $('.recent-prods-carousel-container .carousel-prev-action').addClass('hidden');
                    } else {
                        $('.recent-prods-carousel-container .carousel-prev-action').removeClass('hidden');
                    }
                },
                afterInit: function () {
                },
                afterUpdate: function () {
                }
            });

            $('.recent-prods-carousel-container .carousel-next-action').removeClass('hidden');

            $(".recent-prod-carousel-prev").on("click touchend", function () {
                $('#recent-prod-carousel').trigger('owl.prev');
            });

            $(".recent-prod-carousel-next").on("click touchend", function () {
                $('#recent-prod-carousel').trigger('owl.next');
            });
            
        } else {
            $('#recent-prod-carousel').addClass('no-carousel');
            $('.recent-prods-carousel-container .carousel-prev-action').addClass('hidden');
            $('.recent-prods-carousel-container .carousel-next-action').addClass('hidden');
        }

        $(".recently-viewed-slider-container .tileLink").mousedown(function(event){
            var $this = $(this);
            eGAFunctions.gaEvent('recently-viewed-nav', 'click', $this.attr('href'));
          });

          $("#recentViewCarousel .recentitem .gridItemLink").mousedown(function(event){
            var $this = $(this);
            eGAFunctions.gaEvent('recently-viewed-nav', 'click', $this.attr('href'));
          });

          $(".tilesContainer .gridItemLink").mousedown(function(event){
            var $this = $(this);
            eGAFunctions.gaEvent('recently-viewed-nav', 'click', $this.attr('href'));
          });

          $(".titleContainer .title .viewall").mousedown(function(event){
            var $this = $(this);
            eGAFunctions.gaEvent('recently-viewed-nav', 'click', $this.attr('href'));
          });
        
        // $("#recentViewCarousel .slideNext").mousedown(function(event){
        // 	eGAFunctions.gaEvent('recently-viewed-nav', 'click', 'Next');
        //   });
        
        // $("#recentViewCarousel .slidePrevious").mousedown(function(event){
        // 	eGAFunctions.gaEvent('recently-viewed-nav', 'click', 'Previous');
        //   });

        // $(".fullItemLinkRefresh").mousedown(function (event) {
        //     var creativeName1 = $(this).attr('aria-label');
        //     eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        // });

        // $(".tile, .tileTitle").mousedown(function (event) {
        //     var creativeName1 = $(this).find('.tileTitle').text();
        //     eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        // });

        // $(".featured-products-container").mousedown(function (event) {
        //     var creativeName1 = $(this).find('.titleContainer .title span').text();
        //     eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        // });

        // $(".deals-slider .deals-slider-container .carousel .owl-carousel .owl-wrapper-outer .owl-wrapper").mousedown(function (event) {
        //     // $(".deals-slider .deals-slider-container").mousedown(function (event) {
        //     // var creativeName1 = $(this).find('.titleContainer .title span').text();
        //     var creativeName1 = $('.deals-slider .deals-slider-container').find('.titleContainer .title span').text();
        //     eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        // });
        

        // $(".titleContainer .title").mousedown(function (event) {
        //     var creativeName1 = $(this).find('span').text();
        //     eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        // });






        // $(".fullItemLinkRefresh").mousedown(function (event) {
        //     var creativeName1 = $(this).attr('aria-label');
        //     // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        //     sessionStorage.setItem("creative_name_1", creativeName1);
        // });
        
        // $(".tile, .tileTitle").mousedown(function (event) {
        //     var creativeName1 = $(this).find('.tileTitle').text();
        //     // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        //     sessionStorage.setItem("creative_name_1", creativeName1);
        // });
        
        // $(".featured-products-container").mousedown(function (event) {
        //     var creativeName1 = $(this).find('.titleContainer .title span').text();
        //     // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        //     sessionStorage.setItem("creative_name_1", creativeName1);
        // });

        // $("#recentViewCarousel .gridItemLink").mousedown(function (event) {
        //     // var creativeName1 = $(this).find('.titleContainer .title span').text();
        //     var creativeName1 =  $('.recently-viewed-slider').find('.titleContainer .title span').text();
        //     // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        //     sessionStorage.setItem("creative_name_1", creativeName1);
        // });

        // $(".deals-slider .deals-slider-container .carousel .owl-carousel .owl-wrapper-outer .owl-wrapper").mousedown(function (event) {
        //     // $(".deals-slider .deals-slider-container").mousedown(function (event) {
        //     // var creativeName1 = $(this).find('.titleContainer .title span').text();
        //     var creativeName1 = $('.deals-slider .deals-slider-container').find('.titleContainer .title span').text();
        //     // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        //     sessionStorage.setItem("creative_name_1", creativeName1);
        // });
        
        // $(".titleContainer .title").mousedown(function (event) {
        //     var creativeName1 = $(this).find('span').text();
        //     // eGAFunctions.gaEvent('recently-viewed-nav', 'click', sessionStorage.setItem("creative_name_1", creativeName1));
        //     sessionStorage.setItem("creative_name_1", creativeName1);
        // });

        // $(".menu-option.secondary-category, .menu-option.primary-category").mousedown(function (event) {
        //     sessionStorage.clear();
        // });

    },
    triggerAttrFilter: function (_this) {
        eGAFunctions.gaEvent('category-nav-menu', 'click', _this.attr('href'));
        if (window.innerWidth > 992) {
            window.open(_this.attr('href'), '_self', false);
            $("input[name='"+_this.attr('name')+"']").not('checked').attr("disabled", true);
        }
    },
    triggerCategoryFilter: function(_this){
        eGAFunctions.gaEvent('category-nav-menu', 'click', _this.attr('href'));
        
        if(!_this.hasClass('checked')){ // if check is the last event there is no value of unchecked items
            _this.parents('ul').find('.unchecked').removeClass('unchecked'); // remove all unchecked
            _this.parents('ul').find('.checked').removeClass('checked'); // remove all checked
            _this.addClass('checked');
        }else{
            _this.prop('checked', false);
            _this.removeClass('checked');
            _this.addClass('unchecked');
        }
        
        if (window.innerWidth > 992) {
            this.CategoryNavhandler(_this);
        }
    },
    applyAttrFilters: function () {
        
        var filterLoc = currentLoc = window.location.pathname;
        var filterParams = {};

        var qs_q = $("[name=q]:hidden").val() ? $("[name=q]:hidden").val() : null;
        if (qs_q) {
            filterParams.q = qs_q;
        }

        var minVal = $('#rangeFloor').val();
        var maxVal = $('#rangeCeiling').val();
        var minValId = '#rangeFloor';
        var maxValId = '#rangeCeiling';
        
        if (eGRMProductListPage.validatePointsFilter(minVal, maxVal, minValId, maxValId)) {
            filterParams.minSearchValue = $('#rangeFloor').val();
            filterParams.maxSearchValue = $('#rangeCeiling').val();
        }

        $('.attr-identifier').each(function () {
            filterParams[$(this).text().trim()] = [];
        });

        var activeAttr = $('.attr-filter-container input:checked');
        activeAttr.each(function () {
            $this = $(this);
            filterParams[$this.attr('name')].push($this.attr('value'));
        });

        if($('.category-filter-container input:checked').length){
            var activeCategory = $('.category-filter-container input:checked').last();
            if(activeCategory.parents('ul').find('.unchecked').length){
                activeCategory = activeCategory.parents('ul').find('.unchecked').first();
            }
        }else{
            var activeCategory = $('.category-filter-container input[type="radio"]').first();
        }

        if(activeCategory.hasClass('checked')){
            filterLoc = activeCategory.attr('href');
            currentLoc = window.location.origin+filterLoc;
        }else{
            if(activeCategory.attr('parent-href')){
                filterLoc = activeCategory.attr('parent-href');
                currentLoc = window.location.origin+filterLoc;
            }
        }

        if(currentLoc.indexOf("?") != -1){ // search page
            var urlObj = new URL(currentLoc);
            var pageURL = urlObj.search.substring(1);
            var urlVariables = pageURL.split('&');
            for (var i = 0; i < urlVariables.length; i++) {
                var parameterName = urlVariables[i].split('=');
                if (parameterName[0] == 'searchCatId') {
                    filterParams.searchCatId = parameterName[1];
                }
            }
            filterLoc = filterLoc.split('?')[0];
        }

        var qs_filterparams = $.param(filterParams, true);
        filterLoc = filterLoc + '?' + qs_filterparams;
        var form = document.createElement("form");
        form.setAttribute("method", "post");
        form.setAttribute("action", window.location.origin+"/ecommerce/pointsBased/category");
        form.setAttribute("class", "hidden");
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = "categoryURI";
        input.value = filterLoc;
        form.appendChild(input);
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = "minValue";
        input.value = $('#rangeFloor').val();
        form.appendChild(input);
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = "maxValue";
        input.value = $('#rangeCeiling').val();
        form.appendChild(input);
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = "csrfToken";
        input.value = $("input[name=csrfToken]").val();
        form.appendChild(input);
        document.body.appendChild(form);
        form.submit();
    },
    cancelAttrFilter: function () {
        $('body').removeClass('overflow-hidden');
        $('.filter-container-overlay').removeClass('show');
    }
}

var eGRMModal = {
    init: function () {
        $(document).on('keydown', function (evt) {
            if(evt.which == 27){
                if($('.grm-modal--show').is(':visible')){
                    evt.preventDefault();
                    eGRMModal.close($('.grm-modal.grm-modal--show'));
                }
            }
        });
        $(document).on('click', '.grm-modal__close', function (evt) {
            evt.preventDefault();
            eGRMModal.close($(this).parents('.grm-modal'));
            $('body').removeClass('overflow-hidden');
        });
    },
    open: function($grmModal){
		if($("#myModal").is(':visible') != true){
			$('body').addClass('overflow-hidden');
        	$grmModal.addClass('grm-modal--show');
       		$grmModal.find('.grm-modal__close').focus();
		}
    },
    close: function ($grmModal) {
        var $grmModalClose = $grmModal.find('.grm-modal__close');
        if($grmModalClose.attr('data-reload') && $grmModalClose.attr('data-reload') == '1'){
            location.reload();
            return;
        }
        $grmModal.removeClass('grm-modal--show');
        $grmModal.addClass('grm-modal--hide');
        $('body').removeClass('overflow-hidden');
        $grmModal.one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function (evt) {
            $grmModal.removeClass('grm-modal--hide');
        });
    }
}

var eGRMCookieNotice = {
    $cookieDataEle: null,
    $cookieJson: null,
    init: function () {
        var that = this;
        that.$cookieDataEle = $('#gdpr-notice-data');
        that.$cookieJson = $('#gdpr-notice-data').length ? JSON.parse($('#gdpr-notice-data').text()) : null;

        if (that.$cookieJson != null) {
            $('.cookie-accept').click(function (evt) {
                evt.preventDefault();
                var _that = this;
                BLC.ajax({
                    url: that.$cookieJson.dismissButton.action,
                    timeout: 90000,
                    type: "GET"
                }, function (result) {
                    eGRMModal.close($(_that).parents('.grm-modal'));
                });
            });

            $('.cookie-detail').click(function (evt) {
                evt.preventDefault();
                window.open(that.$cookieJson.links[0].href,'_blank');
            });

            $('.grm-modal__title').text(that.$cookieJson.headerCopy);
            $('.cookie-notice').text(that.$cookieJson.policyDecriptionCopy);
            $('.cookie-accept').text(that.$cookieJson.dismissButton.label);
            $('.cookie-detail').text(that.$cookieJson.links[0].label);
            $('#cookie_modal').addClass('grm-modal--show');
        }else{
            // console.log("no cookie notice available");
        }
    }
}
//Endor 3737 start
var securityQuestionsValidation = {
	init: function() {

		var q1Val=$('#challengeQuestion1').val();
		var q2Val=$('#challengeQuestion2').val();
		var q3Val=$('#challengeQuestion3').val();
	
		getQuestionVal($('#challengeQuestion1'), q2Val, q3Val);
		getQuestionVal($('#challengeQuestion2'), q1Val, q3Val);
		getQuestionVal($('#challengeQuestion3'), q1Val, q2Val);
			
		function getQuestionVal(question, currentVal, val) {
			
			question.find('option[value!="' + currentVal + '"]').show();
			question.find('option[value="' + currentVal + '"]').hide();
			question.find('option[value="' + val + '"]').hide();
			}
			//Event handlers
		$('#challengeQuestion1').change(function() {
			
			q1Val=$(this).val();
		  	getQuestionVal($('#challengeQuestion2'), $(this).val(), q3Val);
		 	getQuestionVal($('#challengeQuestion3'), $(this).val(), q2Val );
		});
		
		$('#challengeQuestion2').change(function() {
			q2Val=$(this).val();
		  	getQuestionVal($('#challengeQuestion1'), $(this).val(), q3Val);
		 	getQuestionVal($('#challengeQuestion3'), $(this).val(), q1Val );
			});
			
		$('#challengeQuestion3').change(function() {
			q3Val=$(this).val();
		  	getQuestionVal($('#challengeQuestion1'), $(this).val(), q2Val);
		 	getQuestionVal($('#challengeQuestion2'), $(this).val(), q1Val );
			});
			
		$( document ).ready(function() {
			
			  if($('#old-password').attr("data-name")=="true"){
				  $('#old-password').focus();
			  }else if($('#new-password').attr("data-name")=="true"){
				  $('#new-password').focus();
			  }else if($('#new-password-again').attr("data-name")=="true"){
				  $('#new-password-again').focus();
			  }
			  else
			  if(($('#challengeQuestion1').attr("data-name")=="true") || ($('#chgAnswer1').attr("data-name")=="true") ){
				  $('#chgAnswer1').focus();
			  }else if(($('#challengeQuestion2').attr("data-name")=="true") || ($('#chgAnswer2').attr("data-name")=="true")){
				  $('#chgAnswer2').focus();
			  }else if(($('#challengeQuestion3').attr("data-name")=="true") || ($('#chgAnswer3').attr("data-name")=="true")){
					$("#chgAnswer3").focus();  
			  }
			  
			  });			
	}
}
//Endor 3737 end

//Check certificate balance
var cBalance = {
	init: function() { 
		$(".successBalanceNote").hide();
		$(".errorCertificateNumber").hide();
		$(".myaccount_nav_certificate_balance").click(function() {
				$(".successBalanceNote").hide();
				$(".errorCertificateNumber").hide();
				$(".certificate_number").val('');
				eGRMModal.open($('#certificate_balance_modal'));
				
		 });
		 
		 $(document).on('click', '.check-balance-btn', function(e) {
				cBalance.checkCertificateBalance(e);
		});

	},
	checkCertificateBalance : function(e) {
		$(".certificate_number").removeClass("input-error-cer-border");
		$(".invalid-error-cer-note").addClass("hide");
		$(".successBalanceNote").hide();
		$(".errorCertificateNumber").hide();
        var  $certNumber = (e.currentTarget.previousElementSibling.previousElementSibling.previousElementSibling.children[0].value).trim();
         if($certNumber == ''){
			$(".certificate_number").addClass("input-error-cer-border");
			$(".invalid-error-cer-note").removeClass("hide");
			return false;
		 }
		 eActivityIndicator.show();

		BLC.ajax({
		    url : '/ecommerce/checkout/certificate/ajaxapply',
		    type : 'POST',
		    dataType: "json",
		    data: {
                        certNumber: $certNumber,
                        certificate: $certNumber,
                        id: 'certificate',
                        balance: 'true'
             }
            }, function (result) {
                if(result && result.certBalance && result.certBalance != ''){
					$(".successBalanceNote").show();
					$(".resBalanceAmount").html(result.certBalance);
				}
				
				if(result && result.certError && result.certError != ''){
					$(".successBalanceNote").hide();
					$(".errorCertificateNumber").show();
					$(".error_certificate_node").html(result.certError);
				}
				eActivityIndicator.hide();
            });

	}
}

//Endor 3624 Ability to sort Favorites and Cart
var sortInWishlistAndCart = {
	init: function() {

		$('#wishlist_sortMethodSelector').on('change', function() {
			var sortBy = $('#wishlist_sortMethodSelector').find(":selected").attr("value");
			if (typeof sortBy != 'undefined') {
				window.location.href = BLC.servletContext + '/account/wishlist?sort=' + sortBy;
			}
		});

		$('#cart_sortMethodSelector').on('change', function() {
			var sortBy = $('#cart_sortMethodSelector').find(":selected").attr("value");
			if (typeof sortBy != 'undefined') {
				window.location.href = BLC.servletContext + '/cart?sort=' + sortBy;
			}
		});

	}
}

cBalance.init();;
var eCheckout = {
    init: function(){
         // The options used for the login/register modal
        var modalCheckoutOptions = {
            maxWidth: 720,
            maxHeight: 560,
            minHeight: 360,
            position: ['30px']
        };

        //Script generation for FraudNet
        var script = document.createElement("script"); //Make a script DOM node
    	script.src = "//media.fraud.net/shield/js/v1/analytics.js"; //Set it's src to the provided URL
    	document.head.appendChild(script); //Add it to the end of the body section of the page
    	
		/*JIRA-799*/
       // var dynamicTotal = $("#order-summary-ordertotal").text();
	   /*JIRA-799*/
        // handler for mobile checkout drawer
        $(".detailButton a.btn").on("click", function (e) {
            var dynamicTotal = $(".order-summary-ordertotal").text();
            orderTotal = dynamicTotal;
            $("#mobileTotal").text(orderTotal);
            $(".mobileSummary").slideToggle();
            $(".shortSummary").toggleClass("opened closed");
            $buttonTextOpened = $(".shortSummary .opened").text();
            $buttonTextClosed = $(".shortSummary .closed").text();
            if ($(".shortSummary").hasClass("opened")) {
                $(this).text($buttonTextOpened);
            } else {
                $(this).text($buttonTextClosed);
            }
            e.preventDefault();
        });

        function copyShippingForm() {
            $('.cloneable').each(function () {
                $("#billing_info input[name='" + $(this).attr('name') + "']").val($(this).val()).attr("disabled", "disabled");
                $("#billing_info select[name='" + $(this).attr('name') + "']").val($(this).val()).attr("disabled", "disabled");
            })
        }

        function copyBillingForm() {
            $('.cloneable').each(function () {
                $("#shipping_info input[name='" + $(this).attr('name') + "']").val($(this).val()).attr("disabled", "disabled");
                $("#shipping_info select[name='" + $(this).attr('name') + "']").val($(this).val()).attr("disabled", "disabled");
            })
        }

        function showAddAddress() {
            var $form = $('form#multiship_address');
            BLC.ajax({
                url: $form.attr('action'),
                type: "POST",
                data: $form.serialize()
            }, function (data, extraData) {
                var showAddAddressUrl = $('a.add-address-link').attr('href');
                BLC.ajax({
                    url: showAddAddressUrl
                }, function (data, extraData) {
                    $('#multiship-products').hide();
                    $('.simplemodal-wrap').append(data);
                });
            });
            return false;
        }

        /* Toggle visibility of payment methods */
        $('body').on('click', 'input#paymentMethod_cc', function () {
            $('#paymentOptions dd').css({
                display: "none"
            });
            $(this).closest('dt').next().css({
                display: "block"
            });
        });

        $('body').on('click', 'input#paymentMethod_paypal', function () {
            $('#paymentOptions dd').css({
                display: "none"
            });
            $(this).closest('dt').next().css({
                display: "block"
            });
        });

        $('body').on('click', 'input#paymentMethod_cod', function () {
            $('#paymentOptions dd').css({
                display: "none"
            });
            $(this).closest('dt').next().css({
                display: "block"
            });
        });

        /* Toggle visibility of promo and credit options */
        $('body').on('click', 'input#promoCreditOption_credit', function () {
            $(this).closest('dt').next().toggle();
        });

        $('body').on('click', 'input#promoCreditOption_promo', function () {
            $(this).closest('dt').next().toggle();
        });

        /** Helper methods to copy from billing address to shipping address and vice versa based on your layout **/

        /* Copy Billing Form to Shipping Form Checkbox */
        $('body').on('click', 'input#use_billing_address', function () {
            if ($(this).is(':checked')) {
                var $option = $('#billing_info_country').children(':selected');
                $('#shipping_info_country').val($option.val());
                reloadDynamicForm($('#shipping_info_country'), $('#dynamic-shipping-form'), copyBillingForm);
            } else {
                $(this).closest('form').find(".clearable").val("").removeAttr("disabled");
            }
        });

        /* Copy Shipping Form to Billing Form Checkbox */
        $('body').on('click', 'input#use_shipping_address', function () {
            if ($(this).is(':checked')) {
                var $option = $('#shipping_info_country').children(':selected');
                $('#billing_info_country').val($option.val());
                reloadDynamicForm($('#billing_info_country'), $('#dynamic-billing-form'), copyShippingForm);
            } else {
                $(this).closest('form').find(".clearable").val("").removeAttr("disabled");
            }
        });

        /* Submit Shipping Form when radio button is checked */
        $('body').on('click', '#select_shipping', function () {
            $('#shipping_info').submit();
        });

        /* Show or Edit multiship options link was clicked */
        $('body').on('click', 'a#multiship', function () {
            BLC.ajax({
                url: $(this).attr('href')
            }, function (data) {
                $.modal(data, modalCheckoutOptions);
            });
            return false;
        });

        /* Add address from the dropdown was selected */
        $('body').on('change', 'select.multiship-address', function () {
            var $option = $(this).children(':selected');
            if ($option.val() == 'addNewAddress') {
                showAddAddress();
            }
        });

        /* Add address button clicked */
        $('body').on('click', 'a.add-address-link', function () {
            return showAddAddress();
        });

        /* Cancel pressed on multiship */
        $('body').on('click', '#multiship-products a.cancel', function () {
            $.modal.close();
            return false;
        });

        /* Cancel pressed on add address */
        $('body').on('click', '#multiship-add-address a.cancel', function () {
            $('#multiship-products').show();
            $('#multiship-add-address').remove();
            return false;
        });

        /* IE9 fix for mouse focus on CVV text box */
        $('body').on('click', '#billing, .btn-next-seg', function () {
            if (/MSIE 9\./i.test(navigator.userAgent)) {
                $('.jp-card-back').hide();
                $('#card_cvn').focus(function () {
                    $('.jp-card-front').hide();
                    $('.jp-card-back').show();
                });
                $('#card_cvn').blur(function () {
                    $('.jp-card-front').show();
                    $('.jp-card-back').hide();
                });
            }
        });


        /* Save pressed on add address */
        $('body').on('click', '#multiship-add-address input.save', function () {
            var $form = $(this).closest('form');

            BLC.ajax({
                url: $form.attr('action'),
                type: "POST",
                data: $form.serialize(),
                cache: false
            }, function (data, extraData) {
                $('.simplemodal-wrap').html(data);
            });
            return false;
        });

        /* Dynamic Regional Forms */
        $('body').on('change', '#billing_info_country', function () {
            var $option = $(this).children(':selected');
            BLC.ajax({
                url: $option.data('href'),
                type: "POST",
                cache: false
            }, function (data) {
                $('#dynamic-billing-form').html(data);
            });
        });

        $('body').on('change', '#shipping_info_country', function () {
            var $option = $(this).children(':selected');
            BLC.ajax({
                url: $option.data('href'),
                type: "POST",
                cache: false
            }, function (data) {
                $('#dynamic-shipping-form').html(data);
            });
        });

        $('body').on('change', '#multi_shipping_info_country', function () {
            var $option = $(this).children(':selected');
            BLC.ajax({
                url: $option.data('href'),
                type: "POST",
                cache: false
            }, function (data) {
                $('#dynamic-multi-shipping-form').html(data);
            });
        });

        $('#addToAddressBook').click(toggleShippingAddressFields);

        function reloadDynamicForm(countryDropdown, formDiv, copyForm) {
            var $option = $(countryDropdown).children(':selected');

            BLC.ajax({
                url: $option.data('href'),
                type: "POST",
                cache: false
            }, function (data) {
                $(formDiv).html(data);
                if (typeof copyForm == "function") {
                    copyForm();
                }
            });
        }

        function toggleDynamicAddressForms() {
            $('.dynamic_address_country').show();
            $('#billing_info_country_nonjs').hide();
            $('#shipping_info_country_nonjs').hide();
        }

        function togglePromoCreditOptions() {
            $('#promoCreditOptions').children('dd').each(function () {
                if ($(this).find('span.error').length == 0) {
                    $(this).hide();
                } else {
                    $(this).prev().find('input[type=checkbox]').prop('checked', true);
                    $(this).show();
                }
            });
        }

        function toggleShippingAddressFields() {
            if ($('input[id=addToAddressBook]').is(':checked')) {
                var label = $("#checkout-address-form").find("label[for='fullName']");
                $(label).show();

                $("#checkout-address-form").find('#fullName').show();
                $("#checkout-address-form").find('.btn-checkout-continue-address').addClass("hide");
                $("#checkout-address-form").find('.btn-checkout-save-address').removeClass("hide");
            } else {
                var label = $("#checkout-address-form").find("label[for='fullName']");
                $(label).hide()

                $("#checkout-address-form").find('#fullName').hide();
                $("#checkout-address-form").find('.btn-checkout-continue-address').removeClass("hide");
                $("#checkout-address-form").find('.btn-checkout-save-address').addClass("hide");
            }
            if ((!$('input[id=addressType_residential]').is(':checked') && !$('input[id=addressType_business]').is(':checked')) || $('input[id=addressType_residential]').is(':checked')) {
                $("#checkout-address-form").find('#companyName').hide();
                $("#checkout-address-form").find("label[for='companyName']").hide();
                $("#checkout-address-form").find('#attention').hide();
            }

            //International - Collect tax id for Brazil
            if ($('input[id=taxType_CPF]').is(':checked')) {
                $("#checkout-address-form").find('#personalTaxId').show();
                $("#checkout-address-form").find('#personalTaxIdLink').show();
                $("#checkout-address-form").find('#corporateTaxId').hide();
                $("#checkout-address-form").find('#corporateTaxIdLink').hide();
                $("#checkout-address-form").find('#personalTaxIdError').show();
                $("#checkout-address-form").find('#corporateTaxIdError').hide();
                $("#checkout-address-form").find(".corporateTaxIdAlert").addClass('hidden');
            }
            if ($('input[id=taxType_CNPJ]').is(':checked')) {
                $("#checkout-address-form").find('#personalTaxId').hide();
                $("#checkout-address-form").find('#personalTaxIdLink').hide();
                $("#checkout-address-form").find('#corporateTaxId').show();
                $("#checkout-address-form").find('#corporateTaxIdLink').show();
                $("#checkout-address-form").find('#personalTaxIdError').hide();
                $("#checkout-address-form").find('#corporateTaxIdError').show();
                $("#checkout-address-form").find(".personalTaxIdAlert").addClass('hidden');
            }

        }

        function getURLParameter(parameter) {
            var pageURL = window.location.search.substring(1);
            var urlVariables = pageURL.split('&');
            for (var i = 0; i < urlVariables.length; i++) {
                var parameterName = urlVariables[i].split('=');
                if (parameterName[0] == parameter) {
                    return parameterName[1];
                }
            }
        }

        function checkOrderOrPaymentFailure() {
            if (getURLParameter("PAYMENT_PROCESSING_ERROR") == 'cart.paymentProcessingError') {
                //var alertDanger = $("#payment").find(".alert-danger").get(0).outerHTML;
                $('.order-summary-shipping-price').removeClass('hide');
                $('.checkout-total').removeClass('hide');
                $("#billing").click();
				
				//4320 - If a payment failure  happens, open the CC opption and hide dealer option
				$("#ccPaymentOption").click();
				$('#invoiceOption').removeAttr('checked');
				$('#ccPaymentOption').attr('checked', 'checked');
				$("#creditCard").removeClass("hide");
				$("#invoiceOptions").addClass("hide");
				

                //$("#payment").prepend(alertDanger);
            }
        }
        $(document).on('submit', 'form#checkout-address-form, form#checkout-verify-form, form.checkout-form', function () {
            eActivityIndicator.show();

            setTimeout(function () {
                eActivityIndicator.hide();
            }, 15000);
        });
        /* Added to get the States based on selected Country */
        $('#bill_to_address_country').change(function () {
            var selectedCountry = $('#bill_to_address_country').val();
            $setUrl = BLC.servletContext + "/checkout/addressverification/getStates";
            BLC.ajax({
                url: $setUrl,
                type: "POST",
                dataType: "json",
                data: {
                    country: selectedCountry
                }
            }, function (data, extraData) {
                if (data.error) {} else {
                    $("#bill_to_address_state").empty();
                    $("#bill_to_address_state").append($('<option>State*</option>').attr('value', 'NONE'));
                    for (row in data) {
                        $("#bill_to_address_state").append($('<option></option>').attr('value', data[row].alternateAbbreviation).text(data[row].name));
                    }
                    var shipState = sessionStorage.getItem('shippingState');
                    if(shipState){
                        if(shipState.length == 2){
                            $("#bill_to_address_state").val(shipState).change();
                        }else{
                            $("#bill_to_address_state").val(shipState.substring(3)).change();
                        }
                    }else{
                        $("#bill_to_address_state").val('NONE').change();
                    }
                }
            });
        });
        /* Same as Shipping  */
        $('#sameAsShipping').click(function () {
            if ($('#sameAsShipping').is(':checked')) {
                $('.bill-address-field').closest('.field-error').removeClass('field-error');
                //make an ajax call to fetch the ship to address
                BLC.ajax({
                        url: BLC.servletContext + "/checkout/ajaxGetShipToAddress",
                        type: "POST",
                        dataType: "json"
                    },
                    function (result) {
                        sessionStorage.setItem('shippingState', result.state);
                        $('#bill_to_address_country').val(result.country).change();
                        $('#bill_to_forename').val(result.firstName);
                        $('#bill_to_surname').val(result.lastName);
                        $('#bill_to_address_line1').val(result.addressLine1);
                        if(result.addressLine2){
                            $('#bill_to_address_line2').val(result.addressLine2);
                        }else{ //GL2640
                            var selectedAddr = $('#selected-id').val();
                            var suite = $('#use-address-'+selectedAddr).find('var').attr('data-internalnumber');
                            if(suite){
                                $('#bill_to_address_line2').val(suite);
                            }
                        }
                        $('#bill_to_address_line3').val(result.addressLine3);
                        $('#bill_to_address_line4').val(result.addressLine4);
                        $('#bill_to_address_city').val(result.city);
                        if (result.state.length == 2) {
                            $('#bill_to_address_state').val(result.state).change();
                        }else{
                            $('#bill_to_address_state').val(result.state.substring(3)).change();
                        }
                        $('#bill_to_address_postal_code').val(result.zipCode);
                        $('#bill_to_email').val(result.emailAddress);
                        $('#bill_to_phone').val(result.phone);

                        $('#bill_to_address_country').attr('disabled', 'disabled');
                        $('#bill_to_forename').attr('readonly', 'true').addClass('readonly');
                        $('#bill_to_surname').attr('readonly', 'true').addClass('readonly');
                        $('#bill_to_address_line1').attr('readonly', 'true').addClass('readonly');
                        $('#bill_to_address_line2').attr('readonly', 'true').addClass('readonly');
                        $('#bill_to_address_city').attr('readonly', 'true').addClass('readonly');
                        $('#bill_to_address_state').attr('disabled', 'disabled');
                        $('#bill_to_address_postal_code').attr('readonly', 'true').addClass('readonly');
                        $('#bill_to_email').attr('readonly', 'true').addClass('readonly');
                        $('#bill_to_phone').attr('readonly', 'true').addClass('readonly');
                    });
            } else {
                sessionStorage.removeItem('shippingState');
                $('#bill_to_address_country').removeAttr('disabled');
                $('#bill_to_forename').removeAttr('readonly').removeClass('readonly');
                $('#bill_to_surname').removeAttr('readonly').removeClass('readonly');
                $('#bill_to_address_line1').removeAttr('readonly').removeClass('readonly');
                $('#bill_to_address_line2').removeAttr('readonly').removeClass('readonly');
                $('#bill_to_address_city').removeAttr('readonly').removeClass('readonly');
                $('#bill_to_address_state').removeAttr('disabled');
                $('#bill_to_address_postal_code').removeAttr('readonly').removeClass('readonly');
                $('#bill_to_email').removeAttr('readonly').removeClass('readonly');
                $('#bill_to_phone').removeAttr('readonly').removeClass('readonly');
            }

        });
        toggleDynamicAddressForms();
        togglePromoCreditOptions();
        toggleShippingAddressFields();
        checkOrderOrPaymentFailure();
        //GL 1366
        $("body").on("submit", "#orderRejectForm, #orderApproveForm", function () {
            $(this).submit(function () {
                return false;
            });
            return true;
        });

        $("#print_order").click(function(evt){
			$(".order-confirmation-container").printThis();
        });
        
        $('.show_fpd_preview_modal').click(function(evt){
            var _this = $(this);
            var itemId = _this.data('item_id');
            var modalToShow = $('#fpd_preview_modal_'+itemId);
            eGRMModal.open(modalToShow);
        });

        $('.show_fpd_preview_modal_shipping').click(function(evt){
            var _this = $(this);
            var itemId = _this.data('item_id');
            var modalToShow = $('#fpd_preview_modal_shipping_'+itemId);
            eGRMModal.open(modalToShow);
        });

    },
    summaryWidth: function () {
        // handle skinny checkout summary order table
        var $summaryWidth = $(".order-summary").width();
        var $details = $(".order-summary .details .col-md-5, .order-summary .details .col-md-7");
        if ($summaryWidth <= 213) {
            $details.addClass("tinySummary");
        } else {
            $details.removeClass("tinySummary");
        }
    },

    checkoutStepGA: function(step) {
    	if(typeof ga == 'function')
   		{
    		ga('master.ec:setAction','checkout', {'step': step});
    		ga('master.send', 'pageview');
    		ga('master.ec:setAction','checkout', {
    		    'step': step,
    		    'option': 'N/A'
    		});
        	ga('master.send', 'event', 'Checkout', 'Option', {
        		/*Can be used to navigate to the next page:
        		hitCallback: function(){}*/
        	});
   		}
    	
    	if(step == 5){
    		eCheckout.fraudNet();
    	}

        // if (typeof gtag == 'function') {
		// 	console.log('2: Checkout begun - option = '+step);
		// 	gtag("event", "begin_checkout", { items: []});
		// }
    },
    
    fraudNet: function(){
    	//Get session id from cookie
    	var sid = document.cookie.match('sid=([^;]*)');
        sid = sid ? sid[1]:null;
        if(sid){
            if(sid.includes('.')){
                sid = sid.substring(0, sid.indexOf('.'));
            }
    
            window.shield=window.shield||function(){(shield.q=shield.q||[]).push(arguments)};
            shield('create',
                    'FN-1181' // shield id
            );
            shield('track',
                    sid //session id
            );
        }
    }
};;
var eShipping = {
    init: function () {
        var $form = $('#checkout-shipping-method-form');

        function ajaxShipMethodUpdate(orderItemId) {
            eSpinners.show('spinner-wrapper', '.order-summary');

            BLC.ajax({
                url: $form.attr('action'),
                type: "POST",
                data: $form.serialize()
            }, function (data) {

                //update the order summary
                $('.order-summary').html(data);

                //update the shipping method text and description on the final review page
                var
                    shippingMethodText = $(".shippingMethodText").val(),
                    shippingDescriptionText = $(".shippingDescriptionText").val(),
                    shippingTaxCalculationErrorMsg = $(".shippingTaxCalculationErrorMsg").val();

                // check for errors
                if (shippingTaxCalculationErrorMsg != "") {
                    $("#checkout-error-alert").removeClass('hidden');
                    $("#shippingOptionsErrorHolder").text(shippingTaxCalculationErrorMsg);
                } else {

                    $("#checkout-error-alert").addClass('hidden');
                    $("#shippingOptionsErrorHolder").text("");
                }

                if (orderItemId == null) {
                    $("[id^=ship-method-]").find("strong").text(shippingMethodText);
                    $("[id^=ship-method-]").find("p").text(shippingDescriptionText);
                } else {
                    $("[id=ship-method-" + orderItemId + "]").find("strong").text(shippingMethodText);
                    $("[id=ship-method-" + orderItemId + "]").find("p").text(shippingDescriptionText);
                }

                // clear certificates from the billing page
                var $certs = $('.cert-number'),
                    certsLength = $certs.length,
                    clearAppliedCertificates = $(".clearAppliedCertificates").val();

                if (clearAppliedCertificates === 'true') {
                    $.each($certs, function (i, cert) {
                        if (i < certsLength - 1) {
                            cert.remove();
                        }
                    });
                }

                //update credit card signature with latest order total
                var
                    afterCertsTotal = $(".afterCertsTotal").val(),
                    rawAfterCertsTotal = $(".rawAfterCertsTotal").val();

                if (afterCertsTotal === '0') {

                    $("#credit-card-total").text("$0.00");

                } else if (afterCertsTotal > '') {

                    $("#credit-card-total").text(afterCertsTotal);
                    $("input[name=amount]").attr('value', rawAfterCertsTotal);

//                    var csData = {
//                        amount: rawAfterCertsTotal,
//                        transaction_uuid: $("input[name=transaction_uuid]").val(),
//                        locale: $("input[name=locale]").val(),
//                        reference_number: $("input[name=reference_number]").val(),
//                        currency: $("input[name=currency]").val(),
//                        signed_field_names: $("input[name=signed_field_names]").val(),
//                        signed_date_time: $("input[name=signed_date_time]").val()
//                    };
//3969 - Do not invoke signature update until submission
//                    BLC.ajax({
//                        url: BLC.servletContext + "/checkout/payment/ajaxGenerateCybersourceSignature",
//                        type: "POST",
//                        data: csData,
//                        dataType: "json"
//                    }, function (data) {
//                        $("input[name=signature]").attr('value', data.signature);
//                    });
                }

                eSpinners.hide('spinner-wrapper');
                $('#mobileTotal').text($('.order-summary-ordertotal').text());
            });
        }

        // Enable/disable the shipping window dates
        $('#shipWindowExists').click(function () {
            var
                $earliestArrival = $('#earliestArrival'),
                $latestArrival = $('#latestArrival'),
                $shipMethodSelector = $('.shipMethodSelector select');
            if ($(this).is(':checked')) {
                $earliestArrival.removeAttr('disabled');
                $latestArrival.removeAttr('disabled');
                $shipMethodSelector.attr('disabled', 'disabled');
                $shipMethodSelector.find('option').removeAttr('selected');

                $shipMethodSelector.find('option').filter(function () {
                    return (($(this).val() == "G"))
                }).attr('selected', 'selected');

                var standardShippingText = $shipMethodSelector.find('option:selected').html();
                $('div.shipMethodSelector span.customSelectInner').html(standardShippingText);
                document.getElementById("shipWindowExists").value = true;



                ajaxShipMethodUpdate(null);

            } else {
                $earliestArrival.attr('disabled', 'disabled');
                $earliestArrival.val(null);

                $latestArrival.attr('disabled', 'disabled');
                $latestArrival.val(null);

                $shipMethodSelector.removeAttr('disabled');
                $('.shipMethodSelector span').removeClass("customSelectDisabled");

                BLC.ajax({
                    url: BLC.servletContext + "/checkout/shipping/dates",
                    type: "POST",
                    dataType: "json",
                    data: $form.serialize()
                }, function (data, extraData) {});

            }
        });
        $('.statementDate').datetimepicker({
            icons: {
                up: "endorIcon endor-down-open-big",
                down: "endorIcon endor-up-open-big",
                previous: "endorIcon endor-left-arrow",
                next: "endorIcon endor-right-arrow",
                close: "endorIcon endor-cancel-large"
            },
            showClose: true,
            format: 'MM/DD/YYYY'
        });
        $('.ship-date').datetimepicker({
            icons: {
                up: "endorIcon endor-down-open-big",
                down: "endorIcon endor-up-open-big",
                previous: "endorIcon endor-left-arrow",
                next: "endorIcon endor-right-arrow",
                close: "endorIcon endor-cancel-large"
            },
            showClose: true,
            format: 'MM-DD-YYYY'
        }).on('dp.hide', function (e) {

            BLC.ajax({
                url: BLC.servletContext + "/checkout/shipping/dates",
                type: "POST",
                dataType: "json",
                data: $form.serialize()
            }, function (data, extraData) {

            });

        });

        $('.shipMethodSelector input[type=radio]').on('change', function () {
            var $this = $(this);
            var
                shipMethod = $this.val(),
                orderItemId = $this.data('order-item-id');
            orderSelectMessage = $this.parent().addClass("select" + orderItemId);
            if (shipMethod == "N" || shipMethod == "S") {
                $(orderSelectMessage).siblings('.grm-alert-info').removeClass('hidden');
            } else {
                $(orderSelectMessage).siblings('.grm-alert-info').addClass('hidden');
            }

            document.getElementById("selectedShipMethod").value = shipMethod;
            document.getElementById("selectedOrderItemId").value = orderItemId;
            document.getElementById("shipWindowExists").value = false;

            ajaxShipMethodUpdate(orderItemId);
        });

        // Show the alert in the shipping forms
        $('#address-form .addressFormLink').on('click', function () {
            $('#address-form .alert-info').show();
        });

        // added a custom tooltip for checkout-form page
        // show tooltip/close alert on input focus
        $('.inputWithTooltip').on('focus', function () {

            // if tooltip is visible hide it, otherwise show it
            var toolTip = $(this)
                .parents('.tooltipInputContainer')
                .find('.tooltipWrapper');

            if (toolTip.is(':visible')) {
                toolTip.fadeOut(200);
            } else {
                toolTip.fadeIn(200);
            }

            // if alert is visible, close it
            // var alertBox = $(this)
            //     .parents(' .tooltipInputContainer')
            //     .find('.inputToolTip')
            //     .data('input-tooltip-alert');
            // alertBox = "." + alertBox;
            // var findAlertBox = $('.checkout-form').find(alertBox);

            // if (findAlertBox.is(':visible')) {
            //     //findAlertBox.fadeOut(200);
            //     findAlertBox.addClass("hidden");
            // }
        });

        // when the tooltip loses focus, if tootip is visible, hide it
        $('.inputWithTooltip').on('blur', function () {
            var toolTip = $(this)
                .parents('.tooltipInputContainer')
                .find('.tooltipWrapper');

            if ($(toolTip).is(':visible')) {
                $(toolTip).fadeOut(200);
            }
        });

        // when any inputs without a tooltip are focused, hide the alert if it is visible
        var inputs = $('#checkout-address-form input');
        $(inputs).on('keydown', function () {
            var alertBox = $(this)
                .parents(' .tooltipInputContainer')
                .find('.inputToolTip')
                .data('input-tooltip-alert');
            alertBox = "." + alertBox;
            var findAlertBox = $('.checkout-form').find(alertBox);
            findAlertBox.addClass('hidden');
            /*if ($('.alert').is(':visible')) {
                $('.alert').fadeOut(200);
            }*/
            // if ($('.formAlert').is(':visible')) {
            //     $('.formAlert').addClass("hidden");
            // }
        });

        // When the acnhor in the tooltip is clicked, show the alert
        $('.inputToolTip').on('click tap', function (e) {
            e.stopPropagation();
            var alertLink = $(this).data('input-tooltip-alert');
            alertLink = "." + alertLink;
            var inputAlertBox = $('.checkout-form').find(alertLink);
            var closeIconAlertBox = $(inputAlertBox).find('.grm-alert-close');

            //inputAlertBox.fadeIn(200);
            inputAlertBox.removeClass("hidden");

            closeIconAlertBox.on('click tap', function (e) {
                inputAlertBox.addClass("hidden");
                return false;
            })

            inputAlertBox.on('click tap', function (e) {
                e.stopPropagation();
            })

            $(document).on('click tap', function (e) {
                //inputAlertBox.fadeOut(200);
                inputAlertBox.addClass("hidden");
                inputAlertBox.off('click tap');
                $(this).off(e);
            });
        });
    }
};;
var eFieldErrors = {
    init: function () {
		
		eFieldErrors.confirmEmailValidation();
        //on page load check for field-errors
        var $fieldError = $('form').find('.field-error');
        eFieldErrors.hasFormBeenSubmitted = false;
        if ($fieldError.length > 0) {
            eFieldErrors.hasFormBeenSubmitted = true;
            $fieldError.find('.blocker').remove();
            eFieldErrors.msgs();
            eFieldErrors.msgToggle($fieldError);

            $(".custom-select").css({
                'width': '100%',
                'height': 'auto'
            });
        }
        
        //check our required fields on button submission
        $('.btn-form').on('click', function (e) {
            var
                $btn = $(this),
                $pane = $btn.closest('.collapse-tab-pane');
            if ($btn.is('input[type="submit"]')) {
                e.preventDefault();
            }
            eFieldErrors.validate($btn, $pane);
        });

        $('.datepicker').on('hide', function (e) {
            var $fieldError = $(this).closest('.field-error');
            if ($fieldError.hasClass('error-open')) {
                $fieldError.find('.error-msg').animate({
                    opacity: 0,
                    height: 'toggle'
                }, 50);
                $fieldError.removeClass('error-open');
            }
        });

        $('.collapse-tab-pane').on('hide.bs.collapse', function () {
            if (alertSuccess = $(this).find('.alert-success')) alertSuccess.remove();
            if (alertFailure = $(this).find('.alert-danger')) alertFailure.remove();
        });
    },
    msgToggle: function ($fieldError) {
        //Adding a setTimeout call in order to delay setting the tab focus slightly so that the 
        //focus is set on the error field and not set on the section tab. being set in the util.js
        setTimeout(function () {
            $fieldError.each(function () {
                var $this = $(this);
                var $error = $this.find('.error-msg');
                //Tab Focus Order for My Account Page
                var items1 = [];
                var n = 0;
                var $field1 = $this.find('.validateme');
                items1[n] = $field1;
                n = n + 1;
                items1[0].focus();
                //Displays the error message after clicking the error icon. 
                //The error message should be displayed by default, so this snippet can be removed.
                if ($this.hasClass('error-open')) {
                    $this.removeClass('error-open');
                } else {
                    $this.addClass('error-open');
                }
                if(!$this.find('.has-error.field-error'))
                    $error.animate({
                        opacity: 1,
                        height: 'toggle'
                    }, 150);
            });
            if (!!$fieldError[0]) {
                var $msg = $($fieldError[0]).find('.validateme');
                $msg.focus();
            }
        }, 200);
    },
    msgs: function () {
        var $pane = $('.collapse-tab-pane');
        var contactForms = $('.tab-content').hasClass('contact-tab-content') ? true : false;
        var hasErrors = [];
        $pane.each(function () {
            var
                $thisPane = $(this),
                id = $thisPane.attr('id'),
                $paneFieldError = $('#' + id + ' .field-error'),
                $errorInput = $paneFieldError.find('input,textarea'),
                $errorSelect = $paneFieldError.find('select'),
                $li = $('a[href="#' + id + '"]').parent('li'),
                $paneSubmit = $thisPane.find('.form-btn-wrapper');

            hasErrors = $.merge(hasErrors, $.makeArray($errorInput));
            if ($paneFieldError.length > 0) {
                $li.addClass('has-field-error');
                $paneSubmit.prepend('<div class="blocker"></div>');
            } else if ($paneFieldError.length === 0 && contactForms) {
                $thisPane.find('input[type="text"],textarea').val('');
            }

            $errorInput.keyup(function (e) {
                eFieldErrors.msgClosed(e, id, $thisPane);
            }).change(function (e) {
                var isInArray = $.inArray(e.target, hasErrors) > -1;
                var fieldHasValue = $(this).val() !== '';
                if (fieldHasValue && (!eFieldErrors.hasFormBeenSubmitted || (eFieldErrors.hasFormBeenSubmitted && isInArray))) {
                    hasErrors.splice($.inArray(e.target, hasErrors), 1);
                    var $thisFieldError = $(this).closest('.field-error');
                    $thisFieldError.find('.error-msg').css('display', 'none');
                    $thisFieldError.removeClass('field-error error-open');
                    if ($('#' + id + ' .field-error').length === 0) {
                        $li.removeClass('has-field-error');
                        $thisPane.find('.form-btn-wrapper .blocker').remove();
                    }
                }
                eFieldErrors.msgOpen(e, id);
            });

            $errorSelect.focusin(function (e) {
                eFieldErrors.msgClosed(e, id, $thisPane);
            }).focusout(function (e) {
                eFieldErrors.msgOpen(e, id);
            });

            $errorSelect.on('change', function (e) {
                if (this.value && this.value !== 'NONE') {
                    $this = $(this),
                        $thisFieldError = $this.closest('.field-error')
                    $thisFieldError.find('.error-msg').css('display', 'none');
                    $thisFieldError.removeClass('field-error error-open');
                }
            });

        });

        $('.tab-nav li, .tab-pane').removeClass('active');

        var
            $firstFieldErrorTab = $('.tab-nav li.has-field-error').first(),
            firstFieldErrorHref = $firstFieldErrorTab.find('a').attr('href'),
            $firstFieldErrorCollapseButton = $('.btn-collapse[href="' + firstFieldErrorHref + '"]'),
            $firstFieldErrorPane = $(firstFieldErrorHref);

        $firstFieldErrorTab.addClass('active');
        $firstFieldErrorCollapseButton.removeClass('collapsed');
        $firstFieldErrorPane.addClass('active in');
    },
    msgClosed: function (e, id, $thisPane) {
        var
            $this = $(e.target),
            $thisFieldError = $this.closest('.field-error'),
            $li = $('a[href="#' + id + '"]').parent('li');
        if (!$thisFieldError.hasClass('error-open')) {
            $thisFieldError.find('.error-msg').css('display', 'none');
            $thisFieldError.removeClass('field-error error-open');
            if ($('#' + id + ' .field-error').length === 0) {
                $li.removeClass('has-field-error');
                $thisPane.find('.form-btn-wrapper .blocker').remove();
            }
        } else if ($thisFieldError.hasClass('error-open') && $('#' + id + ' .field-error').length === 1) {
            $li.removeClass('has-field-error');
            $thisPane.find('.blocker').remove();
        }
    },
    msgOpen: function (e, id) {
        var
            $this = $(e.target),
            $thisFieldError = $this.closest('.field-error'),
            $fieldErrorCount = $('#' + id + ' .field-error').length,
            $errorMsg = $thisFieldError.find('.error-msg');
        //Tab Focus Order for My Account Page
        var items1 = [];
        var n = 0;
        $thisFieldError.each(function () {
            var $field1 = $thisFieldError.find('.validateme')
            items1[n] = $field1;
            n = n + 1;
            items1[0].focus();
        });
    },

    validate: function ($btn, $pane) {
        var
            $requiredField = $pane.find('.required'),
            valid = true;;
        var items = [];
        var n = 0;
        $requiredField.each(function () {
            var $this = $(this),
                $field = $this.find('.validateme'),
                val,
                checkVal;
            if (!$field.is(':disabled')) checkVal = true;

            if ($field.is('input') || $field.is('textarea')) {
                val = $field.val();
            } else if ($field.is('.select-container')) {
                val = $field.find('option:selected').attr('value');
                if (val === 'NONE') {
                    val = false;
                }
            }
            if (checkVal && !val) {
                valid = false;
                $this.addClass('field-error');
                items[n] = $field;
                n = n + 1;
                items[0].focus();
            } else {
                $this.removeClass('field-error');
            }
        });

        if (!valid) {
            var $fieldError = $pane.find('.field-error');
            eFieldErrors.msgs();
            eFieldErrors.msgToggle($fieldError);
        } else if (valid && $btn.is('input[type="submit"]')) {
            var $form = $pane.find('form');

            if ($form.length == 0) {
                $form = $('.tab-content').find('form');
                $form.submit();
            } else {
                $form.submit();
            }
        } else if (valid) {
            $btn.tab('show');
            eUtils.setActiveClass($btn);
            $(".custom-select").css({
                'width': '100%',
                'height': 'auto'
            });
        } else {
            $pane.prepend('<div class="alert alert-danger"><p>Something went wrong. Please contact the system administrator.</p></div>');
        }

        return valid;
    },
    confirmEmailValidation(){
		$('#confirmEmail').change(function() {
			if($('#custEmailAddress').val().trim() == $('#confirmEmail').val().trim() && $(".blocker").is(":visible")) {
				$(".blocker").css("display","none");
				$("#confirmEmail, #custEmailAddress").css("border-color","#666666");
			}
		});

	}
};;
/*
eFlyout
*/
var eFlyout = {
    init: function() {
		// GL 1913 - removing flyout support
        // eFlyout.docToggler();
        // eFlyout.anchorToggler();
        // eFlyout.escapeKeyToggler();
        // eFlyout.tabKeyToggler();
    },
    $doc: $(document),
    $toggle: $('.flyout-toggle'),
    $flyout: $('.flyout'),
    $flying: $('.flying'),
    slideOut: function(element) {
    	if(!$( ".cartFlyout.flyout" ).hasClass( "cartflyoutopen" )){
    		$(element).addClass('cartflyoutopen');
    		element.slideToggle( "slow" );
    		$(".cart-flyout-wrapper-fixedOn").show();
    		var headerHeight = $('.navbar').height();
    	    var headerTopHeight = $(".header-top").height();
    		if($( window ).width() >= 768)
    		{
    			if ($('.header-bottom.navbar.stickyHeader').hasClass("stickOn")) {
            	    var cartFlyoutHeight = parseInt(headerHeight, 10);
        		}
        		else
        		{
            	    var cartFlyoutHeight = parseInt((headerHeight + headerTopHeight), 10);
        		}
    			var cartPosition = $('.flyout-toggle.grm-icon.shopping-cart').offset();
    			var screenWidth = $( window ).width();
    			//cartPosition = parseInt(cartPosition.left - 380);
    			//$(".cartFlyout").css("left", cartPosition);
    			cartPosition = parseInt(screenWidth - cartPosition.left);
    			cartPosition = parseInt(cartPosition - ((screenWidth/100)*2));
    			$(".cartFlyout").css("right", cartPosition);
        		$(".cartFlyout").css("top", cartFlyoutHeight);
    		}
    		else
    		{
    			var menuHeight = parseInt((headerHeight + headerTopHeight), 10);
    			var scrollHeight = $(window).scrollTop();
    			if(menuHeight < scrollHeight)
    			{
    				$(".cartFlyout").css("top", 0);
    			}
    			else
    			{
    				$(".cartFlyout").css("top", (menuHeight-scrollHeight));
    			}
    		}   			
    	}
    	else
    	{
    		CloseCartFlyout();
    	}
    },
    slideIn: function(element) {
    	CloseCartFlyout();
    },
    anchorToggler: function() {
        eFlyout.$toggle.on('click', function(e) {
            e.preventDefault();
            var
                $this = $(this),
                id = $this.attr('href'),
                $id = $(id);
            if (!$id.hasClass('flying')) {
                // eFlyout.slideIn(eFlyout.$flying);
                eFlyout.slideOut($id); //responsible for showing
            } else {
                eFlyout.slideIn($id);
            }
        });
    },
    docToggler: function() {
        eFlyout.$doc.on('click', function(e) {
            var
                $target = $(e.target),
                $cartOverlay = 0;
            if(($target.parents(".header-bottom").length && !$target.closest('.flyout-toggle').length) || $target.closest(".cart-flyout-wrapper-fixedOn").length || $target.closest(".close-flycart").length)
            	$cartOverlay = 1;
            if ($cartOverlay) {
                eFlyout.slideIn();
            }
        });
    },
    escapeKeyToggler: function() {
    	$('.flyout-toggle, .cart-flyout-wrapper').on("focusin", function(){
        	$(this).keydown(function(e){
        		if(e.which === 27){
        			CloseCartFlyout();
        		}
        	})
        });
    },
    tabKeyToggler: function(){
        $('#navbar, .jumbotron').on('focusin', function(){
        	$('.flying').removeClass('flying');
        	$(".cartFlyout.flyout").hide();
        });
    }
};
$(document).keyup(function(e) {
	if (e.key === "Escape" || e.key === "Esc" ) {
		CloseCartFlyout();
    }
});

function CloseCartFlyout()
{
	if($( ".cartFlyout.flyout" ).hasClass( "cartflyoutopen" )){
		$(".cart-flyout-wrapper .cartFlyout").find('.addedToCart').removeClass('addedToCart');
		$(".cartFlyout.flyout").slideToggle( "slow" );
		$(".cartFlyout.flyout").removeClass('cartflyoutopen');
		$(".cart-flyout-wrapper-fixedOn").hide();
	}
};
/*
eAddresses
*/
//test
var eAddresses = {
    init: function () {
		$("#chileTaxId").inputmask({"mask":"99.999.999-[9|k|K]","clearIncomplete":true }); // if needed, can add , "clearIncomplete":true
		$("#jamaicaTaxId").inputmask({"mask":"999-999-999","clearIncomplete":true });
		$("#elSalvadorTaxId").inputmask({"mask":"99999999-9","clearIncomplete":false });
		
		$("#jamaicaTaxId").inputmask({"mask":"999-999-999","clearIncomplete":true });
        
        $('#panama_dni').inputmask({
	        mask: ['AA-9{1,3}-9{1,4}', '9-9{1,3}-9{1,4}'],
	        definitions: {
	            'A': {
	                validator: "[A-Za-z]",
	            }
	        },
	        clearIncomplete: true,
	        placeholder: ' '
	    });
		$('#panama_dni').on('blur', function () {
            var inputValue = $(this).val();
            // Check if the first two characters are not letters
            if (!(/^[A-Za-z]{2}/.test(inputValue.substring(0, 2)) || /^\d/.test(inputValue))) {
                // Clear the input field
                $(this).val('');
            }
        });
        
        if($( window ).width() > 768) {
            $(".checkoutOrderSummaryHolder-xs").remove();    
        }
        else {
            $(".checkoutOrderSummaryHolder-sm").remove();
        }
        eAddresses.verifyAddress();
        eAddresses.useAddress();
        eAddresses.trashAddress();
        eAddresses.addAddress();
        eAddresses.editAddress();
        eAddresses.verifyVar();

        var $checkoutAddressForm = $("#checkout-address-form");

        $('[data-submit="verify"]').on('click', function () {
            $checkoutAddressForm.submit();
        });
        $('[data-submit="cancel"]').on('click', function () {
            $checkoutAddressForm.find("#companyName").hide();
            $checkoutAddressForm.find("label[for='companyName']").hide();
            $("#checkout-address-form").find("#addToAddressBook").prop('checked', false);
            if ($checkoutAddressForm.find(".saveType").val() == 'add') {
                $('#checkoutOrderSummaryHolder').find('.shippingInfo').html($('#var-shippingInfo-id').html());
            } else if ($checkoutAddressForm.find(".saveType").val() == 'edit') {
                $('#checkoutOrderSummaryHolder').find('.shippingInfo').html($('#var-selected-shippingInfo-id').html());
            }

            if ($('[data-submit="cancel"]').closest('a').attr('href') == '#verify') {
                $("#checkoutOrderSummaryHolder").find('.shippingInfo').html("<strong><span>" + $('#pendingShippingInfo').html() + "</span></strong>");
                $("a[href='#verify").click();
            }

            $('[data-btn-group="#ship-to"]').removeClass('hide');
            $('.btn-jumbo.btn-checkout').focus();
            if ($( window ).width() < 768) {
                $('#ship-to').addClass('in');
            }
        });

        // GL2613
        if($('#isNewAddressForm').length){
            if($('#cityDropDownSelectId').length && !$('#cityDropDownSelectId').val()){
                $('#city').val('');
            }
            if($('#zipDropDownSelectId').length && !$('#zipDropDownSelectId').val()){
                $('#postalCode').val('');
            }
        }

        $('#countrySubDivisionId').on('change', function () {
            // check for new form 
            if(!$('#isNewAddressForm').length){
                return;
            }
            // check for default value to reset city and postal code
            if (this.value && this.value === 'NONE') {
                $('#city').val('');
                $('#cityDropDownSelectId').empty().append(new Option($('#cityDropDownSelectId').attr("data-default_text"), ''));
                $('#cityDropDownSelectId').trigger('change');
                $('#cityDropDownSelectId').attr("disabled",true);
                return;
            }
            BLC.ajax({
                url: '/ecommerce/checkout/addressverification/getcitiesbystateabbreviation',
                type: "POST",
                data: {
                    country: $("#countryId").val(),
                    stateabbreviation: this.value
                },
                dataType: "json"
            }, function (result) {
                // if(!result.length){
                //     return;
                // }
                var cityDropDownSelector = $('#cityDropDownSelectId');
                cityDropDownSelector.empty().append(new Option(cityDropDownSelector.attr("data-default_text"), ''));
                $.each(result, function (index, item) {
                    cityDropDownSelector.append(new Option(item.name, item.id));
                });
                $('#cityDropDownSelectId').trigger('change');
                cityDropDownSelector.attr("disabled",false);
            });
        });

        $('#cityDropDownSelectId').on('change', function () {
            var _this = $(this);
            if (this.value) {
                $('#city').val(_this.find(":selected").text().trim());
            } else {
                $('#city').val('');
                $('#zipDropDownSelectId').empty().append(new Option($('#zipDropDownSelectId').attr("data-default_text"), ''));
                $('#zipDropDownSelectId').trigger('change');
                $('#zipDropDownSelectId').attr("disabled",true);
                return;
            }
            BLC.ajax({
                url: '/ecommerce/checkout/addressverification/getzipcodesbycityid',
                type: "POST",
                data: {
                    country: $("#countryId").val(),
                    stateabbreviation: $("#countrySubDivisionId").val(),
                    cityid: this.value
                },
                dataType: "json"
            }, function (result) {
                // if(!result.length){
                //     return;
                // }
                var zipDropDownSelector = $('#zipDropDownSelectId');
                //zipDropDownSelector.empty().append(new Option(zipDropDownSelector.attr("data-default_text"), ''));
                /*
                $.each(result, function (index, item) {
                    zipDropDownSelector.append(new Option(item, item));
                });
                 */              
                $('#zipDropDownSelectId').html("");
                var testOption="<option value=''>"+zipDropDownSelector.attr("data-default_text")+"</option>";
                optionTags = result.map(option => `<option value="${option}">${option}</option>`).join('');
                $('#zipDropDownSelectId').html(testOption+optionTags);
                //$("#zipDropDownSelectId").empty().append(testOption+optionTags);
                
                $('#zipDropDownSelectId').trigger('change');
                zipDropDownSelector.attr("disabled",false);
            });
        });

        $('#zipDropDownSelectId').on('change', function () {
            var _this = $(this);
            if (this.value) {
                $('#postalCode').val(_this.find(":selected").text().trim());
            } else {
                $('#postalCode').val('');
            }
        });
        /*
        $('#zipDropDownSelectIdMx').on('change', function () {
        	// check for new form 
            if(!$('#isNewAddressForm').length){
                return;
            }
            var _this = $(this);
            if (this.value && this.value!='') {
                $('#postalCode').val(_this.find(":selected").text().trim());
                BLC.ajax({
                    url: '/ecommerce/checkout/addressverification/getstatebyzipcode',
                    type: "POST",
                    data: {
                        country: $("#countryId").val(),
                        postalcode: this.value
                    },
                    dataType: "json"
                }, function (result) {
                	var countrySubDivisionIdMx = $('#countrySubDivisionIdMx');
                	countrySubDivisionIdMx.empty().append(new Option(countrySubDivisionIdMx.attr("data-default_text"), ''));
                    $.each(result, function (index, item) {
                    	countrySubDivisionIdMx.append(new Option(item.name,item.abbreviation));
                    });
                    $('#countrySubDivisionId').val('');
                    $('#city').val('');
                	$('#neighborhood').val('');
                	$('#cityDropDownSelectIdMx').empty().append(new Option($('#cityDropDownSelectIdMx').attr("data-default_text"), ''));
                    $('#neighborhoodDropDownSelectIdMx').empty().append(new Option($('#neighborhoodDropDownSelectIdMx').attr("data-default_text"), ''));
                    $('#countrySubDivisionIdMx').trigger('change');
                });
            } else {
            	$('#postalCode').val('');
            	$('#countrySubDivisionId').val('');
            	$('#city').val('');
            	$('#neighborhood').val('');
                $('#countrySubDivisionIdMx').empty().append(new Option($('#countrySubDivisionIdMx').attr("data-default_text"), ''));
                $('#cityDropDownSelectIdMx').empty().append(new Option($('#cityDropDownSelectIdMx').attr("data-default_text"), ''));
                $('#neighborhoodDropDownSelectIdMx').empty().append(new Option($('#neighborhoodDropDownSelectIdMx').attr("data-default_text"), ''));
                $('#countrySubDivisionIdMx').trigger('change');
                return;
            }            
            
        });
        */
        $('#countrySubDivisionIdMx').on('change', function () {
            // check for new form 
            if(!$('#isNewAddressForm').length){
                return;
            }
        	var _this = $(this);
        	if (this.value && this.value!='' && this.value != 'NONE') {
        		$('#countrySubDivisionId').val(_this.find(":selected").text().trim());
        		BLC.ajax({
        			url: '/ecommerce/checkout/addressverification/getcitybystatezipcode',
        			type: "POST",
        			data: {
        				country: $("#countryId").val(),
        				postalcode:$("#zipDropDownSelectIdMx").val(),
        				stateabbreviation: this.value
        			},
        			dataType: "json"
        		}, function (result) {
        			// if(!result.length){
        			//     return;
        			// }
        			var cityDropDownSelector = $('#cityDropDownSelectIdMx');
        			cityDropDownSelector.empty().append(new Option(cityDropDownSelector.attr("data-default_text"), ''));
        			$.each(result, function (index, item) {
        				cityDropDownSelector.append(new Option(item, item));
        			});        			
        			$('#city').val('');
            		$('#neighborhood').val('');
            		$('#neighborhoodDropDownSelectIdMx').empty().append(new Option($('#neighborhoodDropDownSelectIdMx').attr("data-default_text"), ''));
            		$('#cityDropDownSelectIdMx').trigger('change');
        		});	
        	} else {
        		$('#countrySubDivisionId').val('');
        		$('#city').val('');
        		$('#neighborhood').val('');
        		$('#cityDropDownSelectIdMx').empty().append(new Option($('#cityDropDownSelectIdMx').attr("data-default_text"), ''));
        		var neighborhoodDropDownSelector = $('#neighborhoodDropDownSelectIdMx');
        		neighborhoodDropDownSelector.empty().append(new Option(neighborhoodDropDownSelector.attr("data-default_text"), ''));
        		$('#cityDropDownSelectIdMx').trigger('change');
        		return;
        	}      
        });

        
        $('#cityDropDownSelectIdMx').on('change', function () {
            // check for new form 
            if(!$('#isNewAddressForm').length){
                return;
            }

            var _this = $(this);
            if (this.value && this.value!='') {
                $('#city').val(_this.find(":selected").text().trim());
                BLC.ajax({
                    url: '/ecommerce/checkout/addressverification/getneighborhoodsbypostalcodecityid',
                    type: "POST",
                    data: {
                        country: $("#countryId").val(),
                        postalcode:$("#zipDropDownSelectIdMx").val(),
                        stateabbreviation: $("#countrySubDivisionIdMx").val(),
                        cityid: this.value
                    },
                    dataType: "json"
                }, function (result) {
                    // if(!result.length){
                    //     return;
                    // }
                    var neighborhoodDropDownSelector = $('#neighborhoodDropDownSelectIdMx');
                    neighborhoodDropDownSelector.empty().append(new Option(neighborhoodDropDownSelector.attr("data-default_text"), ''));
                    $.each(result, function (index, item) {
                        neighborhoodDropDownSelector.append(new Option(item, item));
                    });
                    $('#neighborhood').val('');
                    $('#neighborhoodDropDownSelectIdMx').trigger('change');
                });
            } else {
                $('#city').val('');
                $('#neighborhood').val('');
                $('#neighborhoodDropDownSelectIdMx').empty().append(new Option($('#neighborhoodDropDownSelectIdMx').attr("data-default_text"), ''));
                $('#neighborhoodDropDownSelectIdMx').trigger('change');
                return;
            } 
        });
        
        $('#neighborhoodDropDownSelectIdMx').on('change', function () {
            var _this = $(this);
            if (this.value) {
                $('#neighborhood').val(_this.find(":selected").text().trim());
            } else {
                $('#neighborhood').val('');
            }
        });
        
        $('#countrySubDivisionIdCRPE').on('change', function () {
            // check for new form 
            if(!$('#isNewAddressForm').length){
                return;
            }
            // check for default value to reset city and postal code
            if (this.value && this.value === 'NONE') {
                $('#city').val('');
                $('#cityDropDownSelectIdCRPE').empty().append(new Option($('#cityDropDownSelectIdCRPE').attr("data-default_text"), ''));
                $('#cityDropDownSelectIdCRPE').trigger('change');
                $('#cityDropDownSelectIdCRPE').attr("disabled",true);
                return;
            }
            BLC.ajax({
                url: '/ecommerce/checkout/addressverification/getcitiesbystateabbreviation',
                type: "POST",
                data: {
                    country: $("#countryId").val(),
                    stateabbreviation: this.value
                },
                dataType: "json"
            }, function (result) {
                // if(!result.length){
                //     return;
                // }
                var cityDropDownSelector = $('#cityDropDownSelectIdCRPE');
                cityDropDownSelector.empty().append(new Option(cityDropDownSelector.attr("data-default_text"), ''));
                $.each(result, function (index, item) {
                    cityDropDownSelector.append(new Option(item.name, item.id));
                });
                $('#cityDropDownSelectIdCRPE').trigger('change');
                cityDropDownSelector.attr("disabled",false);
            });
        });
        
        $('#cityDropDownSelectIdCRPE').on('change', function () {
            // check for new form 
            if(!$('#isNewAddressForm').length){
                return;
            }

            var _this = $(this);
            if (this.value && this.value!='') {
                $('#city').val(_this.find(":selected").text().trim());
                BLC.ajax({
                    url: '/ecommerce/checkout/addressverification/getdistrictsbycity',
                    type: "POST",
                    data: {
                        country: $("#countryId").val(),
                        stateabbreviation: $("#countrySubDivisionIdCRPE").val(),
                        cityid: this.value
                    },
                    dataType: "json"
                }, function (result) {
                    // if(!result.length){
                    //     return;
                    // }
                    var districtDropDownSelector = $('#citySubDivDropDownSelectIdCRPE');
                    districtDropDownSelector.empty().append(new Option(districtDropDownSelector.attr("data-default_text"), ''));
                    $.each(result, function (index, item) {
                    	districtDropDownSelector.append(new Option(item, item));
                    });
                    //$('#district').val('');
                    $('#citySubDivDropDownSelectIdCRPE').trigger('change');
                });
            } else {
                $('#city').val('');
                //$('#district').val('');
                $('#citySubDivDropDownSelectIdCRPE').empty().append(new Option($('#citySubDivDropDownSelectIdCRPE').attr("data-default_text"), ''));
                $('#citySubDivDropDownSelectIdCRPE').trigger('change');
                return;
            } 
        });
        $('#citySubDivDropDownSelectIdCRPE').on('change', function () {
            var _this = $(this);
            if (this.value) {
                $('#district').val(_this.find(":selected").text().trim());
            } else {
                $('#district').val('');
                $('#zipDropDownSelectId').empty().append(new Option($('#zipDropDownSelectId').attr("data-default_text"), ''));
                $('#zipDropDownSelectId').trigger('change');
                $('#zipDropDownSelectId').attr("disabled",true);
                return;
            }            
            BLC.ajax({
                url: '/ecommerce/checkout/addressverification/getzipcodesbycitysubdiv',
                type: "POST",
                data: {
                    country: $("#countryId").val(),
                    stateabbreviation: $("#countrySubDivisionIdCRPE").val(),
                    cityid: $("#cityDropDownSelectIdCRPE").val(),
                    citysubdiv: this.value
                },
                dataType: "json"
            }, function (result) {
                // if(!result.length){
                //     return;
                // }
                var zipDropDownSelector = $('#zipDropDownSelectId');
                zipDropDownSelector.empty().append(new Option(zipDropDownSelector.attr("data-default_text"), ''));
                $.each(result, function (index, item) {
                    zipDropDownSelector.append(new Option(item, item));
                });
                $('#zipDropDownSelectId').trigger('change');
                zipDropDownSelector.attr("disabled",false);
            });
        });
        
        $('#zipDropDownSelectIdMx').keydown(function() {
            $( "#zipInputErrorCheck" ).removeClass( "has-error" );
            $( "#zipDropDownSelectIdMx" ).removeClass( "inputzip_success_note" );
            $( "#postalcodeajaxerror" ).hide();
            $( "#selected-checkmark-zipcode" ).hide();
        });
        $('body').on('click', '.btn-checkout-validate-zipcode', function () {        	
        	if(!$('#isNewAddressForm').length){
                return;
            }
        	$( "#selected-checkmark-zipcode" ).hide();
        	$( "#zipDropDownSelectIdMx" ).removeClass( "inputzip_success_note" );
            var _this = $("#countryId");
            var tmppostalcodevalue=$("#zipDropDownSelectIdMx").val();
            if(tmppostalcodevalue!=null && tmppostalcodevalue.length==4){
            	$("#zipDropDownSelectIdMx").val("0"+$("#zipDropDownSelectIdMx").val());
            	tmppostalcodevalue=$("#zipDropDownSelectIdMx").val();
            }
            if (tmppostalcodevalue && tmppostalcodevalue!='') {
                BLC.ajax({
                    url: '/ecommerce/checkout/addressverification/getstatebyzipcode',
                    type: "POST",
                    data: {
                        country: $("#countryId").val(),
                        postalcode: tmppostalcodevalue
                    },
                    dataType: "json"
                }, function (result) {
                	var countrySubDivisionIdMx = $('#countrySubDivisionIdMx');
                	countrySubDivisionIdMx.empty().append(new Option(countrySubDivisionIdMx.attr("data-default_text"), ''));
                    $.each(result, function (index, item) {
                    	countrySubDivisionIdMx.append(new Option(item.name,item.abbreviation));
                    });

                    if(result!=null && result.length<=0){
                        document.getElementById("postalcodeajaxerror").style.display = "block";
                        $( "#zipInputErrorCheck" ).addClass( "has-error" );
                        $( "#postalcodeajaxerror" ).show();
                        $( "#selected-checkmark-zipcode" ).hide();
                    }
                    else{
                        document.getElementById("postalcodeajaxerror").style.display = "none";
                        $( "#selected-checkmark-zipcode" ).show();
                        $( "#zipDropDownSelectIdMx" ).addClass( "inputzip_success_note" );
                    }
                        
                    $('#postalCode').val($("#zipDropDownSelectIdMx").val());
                    $('#countrySubDivisionId').val('');
                    $('#city').val('');
                	$('#neighborhood').val('');
                	$('#cityDropDownSelectIdMx').empty().append(new Option($('#cityDropDownSelectIdMx').attr("data-default_text"), ''));
                    $('#neighborhoodDropDownSelectIdMx').empty().append(new Option($('#neighborhoodDropDownSelectIdMx').attr("data-default_text"), ''));
                    $('#countrySubDivisionIdMx').trigger('change');
                });
            } else {
            	document.getElementById("postalcodeajaxerror").style.display = "block";
            	//document.getElementById("postalcodejavaerror").style.display = "none";
            	$('#postalCode').val('');
            	$('#countrySubDivisionId').val('');
            	$('#city').val('');
            	$('#neighborhood').val('');
                $('#countrySubDivisionIdMx').empty().append(new Option($('#countrySubDivisionIdMx').attr("data-default_text"), ''));
                $('#cityDropDownSelectIdMx').empty().append(new Option($('#cityDropDownSelectIdMx').attr("data-default_text"), ''));
                $('#neighborhoodDropDownSelectIdMx').empty().append(new Option($('#neighborhoodDropDownSelectIdMx').attr("data-default_text"), ''));
                $('#countrySubDivisionIdMx').trigger('change');
                return;
            }
        });
        $('#zipDropDownSelectIdMx').on('change', function () {
        	// check for new form 
            if(!$('#isNewAddressForm').length){
                return;
            }
            	$('#postalCode').val($("#zipDropDownSelectIdMx").val());
            	$('#countrySubDivisionId').val('');
            	$('#city').val('');
            	$('#neighborhood').val('');
                $('#countrySubDivisionIdMx').empty().append(new Option($('#countrySubDivisionIdMx').attr("data-default_text"), ''));
                $('#cityDropDownSelectIdMx').empty().append(new Option($('#cityDropDownSelectIdMx').attr("data-default_text"), ''));
                $('#neighborhoodDropDownSelectIdMx').empty().append(new Option($('#neighborhoodDropDownSelectIdMx').attr("data-default_text"), ''));
                $('#countrySubDivisionIdMx').trigger('change');
                return;
        });
        
    },
    $selectedContent: $('#selected-content'),
    $savedAddresses: $('#saved-addresses'),
    $usePrompt: $('#use-prompt'),
    varLoop: function (values) {
        for (var key in values) {
            if (values.hasOwnProperty(key)) {
                var
                    name = String(key).replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(),
                    value = String(values[key]),
                    $checkoutAddressForm = $("#checkout-address-form");
                if (name == 'isocountryalpha2') {
                    $checkoutAddressForm.find("#countryId").val(value).change();
                } else if (name == 'addresstype') {
                    if (value == 'true') {
                        $checkoutAddressForm.find("#addressType_business").prop('checked', true);
                        $checkoutAddressForm.find("#companyName").show();
                        $checkoutAddressForm.find("label[for='companyName']").show();
                    } else if (value == 'false') {
                        $checkoutAddressForm.find("#addressType_residential").prop('checked', true);
                        $checkoutAddressForm.find("#companyName").hide();
                        $checkoutAddressForm.find("#companyName").val('');
                        $checkoutAddressForm.find("label[for='companyName']").hide();
                        $checkoutAddressForm.find("#companyName").hide();
                        $checkoutAddressForm.find("#attention").val('');
                    }
                } else if (name == 'fullname') {
                    $checkoutAddressForm.find("#fullName").val(value);
                } else if (name == 'firstname') {
                    $checkoutAddressForm.find("#firstName").val(value);
                } else if (name == 'lastname') {
                    $checkoutAddressForm.find("#lastName").val(value);
                } else if (name == 'companyname') {
                    $checkoutAddressForm.find("#companyName").val(value);
                } else if (name == 'attention') {} else if (name == 'addressline1') {
                    $checkoutAddressForm.find("#addressLine1").val(value);
                } else if (name == 'addressline2') {
                    $checkoutAddressForm.find("#addressLine2").val(value);
                } else if (name == 'addressline3') {
                    $checkoutAddressForm.find("#addressLine3").val(value);
                } else if (name == 'addressline4') {
                    $checkoutAddressForm.find("#addressLine4").val(value);
                } else if (name == 'city') {
                    $checkoutAddressForm.find("#city").val(value);
                } else if (name == 'stateprovinceregion') {
                    $("body").data("state-selected", value);
                } else if (name == 'postalcode') {
                    $checkoutAddressForm.find("#postalCode").val(value);
                } else if (name == 'primaryphone') {
                    $checkoutAddressForm.find("#primaryPhone").val(value);
                } else if (name == 'emailaddress') {
                    $checkoutAddressForm.find("#emailAddress").val(value);
                } else if (name == 'address-id') {
                    $checkoutAddressForm.find(".addressId").val(value);
                } else if (name == 'edit-id') {
                    $checkoutAddressForm.find(".customerAddressId").val(value);
                } else if (name == 'externalnumber') {
                    $checkoutAddressForm.find(".externalNumber").val(value);
                } else if (name == 'internalnumber') {
                    $checkoutAddressForm.find(".internalNumber").val(value);
                } else if (name == 'neighborhood') {
                    $checkoutAddressForm.find(".neighborhood").val(value);
                } else if (name == 'borough') {
                    $checkoutAddressForm.find(".borough").val(value);
                } else if (name == 'reference') {
                    $checkoutAddressForm.find(".reference").val(value);
                } else if (name == 'primaryphonetype') {
                    $checkoutAddressForm.find(".primaryPhoneType").val(value).change();
                } else if (name == 'secondaryphone') {
                    $checkoutAddressForm.find(".secondaryPhone").val(value);
                } else if (name == 'secondaryphonetype') {
                    $checkoutAddressForm.find(".secondaryPhoneType").val(value).change();
                }
                //International - Collect tax id for Brazil
                else if (name == 'taxtype') {
                    if (value == 'CPF') {
                        $checkoutAddressForm.find("#taxType_CPF").prop('checked', true);
                        $checkoutAddressForm.find(".personalTaxId").show();
                        $checkoutAddressForm.find("#personalTaxIdError").show();
                        $checkoutAddressForm.find('#personalTaxIdLink').show();
                        $checkoutAddressForm.find("#taxType_CNPJ").prop('checked', false);
                        $checkoutAddressForm.find(".corporateTaxId").hide();
                        $checkoutAddressForm.find("#corporateTaxIdError").hide();
                        $checkoutAddressForm.find("#corporateTaxIdLink").hide();
                        $checkoutAddressForm.find(".corporateTaxIdAlert").addClass('hidden');
                    } else if (value == 'CNPJ') {
                        $checkoutAddressForm.find("#taxType_CPF").prop('checked', false);
                        $checkoutAddressForm.find(".personalTaxId").hide();
                        $checkoutAddressForm.find("#personalTaxIdError").hide();
                        $checkoutAddressForm.find('#personalTaxIdLink').hide();
                        $checkoutAddressForm.find("#taxType_CNPJ").prop('checked', true);
                        $checkoutAddressForm.find(".corporateTaxId").show();
                        $checkoutAddressForm.find("#corporateTaxIdError").show();
                        $checkoutAddressForm.find(".personalTaxIdAlert").addClass('hidden');
                    }
                } else if (name == 'personaltaxid') {
                    $checkoutAddressForm.find(".personalTaxId").val(value);
                } else if (name == 'corporatetaxid') {
                    $checkoutAddressForm.find(".corporateTaxId").val(value);
                } else if (name == 'dni') {
                    $checkoutAddressForm.find("#dni").val(value);
                }
                //Capture Government ID for all LATAM Countries
                else if (name == 'colombiaTaxType') {
                    if (value == 'CC') {
                        $checkoutAddressForm.find("#colombiaTaxType_CC").prop('checked', true);
                    } else if (value == 'CE') {
                        $checkoutAddressForm.find("#colombiaTaxType_CE").prop('checked', true);
                    }
                } else if (name == 'colombiaTaxId') {
                    $checkoutAddressForm.find("#colombiaTaxId").val(value);
                } else if (name == 'uruguayTaxType') {
                    if (value == 'CC') {
                        $checkoutAddressForm.find("#uruguayTaxType_CC").prop('checked', true);
                    } else if (value == 'CE') {
                        $checkoutAddressForm.find("#uruguayTaxType_CE").prop('checked', true);
                    }
                } else if (name == 'uruguayTaxId') {
                    $checkoutAddressForm.find("#uruguayTaxId").val(value);
                } else if (name == 'argentinaTaxId') {
                    $checkoutAddressForm.find("#argentinaTaxId").val(value);
                } 
                //ENDOR#537 start
                else if (name == 'jamaicaTaxId') {
                    $checkoutAddressForm.find("#jamaicaTaxId").val(value);
                }
                //ENDOR#537 end
                else if (name == 'latamTaxId') {
                    $checkoutAddressForm.find("#latamTaxId").val(value);
                } else if (name == 'mexicoTaxId') {
                    $checkoutAddressForm.find("#mexicoTaxId").val(value);
                } else if (name == 'ecuadorTaxId') {
                    $checkoutAddressForm.find("#ecuadorTaxId").val(value);
                // Gitlab 2371 Push TaxID from Chile and Dom. Republic to PeopleSoft
                } else if (name == 'chileTaxId') {
                    $checkoutAddressForm.find("#chileTaxId").val(value);
                } else if (name == 'domTaxId') {
                    $checkoutAddressForm.find("#domTaxId").val(value);
                } else if (name == 'elSalvadorTaxId') {
                    $checkoutAddressForm.find("#elSalvadorTaxId").val(value);
                } else if (name == 'taiwanTaxId') {
                    $checkoutAddressForm.find("#taiwanTaxId").val(value);
                }
            }
        }
    },
    setConditions: function (type) {

        if (type === 'add' || type === 'edit') cancelHash = '#ship-to';
        if (type === 'edit-new') cancelHash = '#verify';

        $('[data-submit="cancel"]').removeClass('hide');
        $('[data-submit="cancel"]').closest('a').attr('href', cancelHash);
        $('[data-btn-group="#address-form"]').removeClass('hide');
        $('[data-btn-group="#ship-to"]').addClass('hide');

        //enable/disable submit buttons
        $('#shipping-options-next-seg').attr('disabled', 'disabled');
        eButtonTextResize.init();
        wWidth = $(window).width();
        if (wWidth < 768) {
            $('#address-form').addClass('in');
        }
    },
    //populates our verify var element with form data on click
    verifyVar: function () {
        var
            $verifyBtn = $('#verify-address'),
            $navBlocker = $('#checkout-nav-blocker'),
            wWidth = $(window).width();
        $verifyBtn.on('show.bs.tab', function (e) {
            var
                $this = $(this),
                error = false,
                $verifyVar = $('#verify-var'),
                values = $verifyVar.data();
            for (var key in values) {
                var
                    name = String(key).replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(),
                    $field = $('*[name="' + name + '"]'),
                    value = $field.val(),
                    required = $field.attr('required');
                if (!value && required) {
                    $field.parent().addClass('field-error');
                    error = true;
                }
                $verifyVar.data(name, value);
                $enteredName = $('#entered-' + name);
                if ($enteredName) $enteredName.text(value);
            }
            if (error) {
                e.preventDefault();
                e.stopPropagation();
                if (wWidth < 768) $('.error-icon').tooltip('show');
            } else {
                eUtils.setActiveClass($this);
                $navBlocker.removeClass('hide');
                if (wWidth < 768) {
                    $('#verify').addClass('in');
                    $('.btn-blocker, #verify-collapse').removeClass('hide')
                    $('a.btn-collapse[href="#address-form"]').addClass('collapsed');
                }
            }
        });
        $('body').on('click', '.btn-verified-corrected-address', function () {
            var values = $('var[data-corrected-address-id="corrected-address-id"]').data();

            for (var key in values) {
                if (values.hasOwnProperty(key)) {

                    var name = String(key).replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(),
                        value = String(values[key]);

                    if (name == 'addressline1') {
                        $("#checkout-verify-form").find(".addressLine1").val(value);
                    } else if (name == 'addressline2') {
                        $("#checkout-verify-form").find(".addressLine2").val(value);
                    } else if (name == 'addressline3') {
                        $("#checkout-verify-form").find(".addressLine3").val(value);
                    } else if (name == 'addressline4') {
                        $("#checkout-verify-form").find(".addressLine4").val(value);
                    } else if (name == 'city') {
                        $("#checkout-verify-form").find(".city").val(value);
                    } else if (name == 'stateprovinceregion') {
                        $("#checkout-verify-form").find(".stateProvinceRegion").val(value);
                    } else if (name == 'postalcode') {
                        $("#checkout-verify-form").find(".postalCode").val(value);
                    }
                }
            }
            $("#checkout-verify-form").find("#verifyAddressButtonClicked").val("correctedAddress");
        });
        $('body').on('click', '.btn-verified-entered-address', function () {
            var values = $('var[data-entered-address-id="entered-address-id"]').data();

            for (var key in values) {
                if (values.hasOwnProperty(key)) {
                    var name = String(key).replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(),
                        value = String(values[key]);;

                    if (name == 'addressline1') {
                        $("#checkout-verify-form").find(".addressLine1").val(value);
                    } else if (name == 'addressline2') {
                        $("#checkout-verify-form").find(".addressLine2").val(value);
                    } else if (name == 'addressline3') {
                        $("#checkout-verify-form").find(".addressLine3").val(value);
                    } else if (name == 'addressline4') {
                        $("#checkout-verify-form").find(".addressLine4").val(value);
                    } else if (name == 'city') {
                        $("#checkout-verify-form").find(".city").val(value);
                    } else if (name == 'stateprovinceregion') {
                        $("#checkout-verify-form").find(".stateProvinceRegion").val(value);
                    } else if (name == 'postalcode') {
                        $("#checkout-verify-form").find(".postalCode").val(value);
                    }
                }
            }
            $("#checkout-verify-form").find("#verifyAddressButtonClicked").val("enteredAddress");
        });

        $('[data-submit="ship-op"]').on('click', function () {
            var addressId = $("#selected-content").find('var[data-edit-id]').data('address-id');
            var customerAddressId = $("#selected-content").find('var[data-edit-id]').data('edit-id');
            $("#checkout-useaddress-form").find(".saveType").val('edit');
            $("#checkout-address-form").find("#isNewAddress").val('false');
            $("#checkout-useaddress-form").find(".addressId").val(addressId);
            $("#checkout-useaddress-form").find(".customerAddressId").val(customerAddressId);
            $('#checkout-useaddress-form').submit();
        });
    },
    //for verification/recommendation section
    verifyAddress: function () {
        var
            $blockBtn = $('.btn-block'),
            $editBtn = $('.btn-edit-new');

        $blockBtn.click(function () {
            $this = $(this);
            $blockBtn.removeClass('selected');
            if (!$this.hasClass('selected')) $this.addClass('selected');

            if ($('#corrected-address').hasClass('selected')) {
                document.getElementById('address-corrected').value = true;
            }
        });

        //To hide the addToAddressBook checkbox when edited address verifaction failed and come back to shipping address.
        if ($("#checkout-address-form").find(".saveType").val() == 'edit') {
            $("#checkout-address-form").find("#addToAddressBook").parent(".grm-checkbox").hide();
            $("#checkout-address-form").find(".btn-checkout-save-address").addClass("hide");
            // $("#add-new-address-title").css("visibility","hidden");
        }

        //note: the below functionlity is quite different than our editAddress object
        $editBtn.click(function () {
            var $this = $(this);
            $("#checkout-address-form").find(".saveType").val('edit');
            if ($this.data('edit', 'entered-address')) {
                var
                    $enteredAddressVar = $('#entered-address-var'),
                    values = $enteredAddressVar.data();
                /*$("#checkoutOrderSummaryHolder").find('.shippingInfo').html("<strong><span>" + $('#pendingShippingInfo').html() + "</span></strong>");
                $('#checkoutOrderSummaryHolder').find('#order-summary-adjustmentstotal').html("<strong><span>" + $('#pendingadjustmentstotal').html() + "</span></strong>");
                $('#checkoutOrderSummaryHolder').find('#order-summary-shippingtotal').html("<strong><span>" + $('#pendingshippingtotal').html() + "</span></strong>");
                $('#checkoutOrderSummaryHolder').find('#order-summary-taxtotal').html("<strong><span>" + $('#pendingtaxtotal').html() + "</span></strong>");
                $('#checkoutOrderSummaryHolder').find('#order-summary-ordertotal').html("<strong><span>" + $('#pendingordertotal').html() + "</span></strong>");*/
                eAddresses.varLoop(values);
            }

            if ($("#checkout-address-form").find(".saveType").val() == 'add') {
                $("#checkout-address-form").find("#addToAddressBook").parent(".grm-checkbox").show();

                if ($("#checkout-verify-form").find(".addToAddressBook").val() == 'true') {
                    $("#checkout-address-form").find("#addToAddressBook").prop('checked', 'checked');
                }
            } else if ($("#checkout-address-form").find(".saveType").val() == 'edit') {
                $("#checkout-address-form").find("#addToAddressBook").parent(".grm-checkbox").hide();
            }

            eAddresses.setConditions('edit-new');
            $('[data-submit="verify"]').removeClass('hide');
            if ($("#checkout-address-form").find(".saveType").val() == 'add') {
                $("#checkout-address-form").find(".btn-checkout-save-address").addClass("hide");
                $("#add-new-address-title").removeClass('hidden');
                $(".subtitle.add").removeClass('hidden');
                $("#edit-address-title").addClass('hidden');
                $(".subtitle.edit").addClass('hidden');
            } else if ($("#checkout-address-form").find(".saveType").val() == 'edit') {
                $("#checkout-address-form").find(".btn-checkout-save-address").addClass("hide");
                $("#add-new-address-title").addClass('hidden');
                $(".subtitle.add").addClass('hidden');
                $("#edit-address-title").removeClass('hidden');
                $(".subtitle.edit").removeClass('hidden');
            }
        });
    },
    useAddress: function () {
        var $selectedId = $('#selected-id');
        $('body').on('click', '.btn-use-address', function () {
            eActivityIndicator.show();
            var
                newId = $(this).data('use-id'),
                oldId = $selectedId.val();

            var id = $(this).data('use-id');
            values = $('var[data-edit-id="' + id + '"]').data();

            BLC.ajax({
                    url: '/ecommerce/checkout/ajaxusethisaddress',
                    type: "POST",
                    data: {
                        customerAddressId: newId
                    },
                    dataType: "json"
                },
                function (result) {
                    if (result.ShippingUsethisAddressStatus == 'success') {
                        $(".savedaddress li.active").removeClass("active");
                        $("#use-id-"+newId).parents("li").addClass("active");
                        $('.shiptoButton').removeAttr('disabled', 'disabled');
                        $('#address_trash_alert').addClass("hidden");
                        $('#selected-id').val(newId);
                        eAddresses.useThisAddress(values);
                    }else {
                        $('#use-id-' + oldId).attr("checked","checked");
                    }
                    eActivityIndicator.hide();
                });
        });
    },
    populateEdit: function (values) {
        for (var key in values) {
            if (values.hasOwnProperty(key)) {
                var
                    name = String(key).replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(),
                    value = String(values[key]),
                    $checkoutAddressForm = $("#checkout-useaddress-form");
                if (name == 'isocountryalpha2') {
                    $checkoutAddressForm.find("#isoCountryAlpha2").val(value);
                } else if (name == 'addresstype') {
                    if (value == 'true') {
                        $checkoutAddressForm.find("#addressType").val('business');
                    } else if (value == 'false') {
                        $checkoutAddressForm.find("#addressType").val('residential');
                        //Endor - 2789 - Address issues
                        //$checkoutAddressForm.find(".fullName").val('');
                        $checkoutAddressForm.find(".companyName").val('');
                    }
                } else if (name == 'fullname') {
                    $checkoutAddressForm.find(".fullName").val(value);
                } else if (name == 'firstname') {
                    $checkoutAddressForm.find(".firstName").val(value);
                } else if (name == 'lastname') {
                    $checkoutAddressForm.find(".lastName").val(value);
                } else if (name == 'companyname') {
                    $checkoutAddressForm.find(".companyName").val(value);
                } else if (name == 'attention') {
                    $checkoutAddressForm.find(".attention").val(value);
                } else if (name == 'addressline1') {
                    $checkoutAddressForm.find(".addressLine1").val(value);
                } else if (name == 'addressline2') {
                    $checkoutAddressForm.find(".addressLine2").val(value);
                } else if (name == 'addressline3') {
                    $checkoutAddressForm.find(".addressLine3").val(value);
                } else if (name == 'addressline4') {
                    $checkoutAddressForm.find(".addressLine4").val(value);
                } else if (name == 'city') {
                    $checkoutAddressForm.find(".city").val(value);
                } else if (name == 'stateprovinceregion') {
                    $checkoutAddressForm.find(".stateProvinceRegion").val(value);
                } else if (name == 'postalcode') {
                    $checkoutAddressForm.find(".postalCode").val(value);
                } else if (name == 'primaryphone') {
                    $checkoutAddressForm.find(".phoneNumber").val(value);
                } else if (name == 'emailaddress') {
                    $checkoutAddressForm.find(".emailAddress").val(value);
                } else if (name == 'address-id') {
                    $checkoutAddressForm.find(".addressId").val(value);
                } else if (name == 'edit-id') {
                    $checkoutAddressForm.find(".customerAddressId").val(value);
                } else if (name == 'externalnumber') {
                    $checkoutAddressForm.find(".externalNumber").val(value);
                } else if (name == 'internalnumber') {
                    $checkoutAddressForm.find(".internalNumber").val(value);
                } else if (name == 'neighborhood') {
                    $checkoutAddressForm.find(".neighborhood").val(value);
                } else if (name == 'borough') {
                    $checkoutAddressForm.find(".borough").val(value);
                } else if (name == 'reference') {
                    $checkoutAddressForm.find(".reference").val(value);
                } else if (name == 'primaryphonetype') {
                    $checkoutAddressForm.find(".primaryPhoneType").val(value).change();
                } else if (name == 'secondaryphone') {
                    $checkoutAddressForm.find(".secondaryPhone").val(value);
                } else if (name == 'secondaryphonetype') {
                    $checkoutAddressForm.find(".secondaryPhoneType").val(value).change();
                }
                //International - Collect tax id for Brazil
                else if (name == 'taxtype') {
                    if (value == 'CPF') {
                        $checkoutAddressForm.find("#taxType_CPF").prop('checked', true);
                        $checkoutAddressForm.find(".personalTaxId").show();
                        $checkoutAddressForm.find("#personalTaxIdError").show();
                        $checkoutAddressForm.find('#personalTaxIdLink').show();
                        $checkoutAddressForm.find("#taxType_CNPJ").prop('checked', false);
                        $checkoutAddressForm.find(".corporateTaxId").hide();
                        $checkoutAddressForm.find("#corporateTaxIdError").hide();
                        $checkoutAddressForm.find("#corporateTaxIdLink").hide();
                    } else if (value == 'CNPJ') {
                        $checkoutAddressForm.find("#taxType_CPF").prop('checked', false);
                        $checkoutAddressForm.find(".personalTaxId").hide();
                        $checkoutAddressForm.find("#personalTaxIdError").hide();
                        $checkoutAddressForm.find('#personalTaxIdLink').hide();
                        $checkoutAddressForm.find("#taxType_CNPJ").prop('checked', true);
                        $checkoutAddressForm.find(".corporateTaxId").show();
                        $checkoutAddressForm.find("#corporateTaxIdError").show();
                        $checkoutAddressForm.find("#corporateTaxIdLink").show();
                    }
                } else if (name == 'personaltaxid') {
                    $checkoutAddressForm.find(".personalTaxId").val(value);
                } else if (name == 'corporatetaxid') {
                    $checkoutAddressForm.find(".corporateTaxId").val(value);
                } else if (name == 'dni') {
                    $checkoutAddressForm.find("#dni").val(value);
                }
                // Capture Government ID for all LATAM Countries
                else if (name == 'colombiaTaxType') {
                    if (value == 'CC') {
                        $checkoutAddressForm.find("#colombiaTaxType_CC").prop('checked', true);
                    } else if (value == 'CE') {
                        $checkoutAddressForm.find("#colombiaTaxType_CE").prop('checked', true);
                    }
                } else if (name == 'colombiaTaxId') {
                    $checkoutAddressForm.find("#colombiaTaxId").val(value);
                } else if (name == 'uruguayTaxType') {
                    if (value == 'CC') {
                        $checkoutAddressForm.find("#uruguayTaxType_CC").prop('checked', true);
                    } else if (value == 'CE') {
                        $checkoutAddressForm.find("#uruguayTaxType_CE").prop('checked', true);
                    }
                } else if (name == 'uruguayTaxId') {
                    $checkoutAddressForm.find("#uruguayTaxId").val(value);
                } else if (name == 'argentinaTaxId') {
                    $checkoutAddressForm.find("#argentinaTaxId").val(value);
                } 
                //ENDOR#537 start
                else if (name == 'jamaicaTaxId') {
                    $checkoutAddressForm.find("#jamaicaTaxId").val(value);
                }
                //ENDOR#537 end
                else if (name == 'latamTaxId') {
                    $checkoutAddressForm.find("#latamTaxId").val(value);
                } else if (name == 'mexicoTaxId') {
                    $checkoutAddressForm.find("#mexicoTaxId").val(value);
                } else if (name == 'ecuadorTaxId') {
                    $checkoutAddressForm.find("#ecuadorTaxId").val(value);
                // Gitlab 2371 Push TaxID from Chile and Dom. Republic to PeopleSoft
                } else if (name == 'chileTaxId') {
                    $checkoutAddressForm.find("#chileTaxId").val(value);
                } else if (name == 'domTaxId') {
                    $checkoutAddressForm.find("#domTaxId").val(value);
                } else if (name == 'elSalvadorTaxId') {
                    $checkoutAddressForm.find("#elSalvadorTaxId").val(value);
                } else if (name == 'taiwanTaxId') {
                    $checkoutAddressForm.find("#taiwanTaxId").val(value);
                }

            }
        }
    },
    useThisAddress: function (values) {
        for (var key in values) {
            if (values.hasOwnProperty(key)) {

                var name = String(key).replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(),
                    value = String(values[key]),
                    $useAddressForm = $("#checkout-useaddress-form");
                if (name == 'isocountryalpha2') {
                    $useAddressForm.find("#isoCountryAlpha2").val(value);
                } else if (name == 'addresstype') {
                    if (value == 'true') {
                        $useAddressForm.find("#addressType").val('business');
                    } else if (value == 'false') {
                        $useAddressForm.find("#addressType").val('residential');
                        $useAddressForm.find(".fullName").val('');
                        $useAddressForm.find(".companyName").val('');
                    }
                } else if (name == 'fullname') {
                    $useAddressForm.find(".fullName").val(value);
                } else if (name == 'firstname') {
                    $useAddressForm.find(".firstName").val(value);
                } else if (name == 'lastname') {
                    $useAddressForm.find(".lastName").val(value);
                } else if (name == 'companyname') {
                    $useAddressForm.find(".companyName").val(value);
                } else if (name == 'attention') {} else if (name == 'addressline1') {
                    $useAddressForm.find(".addressLine1").val(value);
                } else if (name == 'addressline2') {
                    $useAddressForm.find(".addressLine2").val(value);
                } else if (name == 'addressline3') {
                    $useAddressForm.find(".addressLine3").val(value);
                } else if (name == 'addressline4') {
                    $useAddressForm.find(".addressLine4").val(value);
                } else if (name == 'city') {
                    $useAddressForm.find(".city").val(value);
                } else if (name == 'stateprovinceregion') {
                    $useAddressForm.find(".stateProvinceRegion").val(value);
                } else if (name == 'postalcode') {
                    $useAddressForm.find(".postalCode").val(value);
                } else if (name == 'primaryphone') {
                    $useAddressForm.find(".phoneNumber").val(value);
                } else if (name == 'emailaddress') {
                    $useAddressForm.find(".emailAddress").val(value);
                    $useAddressForm.find(".confirmEmailAddress").val(value);
                } else if (name == 'externalnumber') {
                    $useAddressForm.find("#externalNumber").val(value);
                } else if (name == 'internalnumber') {
                    $useAddressForm.find("#internalNumber").val(value);
                } else if (name == 'neighborhood') {
                    $useAddressForm.find("#neighborhood").val(value);
                } else if (name == 'borough') {
                    $useAddressForm.find("#borough").val(value);
                } else if (name == 'reference') {
                    $useAddressForm.find("#reference").val(value);
                } else if (name == 'primaryphonetype') {
                    $useAddressForm.find("#primaryPhoneType").val(value);
                } else if (name == 'secondaryphone') {
                    $useAddressForm.find("#secondaryPhone").val(value);
                } else if (name == 'secondaryphonetype') {
                    $useAddressForm.find("#secondaryPhoneType").val(value);
                } else if (name == 'dni') {
                    $useAddressForm.find("#dni").val(value);
                }
                //International - Collect tax id for Brazil
                else if (name == 'taxtype') {
                    $useAddressForm.find("#taxType_CPF").prop('checked', true);
                    $useAddressForm.find("#taxType_CNPJ").prop('checked', false);
                    $useAddressForm.find("#personalTaxId").show();
                    $useAddressForm.find("#personalTaxIdError").show();
                    $useAddressForm.find("#personalTaxIdLink").show();
                    $useAddressForm.find("#taxType_CNPJ").prop('checked', false);
                    $useAddressForm.find("#corporateTaxId").hide();
                    $useAddressForm.find("#corporateTaxIdError").hide();
                    $useAddressForm.find("#corporateTaxIdLink").hide();
                    $useAddressForm.find("#personalTaxId").val('');
                    $useAddressForm.find("#corporateTaxId").val('');
                }
                //BIMARKPLC-429 Capture Government ID for all LATAM Countries
                else if (name == 'colombiaTaxType') {
                    $useAddressForm.find("#colombiaTaxType_CC").prop('checked', true);
                    $useAddressForm.find("#colombiaTaxType_CE").prop('checked', false);
                } else if (name == 'colombiaTaxId') {
                    $useAddressForm.find("#colombiaTaxId").val(value);
                } else if (name == 'uruguayTaxType') {
                    $useAddressForm.find("#uruguayTaxType_CC").prop('checked', true);
                    $useAddressForm.find("#uruguayTaxType_CE").prop('checked', false);
                } else if (name == 'uruguayTaxId') {
                    $useAddressForm.find("#uruguayTaxId").val(value);
                } else if (name == 'argentinaTaxId') {
                    $useAddressForm.find("#argentinaTaxId").val(value);
                } 
                //ENDOR#537 start
                else if (name == 'jamaicaTaxId') {
                    $useAddressForm.find("#jamaicaTaxId").val(value);
                }
                //ENDOR#537 end
                else if (name == 'latamTaxId') {
                    $useAddressForm.find("#latamTaxId").val(value);
                } else if (name == 'mexicoTaxId') {
                    $useAddressForm.find("#mexicoTaxId").val(value);
                } else if (name == 'ecuadorTaxId') {
                	$useAddressForm.find("#ecuadorTaxId").val(value);
                // Gitlab 2371 Push TaxID from Chile and Dom. Republic to PeopleSoft
                } else if (name == 'chileTaxId') {
                	$useAddressForm.find("#chileTaxId").val(value);
                } else if (name == 'domTaxId') {
                	$useAddressForm.find("#domTaxId").val(value);
                } else if (name == 'elSalvadorTaxId') {
                	$useAddressForm.find("#elSalvadorTaxId").val(value);
                } else if (name == 'taiwanTaxId') {
                	$useAddressForm.find("#taiwanTaxId").val(value);
                }

            }
        }
    },
    trashAddress: function () {
        var $btn = $('.btn-trash');
        $('body').on('click', '#selected-trash,.non-selected-trash', function () {
            eActivityIndicator.show();
            var
                $this = $(this),
                trashId = $this.data('trash');

            BLC.ajax({
                    url: '/ecommerce/checkout/ajaxremoveaddress',
                    type: "POST",
                    data: {
                        customerAddressId: trashId,
                        //isSelectedAddress: $this.attr('id') == 'selected-trash' ? 'true' : 'false'
                    },
                    dataType: "json"
                },
                function (result) {
                    if (result.ShippingRemoveAddressStatus == 'success') {
                        // $('#use-address-' + trashId).hide();
                        // $('#use-address-' + trashId).find('#' + trashId).remove();
                        $('#use-address-' + trashId).remove();
                    }
                    if (result.shippingAddressRemoved == 'true') {
                        $('.checkout_hide_no_address').addClass('hide');
                    }
                    var activeAddr = $('input[name="use-address"]:checked').length;
                    if(!activeAddr) {
                        $('.shiptoButton').attr('disabled', 'disabled');
                        $('#address_trash_alert').removeClass("hidden");
                    }
                    eActivityIndicator.hide();
                });
        });
    },
    addAddress: function () {
        var $btn = $('#btn-add-address');
        $('body').on('click', '#btn-add-address', function () {
            eActivityIndicator.show();
            $("#checkout-address-form").find(".saveType").val('add');
            $("#checkout-address-form").find("#isNewAddress").val('true');
            $("#checkout-address-form").find("#addToAddressBook").parent(".grm-checkbox").show();
            eAddresses.setConditions('add');
            eAddresses.clearForm();
            $('[data-submit="verify"]').removeClass('hide');
            $("#checkout-address-form").find(".btn-checkout-save-address").addClass("hide");
            $("#add-new-address-title").css("visibility","visible");
            eActivityIndicator.hide();
        });
    },
    clearForm: function () {
        var $checkoutAddressForm = $("#checkout-address-form");
        $checkoutAddressForm.find("#addressType_business").prop('checked', false);
        $checkoutAddressForm.find("#addressType_residential").prop('checked', true);
        $checkoutAddressForm.find("#fullName").val('');
        $checkoutAddressForm.find("#firstName").val('');
        $checkoutAddressForm.find("#lastName").val('');
        $checkoutAddressForm.find("#companyName").val('');
        $checkoutAddressForm.find("#companyName").siblings(".error-msg").remove();
        $checkoutAddressForm.find("#companyName").siblings(".btn-error").remove();
        $checkoutAddressForm.find("#attention").val('');
        $checkoutAddressForm.find("#addressLine1").val('');
        $checkoutAddressForm.find("#addressLine2").val('');
        $checkoutAddressForm.find("#addressLine3").val('');
        $checkoutAddressForm.find("#addressLine4").val('');
        $checkoutAddressForm.find("#city").val('');
        $checkoutAddressForm.find("#countrySubDivisionId").val('NONE').change();
        $checkoutAddressForm.find("#postalCode").val('');
        $checkoutAddressForm.find("#primaryPhone").val('');
        //$checkoutAddressForm.find("#emailAddress").val('');
        $checkoutAddressForm.find(".addressId").val('');
        $checkoutAddressForm.find("#externalNumber").val('');
        $checkoutAddressForm.find("#internalNumber").val('');
        $checkoutAddressForm.find("#neighborhood").val('');
        $checkoutAddressForm.find("#borough").val('');
        $checkoutAddressForm.find("#reference").val('');
        $checkoutAddressForm.find("#primaryPhoneType").val('NONE').change();
        $checkoutAddressForm.find("#secondaryPhone").val('');
        $checkoutAddressForm.find("#secondaryPhoneType").val('NONE').change();
        $checkoutAddressForm.find(".shippingInfo").addClass('hide');
        $checkoutAddressForm.find(".shippingType").addClass('show');
        //Collect tax id for Brazil
        $checkoutAddressForm.find("#taxType_CPF").prop('checked', true);
        $checkoutAddressForm.find("#taxType_CNPJ").prop('checked', false);
        $checkoutAddressForm.find('#personalTaxId').show();
        $checkoutAddressForm.find('#personalTaxIdLink').show();
        $checkoutAddressForm.find('#personalTaxIdError').show();
        $checkoutAddressForm.find("#personalTaxId").siblings(".error-msg").remove();
        $checkoutAddressForm.find("#personalTaxId").siblings(".btn-error").remove();
        $checkoutAddressForm.find('#personalTaxId').val('');
        $checkoutAddressForm.find('#dni').val('');
        $checkoutAddressForm.find('#corporateTaxId').hide();
        $checkoutAddressForm.find('#corporateTaxIdLink').hide();
        $checkoutAddressForm.find('#corporateTaxIdError').hide();
        $checkoutAddressForm.find("#personalTaxId").siblings(".error-msg").remove();
        $checkoutAddressForm.find("#personalTaxId").siblings(".btn-error").remove();
        $checkoutAddressForm.find('#corporateTaxId').val('');


        //Capture Government ID for all LATAM Countries
        $checkoutAddressForm.find("#colombiaTaxType_CC").prop('checked', true);
        $checkoutAddressForm.find("#colombiaTaxType_CE").prop('checked', false);
        $checkoutAddressForm.find("#colombiaTaxId").val('');
        $checkoutAddressForm.find("#uruguayTaxType_CC").prop('checked', true);
        $checkoutAddressForm.find("#uruguayTaxType_CE").prop('checked', false);
        $checkoutAddressForm.find("#uruguayTaxId").val('');
        $checkoutAddressForm.find("#argentinaTaxId").val('');
        //ENDOR#537 start
        $checkoutAddressForm.find("#jamaicaTaxId").val('');
        //ENDOR#537 end
        $checkoutAddressForm.find("#latamTaxId").val('');
        $checkoutAddressForm.find("#mexicoTaxId").val('');
        $checkoutAddressForm.find("#ecuadorTaxId").val('');
        // Gitlab 2371 Push TaxID from Chile and Dom. Republic to PeopleSoft
        $checkoutAddressForm.find("#chileTaxId").val('');
        $checkoutAddressForm.find("#domTaxId").val('');
        $checkoutAddressForm.find("#elSalvadorTaxId").val('');
        $checkoutAddressForm.find("#taiwanTaxId").val('');

    },
    editAddress: function () {
        var $btn = $('.btn-edit');
        $('body').on('click', '.btn-edit', function () {
            eActivityIndicator.show();
            var customerAddressId = $(this).data('edit');

            if (customerAddressId == 'plateau-address') {
                $("#checkout-address-form").find(".saveType").val('edit');
                $("#checkout-address-form").find("#isNewAddress").val('false');
                $("#checkout-address-form").find(".editAddress").val('true');
                $('#checkout-address-form').submit();
            } else {
                $("#checkout-useaddress-form").find(".saveType").val('edit');
                $("#checkout-address-form").find("#isNewAddress").val('false');
                $("#checkout-useaddress-form").find(".customerAddressId").val(customerAddressId);
                $("#checkout-useaddress-form").find(".editAddress").val('true');
                var values = $('var[data-edit-id="' + customerAddressId + '"]').data();
                eAddresses.populateEdit(values);
                $('#checkout-useaddress-form').submit();
            }
            eActivityIndicator.hide();
        });
    }
};;
/*
ePwSecurity
ePwHelpers
eNewPw
*/
var ePwSecurity = {
    init: function(){
        eFieldErrors.msgToggle($('.password-container, .old-pw-check'));
    },
   
};
//tooltips and options for our eNewPw validator
var ePwHelpers = {
    setOptions: function() {
        var
            options = {},
            $icon = $('#pw-strength-icon'),
            $newInput = $('input[name="newPassword"]'),
            $errorMsg = $('#pw-strength-error'),
            $pwContainer =  $newInput.closest('.password-container'),
            scoreVal = 0,
            minimumChars = 8,
            scoreClass = false,
            msg = 'Password must be 8 characters';
        options.ui = {
            minChar: minimumChars,
            showProgressBar: false,
            showVerdicts: false
        };
        options.common = {
            debug: false,
            onKeyUp: function(event, score) {
                var
                    pwLength = $newInput.val().length,
                    newScoreVal = score.verdictLevel,
                	scoreChange = false,
                    verdictText = score.verdictText;
                if (newScoreVal !== scoreVal) {scoreChange = true; scoreVal = newScoreVal;}

                function classChange(pwLength, minimumChars, scoreVal) {
                    if (pwLength < minimumChars) {pw.strength= false; scoreClass = 'pw-weak'; msg = 'Password must be 8 characters';}
                    if (pwLength < minimumChars && scoreVal === -1) {pw.strength= false; scoreClass = 'pw-weak'; msg = 'Password Invalid';}
                    if (pwLength < minimumChars && scoreVal === 1) {pw.strength= false; scoreClass = 'pw-normal'; msg='Very Weak'}
                    if (pwLength < minimumChars && scoreVal === 2) {pw.strength= false; scoreClass = 'pw-normal'; msg='Weak'}
                    if (pwLength >= minimumChars && scoreVal === 3) {
                        pw.strength = true; scoreClass = 'pw-valid pw-strong'; msg = 'Good';
                        $pwContainer.removeClass('field-error');
                    }
                }

                if (scoreChange) {
                    $icon.removeClass(scoreClass);
                    $errorMsg.removeClass(scoreClass);
                    classChange(pwLength, minimumChars, scoreVal);
                    $errorMsg.find('span').empty().text(msg);
                    $icon.addClass(scoreClass);
                    $errorMsg.addClass(scoreClass);
                }
            }
        };
        options.rules = {
            scores: {
                wordOneNumber: 5,
                wordOneSpecialChar: 5,
                wordLowercase: 1,
                wordUppercase: 3
            }
        };

        return options;
    }
};
//fe new password verification
var eNewPw = {
    pw: function() {
        this.strength = false;
        this.match = false;
        this.val = false;
    },
    validate: function() {
        var
            $newInput = $('input[name="newPassword"]'),
            $matchInput = $('input[name="newPasswordConfirm"]');
        if ($newInput && $matchInput) {

            $newInput.focusin(function() {

                var $this = $(this);

                if (!$this.hasClass('strength-validated')) {pw = new eNewPw.pw(); eNewPw.strength($this);}

            }).focusout(function() {
                var
                    $this = $(this),
                    val = $this.val(),
                    $pwContainer = $this.closest('.password-container')
                ;
                if (pw.strength) {
                    pw.val = val;
                    $this.addClass('strength-validated');
                }else if(!val){
                    $pwContainer.removeClass('field-error');
                    $pwContainer.find('.input-icon').removeClass('pw-weak');
                }else if(!pw.strength){
                    $this.removeClass('strength-validated');
                    $pwContainer.addClass('field-error');
                }
            });

            $matchInput.focusin(function() {
                var
                    $this = $(this),
                    $pwContainer = $this.closest('.password-container')
                ;
                if (pw.val) {
                    eNewPw.matching($this);
                } else {
                    $pwContainer.addClass('field-error');
                }
            });

        }
    },
    strength: function($newInput) {
        $newInput.pwstrength(ePwHelpers.setOptions());
    },
    matching: function($matchInput) {
        $matchInput.on('keyup', function() {
            var
                matchPwValue = $(this).val(),
                $icon = $('#pw-match-icon'),
                $errorMsg = $('#pw-match-error'),
                msg,
                matchClass;

            if (matchPwValue === pw.val) {
                pw.match = true;
                $icon.removeClass('pw-weak');
                matchClass = 'pw-strong';
                msg = 'Passwords Match';
                // ePwSecurity.removeBlocker('.submit-blocker');
            } else {
                $icon.removeClass('pw-strong');
                matchClass = 'pw-weak';
                msg = 'Passwords do not match';
            }
            $icon.addClass(matchClass);
            $errorMsg.addClass(matchClass);
            $errorMsg.find('span').empty().text(msg);
            //ePwHelpers.errorMsg($icon, title, matchClass);
        });
    }
};;
/*
eFlyinContent
eCarousel
Item Detail Carousel > detail.js
Item Color Carousel > detail.js
*/
var eFlyinContent = {
    init: function (currentDiv, speed) {
        // if old jumbotron
        if ($('#jumbotronCarousel')[0]) {
            // added to fix issue with the text size rendering at 1% on page load
            eFlyinContent.textSizeInterval = setInterval(function () {
                eFlyinContent.checkTextSize(currentDiv);
            }, 250);

            setTimeout(function () {
                eFlyinContent.center();
                eFlyinContent.fly(currentDiv);
            }, speed);
        }
    },
    // this function also added to fix issue with the text size rendering at 1%
    checkTextSize: function (currentDiv) {
        var currentHeight = currentDiv.height(),
            carouselHeight = $('.owl-wrapper-outer').height(),
            activeImage = $('.owl-wrapper-outer .active img').height();
        // make sure the carousel has the height set, if so, run sizeText() and reset the interval
        if ((carouselHeight != 0) && (currentHeight >= activeImage)) {
            eFlyinContent.sizeText(currentDiv);
            clearInterval(eFlyinContent.textSizeInterval);
        }
    },
    santitize: function () {
        // if old jumbotron
        if ($('#jumbotronCarousel')[0]) {
            var carouselItem = $(".jumbotron .item");
            carouselItem.each(function () {
                var flyinText = $(this).find(".flyin-story h1, .flyin-story h2, .flyin-story h3, .flyin-story h1 span, .flyin-story h2 span, .flyin-story h3 span");
                flyinText.each(function () {
                    var $thisText = $(this).text();
                    var $saniText = $thisText.replace("&reg;", "<sup>&reg;</sup>").replace("&trade;", "<sup>&trade;</sup>");
                    $(this).html($saniText);
                });
            });
        } else {
            // else new jumbotronRefresh
            var carouselItem = $(".jumbotron .itemRefresh");
            carouselItem.each(function () {
                var flyinText = $(this).find(".flyin-contentRefresh h1, .flyin-contentRefresh h2");
                flyinText.each(function () {
                    var $thisText = $(this).text();
                    var $saniText = $thisText.replace("&reg;", "<sup>&reg;</sup>").replace("&trade;", "<sup>&trade;</sup>");
                    $(this).html($saniText);
                });
            });
        }
    },
    center: function () {
        $('.flyin-content').each(function () {
            var
                $this = $(this),
                height = $(this).height(),
                marginTop = (height / 2);

            $(this).css('margin-top', '-' + marginTop + 'px');
        });
    },
    fly: function (currentDiv) {
        var
            $flyinStory = currentDiv.find('.flyin-story'),
            $flyinLink = currentDiv.find('.flyin-link'),
            storyPosition;
        if (currentDiv.hasClass('storyRight')) {
            storyPosition = 'right';
        } else if (currentDiv.hasClass('storyLeft')) {
            storyPosition = 'left';
        } else if (currentDiv.hasClass('storyMid')) {
            storyPosition = 'mid';
        }

        if (storyPosition == 'right') {
            $flyinStory.animate({
                "right": "-=50px",
                "opacity": 1
            }, 500, "swing");
        } else if (storyPosition == 'left') {
            $flyinStory.animate({
                "left": "-=50px",
                "opacity": 1
            }, 500, "swing");
        } else if (storyPosition == 'mid') {
            $flyinStory.animate({
                "bottom": "-=50px",
                "opacity": 1
            }, 500, "swing");
        }
        setTimeout(function () {
            $flyinLink.animate({
                "bottom": "+=150px",
                "opacity": 1
            }, 750, "swing");
        }, 250);

    },
    sizeText: function (currentDiv) {
        var
            currentHeight = currentDiv.height(),
            $flyinContent = currentDiv.find('.flyin-content'),
            currentWidth = $flyinContent.width(),
            $flyinStory = currentDiv.find('.flyin-story'),
            $flyinLines = $flyinStory.children(),
            paginationHeight = $('.owl-pagination').height(),
            flyOverload = false;
        $flyinStory.css('font-size', '100%');

        var
            paddingHeight = currentHeight / 10,
            paddingWidth = currentWidth / 10;

        currentHeight = currentHeight - paginationHeight - paddingHeight;
        currentWidth = currentWidth - paddingWidth;

        $flyinLines.each(function () {
            var
                $this = $(this),
                flyText = $this.text(),
                textArray = flyText.split(' ');

            for (i = 0; i < textArray.length; i++) {
                var word = textArray[i];
                var wordLength = word.length;
                if (wordLength > 8) {
                    var id = word + '-' + i;
                    $this.html($this.text().replace(word, '<span class="flyOverload" id="' + id + '">' + word + '</span>'));
                    flyOverload = true;
                }
            }
        });

        for (var i = 0; i < 100; i++) {

            var contentHeight = $flyinContent.height();
            var contentWidth = $flyinContent.find('.flyOverload').width();

            if (flyOverload && contentHeight < currentHeight && contentWidth < currentWidth) {
                break;
            } else if (!flyOverload && contentHeight < currentHeight) {
                break;
            }

            var percent = 100 - i;
            $flyinStory.css('font-size', percent + '%');
        }
    }
};

var eCarousel = {
    init: function () {
        var
            jumbotronCarousel = $("#jumbotronCarousel"),
            jumbotronCarouselRefresh = $("#jumbotronCarouselRefresh"),
            productCarouselRefresh = $("#productCarouselRefresh"),
            recentlyViewedCarouselRefresh = $("#recentlyViewedCarouselRefresh"),
            isotopeCarousel = $(".isotopeCarousel"),
            itemDetailCarousel = $("#itemDetailCarousel"),
            paginationCarousel = $(".paginationCarousel, .paginationCarousel2"),
            hasFocus = false;

        // if old jumbotron
        if ($('#jumbotronCarousel')[0]) {
            $.each($(".jumbotron .item *"), function () {
                $this = $(this);
                $this.prop('tabindex', -1);
            });

            $('[data-czid="Customer-Isotope Story Zone"] .isotope').prop("tabindex", 0);


            $('.mainCarouselNext').on('focus', function () {
                $('.mainCarouselNext').keydown(function (e) {
                    if (e.which === 13) {
                        $('.mainCarouselNext').click();
                    }
                });
            });

            $(".jumbotron .item").on('focus', function () {
                hasFocus = true;
                $(this).closest('.owl-item').css('border', '2px dotted black');
                $(this).keydown(function (e) {
                    if (e.which === 13) {
                        var link = $(this).find('a.fullItemLink')[0];
                        link.click();
                    }
                });
            });

            $(".jumbotron .item").on('focusout', function () {
                hasFocus = false;
                $(this).closest('.owl-item').css('border', 'none');
            });

            $('[data-czid="Customer-Isotope Story Zone"] .isotope *').prop('tabindex', -1);

            //HOME PAGE CAROUSEL
            if ($(".jumbotron .item").length == 1) {
                jumbotronCarousel.owlCarousel({
                    navigation: false,
                    slideSpeed: 300,
                    stopOnHover: true,
                    paginationSpeed: 400,
                    addClassActive: true,
                    singleItem: true,
                    mouseDrag: false,
                    touchDrag: true,
                    autoPlay: false,
                    autoplayTimeout: 1000,
                    autoHeight: true,
                    transitionStyle: "fadeUp",
                    beforeMove: function () {
                        //reset the text to be outside da box
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $flyinStory = currentDiv.find('.flyin-story'),
                            $flyinLink = currentDiv.find('.flyin-link'),
                            $mainControls = $(".mainCarouselPrev, .mainCarouselNext");

                        if (currentDiv.hasClass('storyRight')) {
                            $flyinStory.css({
                                'right': '50px',
                                'opacity': '0'
                            });
                        } else if (currentDiv.hasClass('storyLeft')) {
                            $flyinStory.css({
                                'left': '50px',
                                'opacity': '0'
                            });
                        } else if (currentDiv.hasClass('storyMid')) {
                            $flyinStory.css({
                                'bottom': '50px',
                                'opacity': '0'
                            });
                        }

                    },
                    afterMove: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $mainControls = $(".mainCarouselPrev, .mainCarouselNext"),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls"),
                            $flyinLink = currentDiv.find('.flyin-link');

                        $flyinLink.css({
                            'bottom': '-150px',
                            'opacity': '0'
                        });
                        //check for lite/dark
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                            $mainControls.removeClass("lite");
                            $mainControls.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                            $mainControls.removeClass("dark");
                            $mainControls.addClass("lite");
                        }

                        eFlyinContent.init(currentDiv, 500);
                    },
                    afterInit: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $mainControls = $(".mainCarouselPrev, .mainCarouselNext"),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls");
                        //check for lite/dark
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                            $mainControls.removeClass("lite");
                            $mainControls.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                            $mainControls.removeClass("dark");
                            $mainControls.addClass("lite");
                        }
                        //turns any text link into a full-item sized link
                        $(".fullItemLink").each(function () {
                            storyLink = $(this).siblings(".flyin-content").children("p").find("a.storyLink").attr("href");
                            $(this).attr("href", storyLink);
                            onclick = $(this).siblings(".flyin-contentRefresh").children("p").find("a.storyLink").attr("onclick");
                            $(this).attr("onclick", onclick);

                        });
                        //delete the nav, since there's only one item
                        $(".mainCarouselPrev, .mainCarouselNext").hide();

                        //santitize the content of "R" and "TM" in flyin content
                        eFlyinContent.santitize();

                        //animate the first story's text in
                        eFlyinContent.init(currentDiv, 250);
                    },
                    afterUpdate: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $flyinLink = currentDiv.find('.flyin-link');
                        $flyinLink.css({
                            'bottom': '-150px',
                            'opacity': '0'
                        });
                        eFlyinContent.init(currentDiv, 250);
                    }

                });
            }

            //if the jumbotron has enough items...
            if ($(".jumbotron .item").length > 1) {

                jumbotronCarousel.owlCarousel({
                    navigation: false,
                    slideSpeed: 300,
                    stopOnHover: true,
                    paginationSpeed: 400,
                    addClassActive: true,
                    singleItem: true,
                    mouseDrag: false,
                    touchDrag: true,
                    autoPlay: true,
                    autoplayTimeout: 1000, 
                    autoHeight: true,
                    transitionStyle: "fadeUp",
                    beforeMove: function () {
                        //reset the text to be outside da box
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $flyinStory = currentDiv.find('.flyin-story'),
                            $flyinLink = currentDiv.find('.flyin-link'),
                            $mainControls = $(".mainCarouselPrev, .mainCarouselNext");

                        if (currentDiv.hasClass('storyRight')) {
                            $flyinStory.css({
                                'right': '50px',
                                'opacity': '0'
                            });
                        } else if (currentDiv.hasClass('storyLeft')) {
                            $flyinStory.css({
                                'left': '50px',
                                'opacity': '0'
                            });
                        } else if (currentDiv.hasClass('storyMid')) {
                            $flyinStory.css({
                                'bottom': '50px',
                                'opacity': '0'
                            });
                        }
                        $(currentDiv).prop('tabindex', -1);


                        if (hasFocus) {
                            $(currentDiv).closest('.owl-item').css('border', 'none');
                        }
                    },
                    afterMove: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $mainControls = $(".mainCarouselPrev, .mainCarouselNext"),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls"),
                            $flyinLink = currentDiv.find('.flyin-link');
                        $flyinLink.css({
                            'bottom': '-150px',
                            'opacity': '0'
                        });
                        //check for lite/dark
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                            $mainControls.removeClass("lite");
                            $mainControls.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                            $mainControls.removeClass("dark");
                            $mainControls.addClass("lite");
                        }


                        $(currentDiv).prop('tabindex', 0);

                        if (hasFocus) {
                            $(currentDiv).closest('.owl-item').css('border', '2px black dotted');
                        }

                        eFlyinContent.init(currentDiv, 500);
                    },
                    afterInit: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $mainControls = $(".mainCarouselPrev, .mainCarouselNext"),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls");
                        //check for lite/dark
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                            $mainControls.removeClass("lite");
                            $mainControls.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                            $mainControls.removeClass("dark");
                            $mainControls.addClass("lite");
                        }
                        //turns any text link into a full-item sized link
                        $(".fullItemLink").each(function () {
                            storyLink = $(this).siblings(".flyin-content").children("p").find("a.storyLink").attr("href");
                            $(this).attr("href", storyLink);
                            onclick = $(this).siblings(".flyin-contentRefresh").children("p").find("a.storyLink").attr("onclick");
                            $(this).attr("onclick", onclick);
                        });
                        //move the main nav buttons into the carousel
                        $(".mainCarouselPrev").appendTo(".mainCarousel");
                        $(".mainCarouselNext").appendTo(".mainCarousel");

                        //santitize the content of "R" and "TM" in flyin content
                        eFlyinContent.santitize();

                        //animate the first story's text in
                        eFlyinContent.init(currentDiv, 250);
                    },
                    afterUpdate: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".item").eq(currentItem),
                            $flyinLink = currentDiv.find('.flyin-link');
                        $flyinLink.css({
                            'bottom': '-150px',
                            'opacity': '0'
                        });

                        eFlyinContent.init(currentDiv, 250);
                    }

                });
            } // item check

            //assign custom main carousel buttons
            $(".mainCarouselNext").on("click touchend", function () {
                jumbotronCarousel.trigger('owl.next');
            });
            $(".mainCarouselPrev").on("click touchend", function () {
                jumbotronCarousel.trigger('owl.prev');
            });
        } else {
            // else new jumbotronRefresh

            // remove the left/right nav controls
            $(".mainCarouselPrev").css('display', 'none');
            $(".mainCarouselNext").css('display', 'none');

            $.each($(".jumbotron .itemRefresh *"), function () {
                $this = $(this);
                $this.prop('tabindex', -1);
            });

            // $('[data-czid="Customer-Isotope Story Zone"] .isotope').prop("tabindex", 0);

            // $(".jumbotron .itemRefresh").on('focus', function () {
            //     hasFocus = true;
            //     $(this).closest('.owl-item').css('border', '2px dotted black');
            //     $(this).keydown(function (e) {
            //         if (e.which === 13) {
            //             var link = $(this).find('a.fullItemLinkRefresh');
            //             link.click();
            //         }
            //     });
            // });

            // $(".jumbotron .itemRefresh").on('focusout', function () {
            //     hasFocus = false;
            //     $(this).closest('.owl-item').css('border', 'none');
            // });

            // $('[data-czid="Customer-Isotope Story Zone"] .isotope *').prop('tabindex', -1);

            //HOME PAGE CAROUSEL
            if ($(".jumbotron .itemRefresh").length == 1) {
                jumbotronCarouselRefresh.owlCarousel({
                    items:1,
                    itemRetina: false,
                    itemsDesktop: false,
                    itemsDesktopSmall: false,
                    itemsTablet: false,
                    itemsTabletSmall: false,
                    itemsMobile: false,
                    navigation: false,
                    slideSpeed: 300,
                    stopOnHover: true,
                    paginationSpeed: 400,
                    addClassActive: true,
                    singleItem: true,
                    mouseDrag: false,
                    touchDrag: true,
                    autoPlay: false,
                    autoplayTimeout: 1000, 
                    autoHeight: false,
                    transitionStyle: "fadeUp",
                    beforeMove: function () {
                        var
                            currentItem = this.owl.currentItem,
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls");
                        currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem)
                    },
                    afterMove: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls");
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                        }
                        if (currentDiv.hasClass("storyMid")) {
                            pager.addClass("storyMid");
                        } else {
                            pager.removeClass("storyMid");
                        }

                        eFlyinContent.init(currentDiv, 500);
                    },
                    afterInit: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls"),
                            content = currentDiv.find('h1, h2, .flyin-linkRefresh');

                        //If current slide does not have h1, h2, cta link
                        if (content.length == 0) {

                            $(".owl-item").find(".flyin-contentRefresh").eq(currentItem).css("display", "none");
                            $(".jumbotron .owl-themeRefresh .owl-controls").css("margin-top", 0);
                        }
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                        }
                        if (currentDiv.hasClass("storyMid")) {
                            pager.addClass("storyMid");
                        } else {
                            pager.removeClass("storyMid");
                        }
                        //turns any text link into a full-item sized link
                        $(".fullItemLinkRefresh").each(function () {
                            storyLink = $(this).siblings(".flyin-contentRefresh").children("p").find("a.storyLink").attr("href");
                            $(this).attr("href", storyLink);
                            onclick = $(this).siblings(".flyin-contentRefresh").children("p").find("a.storyLink").attr("onclick");
                            $(this).attr("onclick", onclick);
                        });

                        //santitize the content of "R" and "TM" in flyin content
                        //eFlyinContent.santitize();

                        //animate the first story's text in
                        eFlyinContent.init(currentDiv, 250);
                    },
                    afterUpdate: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem);
                        eFlyinContent.init(currentDiv, 250);
                    }

                });
            }

            //if the jumbotronRefresh has enough items...
            if ($(".jumbotron .itemRefresh").length > 1) {

                jumbotronCarouselRefresh.owlCarousel({
                    items:1,
                    itemRetina: false,
                    itemsDesktop: false,
                    itemsDesktopSmall: false,
                    itemsTablet: false,
                    itemsTabletSmall: false,
                    itemsMobile: false,
                    navigation: false,
                    slideSpeed: 300,
                    stopOnHover: true,
                    paginationSpeed: 400,
                    addClassActive: true,
                    singleItem: true,
                    mouseDrag: false,
                    touchDrag: true,
                    autoPlay: true,
                    autoplayTimeout: 1000, 
                    autoHeight: false,
                    transitionStyle: "fadeUp",
                    beforeMove: function () {
                        //reset the text to be outside da box
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem),
                            content = currentDiv.find('h1, h2, .flyin-linkRefresh');

                        //If current slide does not have h1, h2, cta link
                        if (content.length == 0) {

                            $(".owl-item").find(".flyin-contentRefresh").eq(currentItem).css("display", "none");
                            $(".jumbotron .owl-themeRefresh .owl-controls").css("margin-top", 0);
                        }
                        if (hasFocus) {
                            $(currentDiv).closest('.owl-item').css('border', 'none');
                        }
                    },
                    afterMove: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls"),
                            content = currentDiv.find('h1, h2, .flyin-linkRefresh');

                        //If current slide does not have h1, h2, cta link
                        if (content.length == 0) {

                            $(".owl-item").find(".flyin-contentRefresh").eq(currentItem).css("display", "none");
                            $(".jumbotron .owl-themeRefresh .owl-controls").css("margin-top", 0);
                        }
                        //check for lite/dark
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                        }
                        if (currentDiv.hasClass("storyMid")) {
                            pager.addClass("storyMid");
                        } else {
                            pager.removeClass("storyMid");
                        }

                        if (hasFocus) {
                            $(currentDiv).closest('.owl-item').css('border', '2px black dotted');
                        }
                        // $(currentDiv).prop('tabindex', 0);
                        eFlyinContent.init(currentDiv, 500);
                    },
                    afterInit: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem),
                            owlInfo = this.owl,
                            pager = owlInfo.baseElement.find(".owl-controls"),
                            content = currentDiv.find('h1, h2, .flyin-linkRefresh');

                        //If current slide does not have h1, h2, cta link
                        if (content.length == 0) {

                            $(".owl-item").find(".flyin-contentRefresh").eq(currentItem).css("display", "none");
                            $(".jumbotron .owl-themeRefresh .owl-controls").css("margin-top", 0);
                        }
                        if (currentDiv.hasClass("dark")) {
                            pager.removeClass("lite");
                            pager.addClass("dark");
                        }
                        if (currentDiv.hasClass("lite")) {
                            pager.removeClass("dark");
                            pager.addClass("lite");
                        }
                        if (currentDiv.hasClass("storyMid")) {
                            pager.addClass("storyMid");
                        } else {
                            pager.removeClass("storyMid");
                        }
                        //turns any text link into a full-item sized link
                        $(".fullItemLinkRefresh").each(function () {
                            storyLink = $(this).siblings(".flyin-contentRefresh").children("p").find("a.storyLink").attr("href");
                            $(this).attr("href", storyLink);
                            onclick = $(this).siblings(".flyin-contentRefresh").children("p").find("a.storyLink").attr("onclick");
                            $(this).attr("onclick", onclick);
                        });

                        if (hasFocus) {
                            $(currentDiv).closest('.owl-item').css('border', '2px black dotted');
                        }

                        //santitize the content of "R" and "TM" in flyin content
                        //eFlyinContent.santitize();

                        //animate the first story's text in
                        eFlyinContent.init(currentDiv, 250);
                    },
                    afterUpdate: function () {
                        var
                            currentItem = this.owl.currentItem,
                            currentDiv = $(".owl-item").find(".itemRefresh").eq(currentItem),
                            content = currentDiv.find('h1, h2, .flyin-linkRefresh');

                        //If current slide does not have h1, h2, cta link
                        if (content.length == 0) {

                            $(".owl-item").find(".flyin-contentRefresh").eq(currentItem).css("display", "none");
                            $(".jumbotron .owl-themeRefresh .owl-controls").css("margin-top", 0);
                        }
                        eFlyinContent.init(currentDiv, 250);
                    }

                });
            }
        }

        // item detail carousel
        var detailImages = parseInt($("#itemDetailCarousel .item").length);
        if (detailImages >= 2) {
            itemDetailCarousel.owlCarousel({
                navigation: false,
                slideSpeed: 300,
                stopOnHover: true,
                paginationSpeed: 400,
                addClassActive: true,
                singleItem: true,
                mouseDrag: false,
                touchDrag: true,
                items: 5,
                autoPlay: true,
                autoplayTimeout: 1000, 
                responsive: false
            });
        } else {
            $("#itemDetailCarousel").hide();
        }
// ===================================== REFRESH starts ==========================================

        // productCarouselRefresh/dealer slider begin

        var productTile = parseInt($("#productCarouselRefresh .items").length);
        if (productTile >= 6 && productTile <= 30) {
            if (window.innerWidth > 576) {
                $("#productCarouselRefresh").removeClass('no-carousel');
                productCarouselRefresh.owlCarousel({
                    items: 5,
                    itemRetina: [1280,4],
                    itemsDesktop: [1200,4],
                    itemsDesktopSmall: [1024,4],
                    itemsTablet: [992,3],
                    itemsTabletSmall: [768,3],
                    itemsMobile: [576,2],
                    pagination: false,
                    navigation: false,
                    slideSpeed: 300,
                    stopOnHover: true,
                    addClassActive: true,
                    mouseDrag: true,
                    touchDrag: true,
                    autoPlay: false,
                    autoHeight: false,
                    transitionStyle: "fadeUp",
                    responsive: true,
                    responsiveRefreshRate: 200,
                    responsiveBaseWidth: window,
                    beforeMove: function () {
                        
                    },
                    afterMove: function () {
                        if ($('#productCarouselRefresh .owl-item:first').hasClass('active')) {
                            $(".deals-slider-container .slidePrevious").addClass('hidden');
                        } else {
                            $(".deals-slider-container .slidePrevious").removeClass('hidden');
                        }

                        if ($('#productCarouselRefresh > .owl-wrapper-outer > .owl-wrapper > .owl-item:last').hasClass('active')) {
                            $(".deals-slider-container .slideNext").addClass('hidden');
                        } else {
                            $(".deals-slider-container .slideNext").removeClass('hidden');
                        }

                    },
                    afterInit: function () {
                        $(".deals-slider-container .slideNext").removeClass('hidden');
                        var tallest = 0;
                        $("#productCarouselRefresh .dealmerchinfo").each(function () {
                            var thisHeight = $(this).height();
                            if (thisHeight > tallest) {
                                tallest = thisHeight;
                            }
                        });
                        $("#productCarouselRefresh .dealmerchinfo").height(tallest);
                    }
                });

                var dealsNext = $("#productCarouselRefresh").siblings('.slideNext').children('.next-button'),
                dealsPrev = $("#productCarouselRefresh").siblings('.slidePrevious').children('.previous-button');
                dealsNext.on("click touchend", function () {
                    productCarouselRefresh.trigger('owl.next');
                    eGAFunctions.gaEvent('deals-product-nav', 'click', 'Next');
                });
                dealsPrev.on("click touchend", function () {
                    productCarouselRefresh.trigger('owl.prev');
                    eGAFunctions.gaEvent('deals-product-nav', 'click', 'Previous');
                });
             }else{
                $("#productCarouselRefresh").addClass('no-carousel');
             }
        } else {
            $(".deals-slider").hide();
        }

        $('#productCarouselRefresh .gridItemInner').on({
            mouseenter: function () {
                //$(this).find('.product-widgets.condensed').click();
            },
            mouseleave: function () {
                $(this).find('.product-widgets.condensed.expanded').click();
            },
            focusin: function () {
                $(this).find('.product-widgets.condensed').click();
            },
            focusout: function () {
                $(this).find('.product-widgets.condensed.expanded').click();
            }
        });
        // productCarouselRefresh end

        // recentlyViewedCarouselRefresh begin
        var recentlyViewedTile = parseInt($("#recentlyViewedCarouselRefresh .recentitem").length);
        if (recentlyViewedTile >= 1 && recentlyViewedTile <= 20) {
            if (window.innerWidth > 576) {
                $("#recentlyViewedCarouselRefresh").removeClass('no-carousel');
                recentlyViewedCarouselRefresh.owlCarousel({
                    items: 5,
                    itemRetina: [1280,4],
                    itemsDesktop: [1200,4],
                    itemsDesktopSmall: [1024,4],
                    itemsTablet: [992,3],
                    itemsTabletSmall: [768,3],
                    itemsMobile: [576,2],
                    pagination: false,
                    navigation: false,
                    slideSpeed: 300,
                    stopOnHover: true,
                    addClassActive: true,
                    mouseDrag: true,
                    touchDrag: true,
                    autoPlay: false,
                    autoHeight: false,
                    transitionStyle: "fadeUp",
                    responsive: true,
                    responsiveRefreshRate: 200,
                    responsiveBaseWidth: window,
                    beforeMove: function () {

                    },
                    afterMove: function () {
                        if ($('#recentlyViewedCarouselRefresh .owl-item:first').hasClass('active')) {
                            $(".recently-viewed-slider-container .slidePrevious").addClass('hidden');
                        } else {
                            $(".recently-viewed-slider-container .slidePrevious").removeClass('hidden');
                        }

                        if ($('#recentlyViewedCarouselRefresh > .owl-wrapper-outer > .owl-wrapper > .owl-item:last').hasClass('active')) {
                            $(".recently-viewed-slider-container .slideNext").addClass('hidden');
                        } else {
                            $(".recently-viewed-slider-container .slideNext").removeClass('hidden');
                        }
                    },
                    afterInit: function () {
                        $(".recently-viewed-slider-container .slideNext").removeClass('hidden');
                        var tallest = 0;
                        $("#recentlyViewedCarouselRefresh .recmerchinfo").each(function () {
                            var thisHeight = $(this).height();
                            if (thisHeight > tallest) {
                                tallest = thisHeight;
                            }
                        });
                        if ($('#recentlyViewedCarouselRefresh > .owl-wrapper-outer > .owl-wrapper > .owl-item:last').hasClass('active')) {
                            $(".recently-viewed-slider-container .slideNext").addClass('hidden');
                        }
                        $("#recentlyViewedCarouselRefresh .recmerchinfo").height(tallest);

                    }
                });

                if (recentlyViewedTile <= 1 && recentlyViewedTile <= 5) {
                    $("#recentlyViewedCarouselRefresh").siblings('.slideNext').hide();
                    $("#recentlyViewedCarouselRefresh").siblings('.slidePrevious').hide();
                }else{
                    var recentlyViewedNext = $("#recentlyViewedCarouselRefresh").siblings('.slideNext').children('.next-button');
                    var recentlyViewedPrev = $("#recentlyViewedCarouselRefresh").siblings('.slidePrevious').children('.previous-button');
                    recentlyViewedNext.on("click touchend", function () {
                        recentlyViewedCarouselRefresh.trigger('owl.next');
                    });
                    recentlyViewedPrev.on("click touchend", function () {
                        recentlyViewedCarouselRefresh.trigger('owl.prev');
                    });
                }
            } else {
                $("#recentlyViewedCarouselRefresh").addClass('no-carousel');
            }
        }else {
            $(".recently-viewed-slider").hide();
        }
        // recentlyViewedCarouselRefresh end

        //bannerRefresh begin
        $(".dualBannerTiles").css('display', 'none');
        var bannerTile = parseInt($("#bannerRefresh .tile").length);
        if (bannerTile < 1) {
            $(".dualBannerNav").css('display', 'none');
        }else if(bannerTile = 1){
            if (window.innerWidth < 992) {
                $('.banners .tilesContainer').width($(window).width()*2);
            } //tablet potrait
            $('.dualBannerNav').addClass('hidden');
            $('.banners').removeClass('hidden');
        }else{
            if (window.innerWidth < 992) {
                $('.banners .tilesContainer').width($(window).width()*2);
            } //tablet potrait
            
            $('.banners').removeClass('hidden');
            $( ".banners-container" ).scroll(function() {
                if($(this).find('.tile:first').offset().left < -($(window).width()/2)){
                    $('.dualBannerNav .banner1').removeClass('active');
                    $('.dualBannerNav .banner2').addClass('active');
                }else{
                    $('.dualBannerNav .banner1').addClass('active');
                    $('.dualBannerNav .banner2').removeClass('active');
                }
            });
        }

        // on window resize do some magic

        $(window).on('resize', function () {
            setTimeout(function () {
                //console.log(window.innerWidth)
                if (window.innerWidth < 992) {
                    $('.banners .tilesContainer').width($(window).width() * 2);
                } else {
                    $('.banners .tilesContainer').css('width', '100%');
                }
            });
        });


        var $videoSrc;
        $('.bannerVideoModal').click(function () {
            $videoSrc = $(this).data("src");
        });

        // on modal open start video autoplay and not to show related videos.
        $('#bannerVideoModalTarget').on('shown.bs.modal', function (e) {
        $("#video").attr('src', $videoSrc + "?autoplay=1&amp;modestbranding=1&amp");
        })

        // stop video when modal is closed
        $('#bannerVideoModalTarget').on('hide.bs.modal', function (e) {
            $("#video").attr('src', $videoSrc);
        })

        $('#bannerVideoModalTarget span.close').on('click', function () {
            $('#bannerVideoModalTarget').click()
		});
        //bannerRefresh end

        //Feature products
        var tinyTileheight = 0;
        $('.featured-products-container .tile.tiny-tile .featuremerchinfo').each(function () {
            var thisHeight = $(this).height();
            if (thisHeight > tinyTileheight) {
                tinyTileheight = thisHeight;
            }
        });
        $('.featured-products-container .tile.tiny-tile .featuremerchinfo').height(tinyTileheight);
        setTimeout(function(){
        $('.featured-products-container .tile.big-tile').css('min-height',$('.featured-products-container .tilesContainer .tiny-tiles').height()-25); //margin bottom
        },10);
        $('.featured-products-container .slidePrevious .previous-button').click(function(evt){
            var prevSlide = $('.featured-products-container .slidePrevious');
            var nextSlide = $('.featured-products-container .slideNext');
            var tilecontainer = $('.featured-products .tilesContainer');

            $('.featured-products .tilesContainer').animate({scrollLeft: '-=150'},300,'swing');
            nextSlide.removeClass('hidden');

            if(tilecontainer.scrollLeft() <= 150){
                prevSlide.addClass('hidden');
            }
        });

        $('.featured-products-container .slideNext .next-button').click(function(evt){
            var prevSlide = $('.featured-products-container .slidePrevious');
            var nextSlide = $('.featured-products-container .slideNext');
            var tilecontainer = $('.featured-products .tilesContainer');

            $('.featured-products .tilesContainer').animate({scrollLeft: '+=150'},300,'swing');
            prevSlide.removeClass('hidden');

            setTimeout(function () {
                var newScrollLeft = tilecontainer.scrollLeft(),
                    width = tilecontainer.outerWidth(),
                    scrollWidth = tilecontainer.get(0).scrollWidth;
                    
                if (scrollWidth - newScrollLeft == (width)) {
                    nextSlide.addClass('hidden');
                }
            }, 300);
        });
        //Feature products end

// ===================================== REFRESH ends ==========================================

        //view more/less focus persistence
        if (sessionStorage.getItem('activeEle')) {
            var activeEle = JSON.parse(sessionStorage.getItem('activeEle'));
            if (activeEle.selector) {
                $(activeEle.selector).focus();
            }
        };
        $('.pagination.pagination-top .items__view-option').on('blur', function () {
            sessionStorage.removeItem('activeEle');
        });
        $('.pagination.pagination-bottom .items__view-option').on('blur', function () {
            sessionStorage.removeItem('activeEle');
        });
        $('.pagination.pagination-top .items__view-option').on('click', function (e) {
            var activeElePos = {
                selector: '.pagination.pagination-top .items__view-option'
            };
            sessionStorage.setItem("activeEle", JSON.stringify(activeElePos));
        });
        $('.pagination.pagination-bottom .items__view-option').on('click', function (e) {
            var activeElePos = {
                selector: '.pagination.pagination-bottom .items__view-option'
            };
            sessionStorage.setItem("activeEle", JSON.stringify(activeElePos));
        });
        // pagination carousel

        //check to make sure there are enough items to init the carousel -- default fit is 8
        var paginationTop = $(".paginationCarousel").first();
        var paginationTopItems = paginationTop.children(".item").length;
        var paginationCarouselItems = parseInt($(".paginationCarousel .item").length);
        if (paginationTopItems >= 9) {
            paginationCarousel.owlCarousel({
                navigation: false,
                slideSpeed: 300,
                stopOnHover: true,
                paginationSpeed: 400,
                addClassActive: true,
                singleItem: false,
                mouseDrag: true,
                touchDrag: true,
                items: 8,
                itemRetina: false,
                itemsDesktop: false,
                itemsDesktopSmall: false,
                itemsTablet: false,
                itemsTabletSmall: false,
                itemsMobile: false,
                autoPlay: false,
                pagination: false,
                scrollPerPage: true,
                responsive: false,
                afterInit: function () {
                    //check all the items for the active page class
                    $(".paginationCarousel .item").each(function () {
                        if ($(this).children("a").hasClass("activePage")) {
                            snapLocationParent = $(this).parent();
                            snapLocation = $(this).parent().index();
                        }
                    });
                    //jump to the active oage in the carousel
                    this.jumpTo(snapLocation);
                    $(".pageCarouselPlacecard").text(snapLocation + 1);
                    $(".paginationCarousel .item,.paginationCarousel2 .item").each(function (index, element) {
                        if ($(this).parent().hasClass('active')) {
                            $(this).children("a").attr("tabindex", "0");
                        } else {
                            $(this).children("a").attr("tabindex", "-1");
                        }
                    });
                },
                afterMove: function () {
                    //check to see if the active page is within the visible range
                    if (snapLocationParent.hasClass("active")) {
                        $(".pageCarouselPlacecard").fadeOut().animate({
                            left: "2em"
                        });
                    } else {
                        $(".pageCarouselPlacecard").fadeIn().animate({
                            left: "-2em"
                        });
                    }
                    $(".paginationCarousel .item,.paginationCarousel2 .item").each(function (index, element) {
                        if ($(this).parent().hasClass('active')) {
                            $(this).children("a").attr("tabindex", "0");
                        } else {
                            $(this).children("a").attr("tabindex", "-1");
                        }
                    });
                },
                afterDrag: function () {
                    //check to see if the active page is within the visible range
                    if (snapLocationParent.hasClass("active")) {
                        $(".pageCarouselPlacecard").fadeOut().animate({
                            left: "2em"
                        });
                    } else {
                        $(".pageCarouselPlacecard").fadeIn().animate({
                            left: "-2em"
                        });
                    }

                }

            });
            //assign enter key navigation
            $(".pageCarouselNext").on('keydown', function (e) {
                if ((e.which === 13)) {
                    e.preventDefault();
                    paginationCarousel.trigger('owl.next');
                }
            });
            $(".pageCarouselPrev").on('keydown', function (e) {
                if ((e.which === 13)) {
                    e.preventDefault();
                    paginationCarousel.trigger('owl.prev');
                }
            });
            //assign custom main carousel buttons
            $(".pageCarouselNext").on("click touchend", function () {
                paginationCarousel.trigger('owl.next');
            });
            $(".pageCarouselPrev").on("click touchend", function () {
                paginationCarousel.trigger('owl.prev');
            });
        }

        if (paginationTopItems <= 8) { //this needs to match the number of "items: " in the above init
            $(".paginationCarousel").parent(".pageList").addClass("noCarousel");
            $(".paginationCarousel2").parent(".pageList").addClass("noCarousel");
            $(".paginationCarousel .item,.paginationCarousel2 .item").each(function (index, element) {
                $(this).children("a").attr("tabindex", "0");
            });
        }
        if (paginationTopItems === 1) { //hide the pagination if there's just one page
            $(".paginationCarousel").parent(".pageList").parent(".pagination").addClass("singleItem");
            $(".paginationCarousel2").parent(".pageList").parent(".pagination").addClass("singleItem");
            $(".paginationCarousel").hide();
            $(".paginationCarousel2").hide();
            $(".paginationCarousel .item,.paginationCarousel2 .item").each(function (index, element) {
                $(this).children("a").attr("tabindex", "0");
            });
        }
    }
};
/*
Category Card
Content Card
*/

var eCategoryCard = {
    init: function (cardName) {
    	setTimeout(function() {
	        var cardClassName = "."+cardName;
	        var titleMargin = 16; //Left & Right margin 8px 
	        if($(cardClassName).find( cardClassName+"-container" )){
	            var contentCardTile =  $(cardClassName+" .tilesContainer .tile").length;
	            if(contentCardTile > 0) {
	                var tallest = totalCardWidth = 0;
	                $(cardClassName+ " .tilesContainer .tile").each(function () {
	                    var thisHeight = $(this).height();
	                    var thisWeight = $(this).outerWidth();
	                    totalCardWidth = parseFloat(totalCardWidth) + parseFloat(thisWeight) + parseInt(titleMargin);
	                    if (thisHeight > tallest) {
	                        tallest = thisHeight;
	                    }
	                });
	                //$(cardClassName+ " .tilesContainer .tile").height(tallest);
	                $(cardClassName+" .tilesContainer").css("width", totalCardWidth);
	            }
	        }
    	}, 3000);
    }
}

;
/*
eMegaSearch
*/
//global megasearch expand
var eMegaSearch = {
    init: function () {
        var fadeTime = 400;
        var slideTime = 150;
        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");

        if (msie > 0) {
            var ieVer = parseInt(ua.substring(msie + 5, ua.indexOf(".", msie)));
            if (ieVer < 10) {
                $(".megaSearchPlaceholder").addClass("ieFix");
            }
        }

        $('.megaSearch .searchField').on('keyup', function (e) {
            var searchField = $(".megaSearch .searchField");
            var placeholder = $('.ieFix');
            var letters = searchField.val().length;

            if (letters === 0) {
                placeholder.show();
            }
            if (letters > 0) {
                placeholder.hide();
            }
        });

        $(".searchTrigger").on("click touchend", function (e) {
            $(this).addClass("zoomOut");
            $(this).removeClass("zoomIn");

            $(".megaSearchHideTrigger").addClass("zoomIn");

            $(".megaSearch").addClass("slideOut");

            $(".cart").removeClass("zoomIn");
            $(".cart").addClass("zoomOut");

            $(".point-range-trigger").removeClass("zoomOut");
            $(".point-range-trigger").addClass("zoomIn");

            $(".navbar-header").removeClass("zoomIn");
            $(".navbar-header").addClass("zoomOut");

            $(".navbar-toggle").removeClass("zoomIn");
            $(".navbar-toggle").addClass("zoomOut");

            $('.endor-slider').attr('style', 'display:inline-block;');
            $('body').addClass("blackout_fixed");
            $(".blackout_search").fadeIn(fadeTime);
            $(".megaSearch .searchField").focus();

            e.preventDefault();
        });

        $(document).ready(function () {
            $(".searchField").on("keyup keydown", function (e) {
                if (e.which === 27) {
                    $(".megaSearchHideTrigger").click();
                    ResetTabIndex()
                    e.preventDefault();
                }
            });
        });

        $(document).on('submit', 'form#searchForm', function () {
            eActivityIndicator.show();

            setTimeout(function () {
                eActivityIndicator.hide();
            }, 15000);
        });

        //global search hide if user clicks outside of the search area
        $(document).mouseup(function (e) {
            var container = $(".megaSearch, .endorIcon.endor-mag");

            if (!container.is(e.target) && container.has(e.target).length === 0) {
                $(".blackout").fadeOut(fadeTime);
            }
        });

        //handle the searchbar icon to turn it into a button...
        $(".searchIcon").find('.endor-mag').on("click touchend", function (e) {
            $("#searchForm").submit();
        });

        $(".searchIcon .endor_search").keydown(function (e) {
            e.preventDefault();
            if (e.keyCode === 13) {
                $("#searchForm").submit();
            }
        });

        //listen for escape to remove megasearch
        $(".megaSearch .searchField, .point-range-trigger, #searchForm").keydown(function (e) {
            if (e.keyCode === 27) {
                $(".megaSearch .searchField").typeahead('destroy');
                $(".shopFunctions").fadeIn(fadeTime);
                $(".megaSearch").removeClass("slideOut");
                $('#myInput').val('');
                $('#myInput').blur();
                $('#autocomplete-list').remove();

                $('.searchFlyoutRangeContainer').hide();


                $(".megaSearchHideTrigger, .point-range-trigger").removeClass("zoomIn");

                $(".megaSearchHideTrigger, .point-range-trigger").addClass("zoomOut");
                $(".searchTrigger,.navbar-header,.cart").addClass("zoomIn");

                $('body').removeClass("blackout_fixed");
                $(".blackout_search").fadeOut(fadeTime);
                ResetTabIndex();
            } else if (e.keyCode === 13 && this.type == 'text') {
                $("#searchForm").submit();
            }
        });

        $(".megaSearchHideTrigger").on("click touchend", function (e) {
            $(this).addClass("zoomOut");
            $(this).removeClass("zoomIn");

            $(".searchTrigger").addClass("zoomIn");

            $('#myInput').val('');

            $(".megaSearch").removeClass("slideOut");

            $(".point-range-trigger").removeClass("zoomIn");
            $(".point-range-trigger").addClass("zoomOut");

            $(".cart").removeClass("zoomOut");
            $(".cart").addClass("zoomIn");

            $(".navbar-header").removeClass("zoomOut");
            $(".navbar-header").addClass("zoomIn");

            $(".navbar-toggle").removeClass("zoomOut");
            $(".navbar-toggle").addClass("zoomIn");

            $(".blackout_search").fadeOut(fadeTime);
            $('body').removeClass("blackout_fixed");

            $('.searchFlyoutRangeContainer').hide();
            $('#autocomplete-list').remove();

            $('#searchFlyoutRangeFloor').val('');
            $('#searchFlyoutRangeCeiling').val('');
            ResetTabIndex();

            e.preventDefault();
        });

        $('.point-range-trigger').on('click touchend', function (e) {
            var inp_point = $("#myInput").val();
            $("#myInput").val(inp_point);
            $('.searchFlyoutRangeContainer').slideToggle(500);
            if (($('.searchFlyoutRangeContainer').height() == 1)) {
                $('#autocomplete-list').removeClass("slider-closed");
                $('#autocomplete-list').addClass("slider_auto");
            } else if (($('.searchFlyoutRangeContainer').height() == 100)) {
                $('#autocomplete-list').removeClass("slider_auto");
                $('#autocomplete-list').addClass("slider-closed");
            }
        });

        $('.megaSearchHideTrigger').on("focus", function () {
            $('.megaSearchHideTrigger').keydown(function (e) {
                if (e.which === 13) {
                    $('.megaSearchHideTrigger').click();
                } else if (e.shiftKey && e.which === 9) {
                    $('.point-range-trigger.zoomIn')[0].focus();
                } else if (e.which === 9) {
                    var $navItem = $('#navbar').find('.navItem a[href="/ecommerce/shop"]')[0];
                    $navItem.focus();
                }
                e.preventDefault();
            });
        });
        $('.endorIcon.endor-slider').focus(function () {
            if (e.shiftKey && e.which === 9) {
                $('.searchField').focus();
                e.preventDefault();
            }
        });
    }
};;
/*
eStickyHeader
eFancyNav
eFengoNav
eMiscNav
*/
// $('#languageSelectHeader, #languageSelectFooter').on('change', 'select', function() {
    $('#languageSelectHeader, #languageSelectFooter, #languageSelectFooterNav').on('change', function() {
        var biLocaleCodeVal = $(this).find('option:selected').val();
        var url = window.location.href;
            // window.location.assign(url.split('&blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)

        if(window.location.href.indexOf("search?") > -1){
            // window.location.href = "?updatedPageSize=" + pageNumVal;
            window.location.assign(url.split('&blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
        }

         else if (window.location.href.indexOf("/shop") > -1 && window.location.href.indexOf("updatedPageSize") > -1) {
            // window.location = "&blLocaleCode=" + biLocaleCodeVal;
            window.location.assign(url.split('blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
        }

        else if (window.location.href.indexOf("categoryLeftNav") > -1 || window.location.href.indexOf("SearchValue") > -1) {
            // window.location = "&blLocaleCode=" + biLocaleCodeVal;
            window.location.assign(url.split('blLocaleCode')[0] + "&blLocaleCode=" + biLocaleCodeVal)
        }
        // else if (window.location.href.indexOf("/shop") > -1) {
        //     // window.location = "&blLocaleCode=" + biLocaleCodeVal;
        //     window.location.assign(url.split('?blLocaleCode')[0] + "?blLocaleCode=" + biLocaleCodeVal)
        // }

        // else if (window.location.href.indexOf("/shop") > -1 && window.location.href.indexOf("blLocaleCode") > -1) {
        //     // window.location = "&blLocaleCode=" + biLocaleCodeVal;
        //     window.location.assign(url.split('blLocaleCode')[0] + "?=blLocaleCode=" + biLocaleCodeVal)
        // }

        else {
            window.location.assign(url.split('?blLocaleCode')[0] + "?blLocaleCode=" + biLocaleCodeVal)
        }
    });

    $('#page-num').on('change', function() {
		var url = window.location.href;
		var urlParams = new URLSearchParams(window.location.search);
        var paramsortValue = urlParams.get('sort');
        var pageNumVal = $(this).find('option:selected').val();

        if(window.location.href.indexOf("search?") > -1){
            var url = window.location.href;
            window.location.assign(url.split('updated')[0] + "&updatedPageSize=" + pageNumVal)
        }
        else if (window.location.href.indexOf("categoryLeftNav") > -1){
            var url = window.location.href;
            window.location.assign(url.split('updated')[0] + "&updatedPageSize=" + pageNumVal)
        }
        else if (window.location.href.indexOf("SearchValue") > -1 || window.location.href.indexOf("mfg=") > -1 || window.location.href.indexOf("saleOfferProduct=") > -1 ){
            var url = window.location.href;
            window.location.assign(url.split('updated')[0] + "&updatedPageSize=" + pageNumVal)
        }
        else{
			if(paramsortValue && paramsortValue != ''){
				window.location.href = "?updatedPageSize=" + pageNumVal+"&sort="+paramsortValue;
			}else{
				window.location = "?updatedPageSize=" + pageNumVal;	
			}
        }
    });



var eStickyHeader = {
    init: function() { // Handled missing elements in plateau and preventing console error.
        if (!!$('.stickyHeader')[0]) {
            var stickyOffset = parseInt($('.stickyHeader').offset().top, 10);
            var headerHeight = $('.navbar').height();
            var magicNumber = parseInt(stickyOffset + headerHeight * 2, 10);
            var optionBarHeight = $('.header-top').length ? $('.header-top')[0].offsetHeight : 0;
            if ($('.header-top').length) {
                $(window).scroll(function() {
                    var sticky = $('.stickyHeader'),
                        scroll = $(window).scrollTop();
                    var headerHeight = $('.navbar').height();
                    var screenWidth = $( window ).width();
                    var cartPosition = $('.flyout-toggle.grm-icon.shopping-cart').offset();
                    var headerTopHeight = $(".header-top").height();
                    if (scroll >= magicNumber) {
                        $(".header-top").css("marginBottom", headerHeight);
                        $(".home-menu .sub-menu, .cartFlyout.flyout.flying").css("top", headerHeight);
                        $("body").addClass('stuckNav');
                        sticky.addClass('stickOn').animate({
                            top: 0
                        }, 500);
                        if($( ".cartFlyout.flyout" ).hasClass( "cartflyoutopen" )){
                        	if(screenWidth >= 768)
                        	{
                         	    var cartFlyoutHeight = parseInt(headerHeight, 10);
                         	    $(".cartFlyout").css("top", cartFlyoutHeight);
                     			cartPosition = parseInt(screenWidth - cartPosition.left);
                     			cartPosition = parseInt(cartPosition - ((screenWidth/100)*2));
                     			$(".cartFlyout").css("right", cartPosition);
                        	}
                        	else
                        	{
                        		$(".cartFlyout").css("top", 0);
                        	}
                    	   
                    	}
                    } else {
                        $(".header-top").css("marginBottom", 0);
                        $(".home-menu .sub-menu, .cartFlyout.flyout.flying").css("top", '');
                        $("body").removeClass('stuckNav');
                        sticky.removeClass('stickOn');
                        if($( ".cartFlyout.flyout" ).hasClass( "cartflyoutopen" )){
                        	if(screenWidth >= 768)
                        	{
                        	    var cartFlyoutHeight = parseInt((headerHeight + headerTopHeight), 10);
                        	    $(".cartFlyout").css("top", cartFlyoutHeight);
                        	    var cartPosition = $('.flyout-toggle.grm-icon.shopping-cart').offset();
                    			//cartPosition = parseInt(cartPosition.left - 380);
                    			//$(".cartFlyout").css("left", cartPosition);
                        	    cartPosition = parseInt(screenWidth - cartPosition.left);
                        	    cartPosition = parseInt(cartPosition - ((screenWidth/100)*2));
                     			$(".cartFlyout").css("right", cartPosition);
                        	}
                        	else
                        	{
                        		var menuHeight = parseInt((headerHeight + headerTopHeight), 10);
                        		$(".cartFlyout").css("top", menuHeight);
                        	}
                    	}
                    }
                });
            }
        }
    }
};
var eFancyNav = {
    init: function() {

        $("#navbar a.trigger-FullNav").on({
            click: function(e) {
                //hide any other open nav and remove things that say it's opened
                $(".navOpened").hide().removeClass("navOpened");
                $(".fullNav").toggle().addClass("navOpened");

                $("a.sub-menu.base1").focus();


                // JIRA Task ENDOR 1243 - 6-1-17 ----------------- >
                // added same conditional statement
                // to the click event handler as the mouseenter event handler
                // so that the correct CSS gets applied in either case
                // let's change the background according to the main link clicked...
                if ($(this).data("nav-background") !== "none") {
                    triggerBg = $(this).data("nav-background");
                    triggerBgURL = "url(" + triggerBg + ")";
                    $(".fullNav").css('background-image', triggerBgURL);
                }

                thisSource = $(this).attr("id").split("-")[1];

                function fancyNavInit(thisSource) {
                    //de-populate the fancyNav container and sub-containers

                    $(".fullNav .level1 ul").empty();
                    $(".fullNav .level2 ul").remove();
                    $(".fullNav .level2 h2").empty();
                    $(".fullNav .level3 ul").remove();
                    $(".fullNav .level3 h2").empty();

                    //build the string for which nav dump to scrape
                    navSource = $("#navSource-" + thisSource);
                    //now go scrape it
                    $(navSource).each(function(index, element) {
                        //scrape the generated UL nav for menus
                        rootItem = $(this).find("ul.sub-menu li a.sub-menu");
                        secondaryItem = $(this).find("ul.secondary-sub-menu");
                        tertiaryItem = $(this).find("ul.tertiary-sub-menu");
                        // JIRA Task ENDOR 1243 - 6-1-17 ----------------- >
                        // added this conditional so that the overloaded classes
                        // would work on either event
                        // count level 1 items and apply smaller size to text if overloaded
                        rootItems = rootItem.length; // Endor-1109 update to jquery 3.4.1
                        if (rootItems >= 20) {
                            $(".fullNav .level1").addClass("itemOverload");
                        } else {
                            $(".fullNav .level1").removeClass("itemOverload");
                        }

                        //find the root items and deal with them
                        $(rootItem).each(function(index, element) {
                            // count level 1 items and apply an overload class if there are too many
                            // before moving the sub menus all over the place we must first assign connections to all
                            // the secondary and tretiary menus so that their links know what to trigger.
                            var rootNum = index + 1;
                            $(this).addClass("base" + rootNum).siblings("ul.secondary-sub-menu").addClass("secondary" + rootNum).children("li").addClass(
                                function(index, element) {
                                    var subNum = index + 1;
                                    //found out the class of its parent (but don't want that first classname, that came from somewhere else)
                                    var cameFrom = $(this).parent("ul").attr("class").split(' ')[1];
                                    //assign a class to the tertiary
                                    $(this).children("ul.tertiary-sub-menu").addClass(cameFrom + "-sub" + subNum);
                                    //finally, burp the class to the li
                                    return ("sub" + subNum);
                                    $("li.hasSub").attr("tabindex", "0");
                                });

                            //deal with the sub arrows when needed
                            if ($(this).parent("li").hasClass("noChildren")) {
                                //shove it into the level1 div and wrap in li
                                $(this).clone().appendTo(".fullNav .navInner .level1 ul").wrap("<li class='noSub'></li>");
                            } else {
                                //add an arrow
                                $(this).append("<span class='subIndicator'><i class='endorIcon endor-angle-right'></i></span>");
                                //shove it into the level1 div and wrap in li
                                $(this).clone().appendTo(".fullNav .navInner .level1 ul").wrap("<li class='hasSub'></li>");
                            }

                        });

                        //move the secondary-sub-menu ul's to level2
                        $(secondaryItem).each(function(index, element) {
                            //deal with the sub arrows when needed
                            $(this).children("li").children("a").append("<span class='subIndicator'><i class='endorIcon endor-angle-right'></i></span>");
                            $(this).clone().appendTo(".fullNav .navInner .level2");
                        });

                        //move the tertiary-sub-menu ul's to level3
                        $(tertiaryItem).each(function(index, element) {
                            $(this).clone().appendTo(".fullNav .navInner .level3");
                        });

                    }); //navSource each

                    //level1 link handler
                    $(".level1 a.sub-menu").not(".noChildren").on("mouseEnter touchend", function(e) {
                        headline = $(this).text();
                        //figure out the number you clicked on
                        linkSourceRaw = $(this).attr("class"); //.split(" ")[1];
                        //need to ignore if featured is a class...
                        linkSourceNumber = linkSourceRaw.replace(/\D/g, '');
                        linkSourceTriggered = ".level2 .secondary" + linkSourceNumber;
                        // make the link itself show the active state
                        $(".level1 li").removeClass("active");
                        $(this).parent("li").addClass("active");
                        $(".level2 h2").text(headline);
                        $(".level3 h2").text("");
                        //close the open ones and trigger the proper submenu to show
                        $(".level2 ul, .level3 ul").hide();
                        $(linkSourceTriggered).show();
                        // JIRA Task ENDOR 1243 - 6-1-17 ----------------- >
                        // matched conditional statement to mouseenter event here also
                        //it's an a subcategory href so don't let it go anywhere...
                        if ($(this).data("nav-background") !== "none") {
                            newBg1 = $(this).data("nav-background");
                            newBg1URL = "url(" + newBg1 + ")";
                            $(".fullNav").css('background-image', newBg1URL);
                        } else {
                            $(".fullNav").css('background-image', "none");
                        }
                        e.preventDefault();
                    });

                    //level2 link handler
                    $(".level2 .secondary-sub-menu li a").not(".noChildren").on("mouseEnter touchend", function(e) {
                        headline = $(this).text();
                        //figure out the number you clicked on and build the string
                        linkSource1Raw = $(this).parent("li").attr("class");
                        linkSource1Number = linkSource1Raw.replace(/\D/g, '');
                        linkSource2Raw = $(this).parent("li").parent("ul").attr("class").split(" ")[1];
                        linkSource2Number = linkSource2Raw.replace(/\D/g, '');
                        linkTriggered = ".level3 ." + linkSource2Raw + "-" + linkSource1Raw;
                        newBg2 = $(this).data("nav-background");
                        newBg2URL = "url(" + newBg2 + ")";
                        //make the link itself show the active state
                        $(".level2 .secondary-sub-menu li").addClass("active");
                        $(this).parent("li").addClass("active");
                        $(".level3 h2").text(headline);
                        //close the open ones and trigger the proper submenu to show
                        $(".level3 ul").hide();
                        $(linkTriggered).show();
                        // JIRA Task ENDOR 1243 - 6-1-17 ---------------------- >
                        // matched conditional statement to mouseenter event here also
                        // it's an a subcategory href so don't let it go anywhere...
                        if ($(this).data("nav-background") !== "none") {
                            newBg1 = $(this).data("nav-background");
                            newBg1URL = "url(" + newBg1 + ")";
                            $(".fullNav").css('background-image', newBg1URL);
                        } else {
                            $(".fullNav").css('background-image', "none");
                        }
                        e.preventDefault();
                    });

                }
                //now go ahead and run the init when clicked...
                fancyNavInit(thisSource);
                e.preventDefault();
                $(".sub-menu").attr("tabindex", "-1");
                $("li.hasSub").attr("tabindex", "-1");
                //                        $("div.navItem a").attr("tabindex","1" ); //Removed for BIMARKPLC-1103
                $("li.noSub").attr("tabindex", "-1");
                // LEVEL 1st - Using keydown
                $('div.level1').on('focus', 'li', function() {

                    $this = $(this);

                    // LEVEL 1st - Using UP ARROW : 38- DOWN ARROW :40: RIGHT ARROW : 39 ;TAB :9; ESC KEY : 27  ENTE KEY :13
                }).on('keydown', 'li', function(e) {
                    //$this = $(this);
                    if (e.keyCode == 40) {
                        $this.next().focus();
                        console.log($this);
                        return false;
                    } else if (e.keyCode == 38) {
                        $this.prev().focus();

                        return false;
                    } else if (e.keyCode == 13) {
                        var href = $(this).find('a').attr('href');
                        window.location.href = href;

                        return false;
                    } else if (e.keyCode == 9) {

                        $('div.navItem:first').next().focus();
                        $(".navOpened").hide().removeClass("navOpened");
                        $('div.level1').unbind('keydown');
                        $('div.level2').unbind('keydown');
                        $('div.level3').unbind('keydown');

                        return false;
                    } else if (e.keyCode == 27) {
                        $('div.navItem:first').next().focus();
                        $(".navOpened").hide().removeClass("navOpened");
                        return false;
                    }

                    if (e.keyCode == 39) {


                        var current = $(this).first().children().first();
                        if (!$(current).hasClass('noChildren')) {


                            //$(".level1 a.sub-menu").not(".noChildren").on("keypress", function (event) {
                            //$(this).first().not(".noChildren").on("keypress", function (event) {
                            //    if(event.keyCode == 9){
                            headline = $(current).text();
                            //figure out the number you clicked on
                            linkSourceRaw = $(current).attr("class"); //.split(" ")[1];

                            //need to ignore if featured is a class...
                            linkSourceNumber = linkSourceRaw.replace(/\D/g, '');


                            linkSourceTriggered = ".level2 .secondary" + linkSourceNumber;
                            //make the link itself show the active state
                            $(".level1 li").removeClass("active");
                            $(this).parent("li").addClass("active");
                            $(".level2 h2").text(headline);
                            $(".level3 h2").text("");
                            //close the open ones and trigger the proper submenu to show
                            $(".level2 ul, .level3 ul").hide();
                            $(linkSourceTriggered).show();
                            //it's an a subcategory href so don't let it go anywhere...
                            if ($(current).data("nav-background") !== "none") {
                                newBg1 = $(current).data("nav-background");
                                newBg1URL = "url(" + newBg1 + ")";
                                $(".fullNav").css('background-image', newBg1URL);
                            } else {
                                $(".fullNav").css('background-image', "none");
                            }

                            var level2 = $('div.level2');

                            $(level2).find('ul.secondary' + linkSourceNumber).children().each(function(idx, value) {
                                $(this).attr("tabindex", "-1")

                            });

                            var focuselement = $(level2).find('ul.secondary' + linkSourceNumber).find('li').first();
                            // console.log($(level2).find('ul.secondary'+linkSourceNumber).find('li.sub1'))
                            //$(level2).find('ul.secondary'+linkSourceNumber).find('li.sub1').first().css("background-color","yellow");
                            $(focuselement).focus();
                            //e.preventDefault();
                            //          }
                            //});
                        }
                    }
                }).find('li').first().focus();
                //l2
                // LEVEL 2ND  - Using UP ARROW : 38- DOWN ARROW :40: RIGHT ARROW : 39 ;TAB :9; ESC KEY : 27  ENTE KEY :13
                $('div.level2').on('focus', 'li', function() {

                    $this = $(this);
                    //$('div.level2').find('li:first').focus();

                }).on('keydown', 'li', function(e) {

                    if (e.keyCode == 40) {
                        $this.next().focus();

                        return false;
                    } else if (e.keyCode == 38) {
                        $this.prev().focus();

                        return false;
                    } else if (e.keyCode == 13) {
                        var href = $(this).find('a').attr('href');
                        window.location.href = href;

                        return false;
                    } else if (e.keyCode == 9) {
                        //$('div.navItem:first').next().css("background-color","yellow");
                        $('div.navItem:first').next().focus();
                        $(".navOpened").hide().removeClass("navOpened");

                        $('div.level1').unbind('keydown');
                        $('div.level2').unbind('keydown');
                        $('div.level3').unbind('keydown');
                        return false;
                    } else if (e.keyCode == 27) {
                        $('div.navItem:first').next().focus();
                        $(".navOpened").hide().removeClass("navOpened");
                        return false;
                    }


                    if (e.keyCode == 39) {
                        var current = $(this).first().children().first();
                        //console.log($(current));
                        if (!$(current).hasClass('noChildren')) {
                            headline = $(current).text();
                            //figure out the number you clicked on and build the string
                            linkSource1Raw = $(current).parent("li").attr("class");
                            linkSource1Number = linkSource1Raw.replace(/\D/g, '');
                            linkSource2Raw = $(current).parent("li").parent("ul").attr("class").split(" ")[1];
                            linkSource2Number = linkSource2Raw.replace(/\D/g, '');

                            linkTriggered = ".level3 .secondary" + linkSource2Number + "-sub" + linkSource1Number;
                            //make the link itself show the active state
                            $(".level2 .secondary-sub-menu li").removeClass("active");
                            $(current).parent("li").addClass("active");
                            $(".level3 h2").text(headline);
                            //close the open ones and trigger the proper submenu to show
                            $(".level3 ul").hide();
                            $(linkTriggered).show();
                            if ($(current).data("nav-background") !== "none") {
                                newBg2 = $(current).data("nav-background");
                                newBg2URL = "url(" + newBg2 + ")";
                                $(".fullNav").css('background-image', newBg2URL);
                            } else {
                                $(".fullNav").css('background-image', "none");
                            }
                            //console.log('ul.'+linkSource2Raw+'-'+linkSource1Raw);
                            var level3 = $('div.level3');

                            $(level3).find('ul.' + linkSource2Raw + '-' + linkSource1Raw).children().focus();
                            $(level3).find('ul.' + linkSource2Raw + '-' + linkSource1Raw).children().each(function(idx, value) {
                                $(this).attr("tabindex", "-1")

                            });

                            var focuselement = $(level3).find('ul.' + linkSource2Raw + '-' + linkSource1Raw).find('li').first();

                            //$(level2).find('ul.secondary'+linkSourceNumber).find('li.sub1').first().css("background-color","yellow");
                            $(focuselement).focus();
                            //e.preventDefault();
                        }
                    }

                });
                //l3
                // LEVEL 3RD - Using UP ARROW : 38- DOWN ARROW :40: RIGHT ARROW : 39 ;TAB :9; ESC KEY : 27  ENTE KEY :13
                $('div.level3').on('focus', 'li', function() {

                    $this = $(this);
                    //$('div.level3').find('li:first').focus();

                }).on('keydown', 'li', function(e) {

                    if (e.keyCode == 40) {
                        $this.next().focus();

                        return false;
                    } else if (e.keyCode == 38) {
                        $this.prev().focus();

                        return false;
                    } else if (e.keyCode == 13) {
                        var href = $(this).find('a').attr('href');
                        window.location.href = href;

                        return false;
                    } else if (e.keyCode == 9) {
                        //$('div.navItem:first').next().css("background-color","yellow");
                        $('div.navItem:first').next().focus();
                        $(".navOpened").hide().removeClass("navOpened");
                        $('div.level1').unbind('keydown');
                        $('div.level2').unbind('keydown');
                        $('div.level3').unbind('keydown');

                        return false;
                    } else if (e.keyCode == 27) {
                        $('div.navItem:first').next().focus();
                        $(".navOpened").hide().removeClass("navOpened");
                        return false;
                    }

                });
            },

            mouseenter: function(e) {
                //hide any other open nav and remove things that say it's opened
                $(".navOpened").hide().removeClass("navOpened");
                $(".fullNav").toggle().addClass("navOpened");

                //let's change the background according to the main link clicked...
                if ($(this).data("nav-background") !== "none") {
                    triggerBg = $(this).data("nav-background");
                    triggerBgURL = "url(" + triggerBg + ")";
                    $(".fullNav").css('background-image', triggerBgURL);
                }

                thisSource = $(this).attr("id").split("-")[1];

                function fancyNavInit(thisSource) {
                    //de-populate the fancyNav container and sub-containers

                    $(".fullNav .level1 ul").empty();
                    $(".fullNav .level2 ul").remove();
                    $(".fullNav .level2 h2").empty();
                    $(".fullNav .level3 ul").remove();
                    $(".fullNav .level3 h2").empty();
                    $(".fullNav .level4 ul").remove();
                    $(".fullNav .level4 h2").empty();

                    //build the string for which nav dump to scrape
                    navSource = $("#navSource-" + thisSource);
                    //now go scrape it
                    $(navSource).each(function(index, element) {
                        //scrape the generated UL nav for menus
                        rootItem = $(this).find("ul.sub-menu li a.sub-menu");
                        secondaryItem = $(this).find("ul.secondary-sub-menu");
                        tertiaryItem = $(this).find("ul.tertiary-sub-menu");
                        fourthItem = $(this).find("ul.fourth-sub-menu");
                        //console.log(rootItem)
                        //console.log(secondaryItem)
                        //console.log(tertiaryItem)
                        //count level 1 items and apply smaller size to text if overloaded
                        rootItems = rootItem.length; // Endor-1109 update to jquery 3.4.1
                        if (rootItems >= 20) {
                            $(".fullNav .level1").addClass("itemOverload");
                        } else {
                            $(".fullNav .level1").removeClass("itemOverload");
                        }

                        //find the root items and deal with them
                        $(rootItem).each(function(index, element) {
                            // count level 1 items and apply an overload class if there are too many
                            // before moving the sub menus all over the place we must first assign connections to all
                            // the secondary and tretiary menus so that their links know what to trigger.
                            var rootNum = index + 1;
                            $(this).addClass("base" + rootNum).siblings("ul.secondary-sub-menu").addClass("secondary" + rootNum).children("li").addClass(
                                function(index, element) {
                                    var subNum = index + 1;
                                    //found out the class of its parent (but don't want that first classname, that came from somewhere else)
                                    var cameFrom = $(this).parent("ul").attr("class").split(' ')[1];
                                    //assign a class to the tertiary
                                    $(this).children("ul.tertiary-sub-menu").addClass(cameFrom + "-sub" + subNum).children("li").addClass(
                                        function(index, element) {
                                            var tNum = index + 1;
                                            $(this).children("ul.fourth-sub-menu").addClass(cameFrom + "-sub" + subNum + "-t" + tNum)
                                            return (cameFrom + "-sub" + subNum + "-t" + tNum);
                                        }
                                    )
                                    //finally, burp the class to the li
                                    return ("sub" + subNum);
                                });
                            //deal with the sub arrows when needed
                            if ($(this).parent("li").hasClass("noChildren")) {
                                //shove it into the level1 div and wrap in li
                                $(this).clone().appendTo(".fullNav .navInner .level1 ul").wrap("<li class='noSub'></li>");
                            } else {
                                //add an arrow
                                $(this).append("<span class='subIndicator'><i class='endorIcon endor-angle-right'></i></span>");
                                //shove it into the level1 div and wrap in li
                                $(this).clone().appendTo(".fullNav .navInner .level1 ul").wrap("<li class='hasSub'></li>");
                            }



                        });

                        //move the secondary-sub-menu ul's to level2
                        $(secondaryItem).each(function(index, element) {
                            //deal with the sub arrows when needed
                            $(this).children("li").children("a").append("<span class='subIndicator'><i class='endorIcon endor-angle-right'></i></span>");
                            $(this).clone().appendTo(".fullNav .navInner .level2");
                        });

                        //move the tertiary-sub-menu ul's to level3
                        $(tertiaryItem).each(function(index, element) {
                            $(this).children("li").children("a").append("<span class='subIndicator'><i class='endorIcon endor-angle-right'></i></span>");
                            $(this).clone().appendTo(".fullNav .navInner .level3");
                        });

                        //move the fourth-sub-menu ul's to level4
                        $(fourthItem).each(function(index, element) {
                            $(this).clone().appendTo(".fullNav .navInner .level4");
                        });

                    }); //navSource each

                    //level1 link handler
                    $(".level1 a.sub-menu").on("mouseenter touchend", function(e) {
                        headline = $(this).text();
                        //figure out the number you clicked on
                        linkSourceRaw = $(this).attr("class"); //.split(" ")[1];

                        //need to ignore if featured is a class...
                        linkSourceNumber = linkSourceRaw.replace(/\D/g, '');
                        linkSourceTriggered = ".level2 .secondary" + linkSourceNumber;
                        //make the link itself show the active state
                        $(".level1 li").removeClass("active");
                        $(this).parent("li").addClass("active");
                        if (!$(this).hasClass('noChildren')) {
                            $(".level2 h2").text(headline);
                        } else {
                            $(".level2 h2").text("");
                        }
                        //close the open ones and trigger the proper submenu to show
                        $(".level3 h2, .level4 h2").text("");
                        $(".level2 ul, .level3 ul, .level4 ul").hide();
                        $(linkSourceTriggered).show();
                        //it's an a subcategory href so don't let it go anywhere...
                        if ($(this).data("nav-background") !== "none") {
                            newBg1 = $(this).data("nav-background");
                            newBg1URL = "url(" + newBg1 + ")";
                            $(".fullNav").css('background-image', newBg1URL);
                        } else {
                            $(".fullNav").css('background-image', "none");
                        }
                        e.preventDefault();
                    });

                    //level2 link handler
                    $(".level2 .secondary-sub-menu li a").on("mouseenter touchend", function(e) {
                        headline = $(this).text();
                        //figure out the number you clicked on and build the string
                        linkSource1Raw = $(this).parent("li").attr("class").split(" ")[0];
                        linkSource1Number = linkSource1Raw.replace(/\D/g, '');
                        linkSource2Raw = $(this).parent("li").parent("ul").attr("class").split(" ")[1];
                        linkSource2Number = linkSource2Raw.replace(/\D/g, '');
                        linkTriggered = ".level3 ." + linkSource2Raw + "-" + linkSource1Raw;
                        //make the link itself show the active state
                        $(".level2 .secondary-sub-menu li").removeClass("active");
                        $(this).parent("li").addClass("active");
                        if (!$(this).hasClass('noChildren')) {
                            $(".level3 h2").text(headline);
                        } else {
                            $(".level3 h2").text("");
                        }
                        $(".level4 h2").text("");
                        //close the open ones and trigger the proper submenu to show
                        $(".level3 ul, .level4 ul").hide();
                        $(linkTriggered).show();
                        if ($(this).data("nav-background") !== "none") {
                            newBg2 = $(this).data("nav-background");
                            newBg2URL = "url(" + newBg2 + ")";
                            $(".fullNav").css('background-image', newBg2URL);
                        } else {
                            $(".fullNav").css('background-image', "none");
                        }
                        e.preventDefault();
                    });

                    //level3 link handler
                    $(".level3 .tertiary-sub-menu li a").on("mouseenter touchend", function(e) {
                        headline = $(this).text();
                        //figure out the number you clicked on and build the string
                        linkSource1Raw = $(this).parent("li").attr("class").split(" ")[0];
                        linkSource1Number = linkSource1Raw.replace(/\D/g, '');
                        linkSource2Raw = $(this).parent("li").parent("ul").attr("class").split(" ")[1];
                        linkSource2Number = linkSource2Raw.replace(/\D/g, '');
                        linkTriggered = ".level4 ." + linkSource1Raw;
                        //make the link itself show the active state
                        $(".level3 .tertiary-sub-menu li").removeClass("active");
                        $(this).parent("li").addClass("active");
                        if (!$(this).hasClass('noChildren')) {
                            $(".level4 h2").text(headline);
                        } else {
                            $(".level4 h2").text("");
                        }
                        //close the open ones and trigger the proper submenu to show
                        $(".level4 ul").hide();
                        $(linkTriggered).show();
                        if ($(this).data("nav-background") !== "none") {
                            newBg2 = $(this).data("nav-background");
                            newBg2URL = "url(" + newBg2 + ")";
                            $(".fullNav").css('background-image', newBg2URL);
                        } else {
                            $(".fullNav").css('background-image', "none");
                        }
                        e.preventDefault();
                    });

                }
                //now go ahead and run the init when clicked...
                fancyNavInit(thisSource);
                //e.preventDefault();
                $(".sub-menu").attr("tabindex", "-1");
                $("li.hasSub").attr("tabindex", "-1");
                $("li.noSub").attr("tabindex", "-1");
            },
            touchend: function() {},
            mouseleave: function() {
                //reset background images
                //$(".fullNav").css('background-image', "none");
            }

        });
    }
};

var eFengoNav = {
    init: function() {
        $("#navbar a.trigger-MidNav").on({
            click: function(e) {

                //figure out which source we're populating the navInner container with
                thisDump = $(this).siblings("ul.navDump");
                thisSource = $(this).attr("id").split("-")[1];
                navInner = $(".fengoNav .navInner");
                columnClasses = "has1column has2columns has3columns has4columns has5columns";

                //replace the side image with the one from within dump's link, if there's none, hide it.
                fengoImage = $(this).data("nav-background");
                if (fengoImage === "none") {
                    $(".fengoNav .navInner").addClass("noImage");
                    $(".sideImage").hide();
                    $(".sideImage img").attr("src", "").hide();
                } else {
                    //$(".sideImage").hide();
                    $(".sideImage img").attr("src", fengoImage).show();
                }

                //clear out existing fengo nav leftovers
                $(".linkList").remove();

                //process the java generated nav dump
                rootItem = thisDump.find("ul.sub-menu > li");
                secondaryItem = rootItem.children("ul.secondary-sub-menu");
                //we don't care about 3rd level with Fengo style. Toast it just in case it came along for the ride
                tertiaryItem = $(this).find("ul.tertiary-sub-menu").remove();

                //create a DIV for each fengo top level item and toss the entire base LI into the navInner
                rootItem.each(function() {
                    var $clonedRoot = $(this).clone();
                    $("<div/>").addClass("linkList").appendTo(navInner).html($clonedRoot);
                });

                rootItems = rootItem.length; // Endor-1109 update to jquery 3.4.1
                //count the columns and adjust the widths via CSS by adding a class
                if (rootItems === 1) {
                    navInner.removeClass(columnClasses).addClass("has1column");
                }
                if (rootItems === 2) {
                    navInner.removeClass(columnClasses).addClass("has2columns");
                }
                if (rootItems === 3) {
                    navInner.removeClass(columnClasses).addClass("has3columns");
                }
                if (rootItems === 4) {
                    navInner.removeClass(columnClasses).addClass("has4columns");
                }
                if (rootItems > 4) {
                    navInner.removeClass(columnClasses).addClass("has5columns");
                }

                //hide the other navs
                $(".fengoNav").toggle().toggleClass("navOpened");
                e.preventDefault();

                eFengoNav.destroy();

            }, //click function
            mouseenter: function(e) {

                //figure out which source we're populating the navInner container with
                thisDump = $(this).siblings("ul.navDump");
                thisSource = $(this).attr("id").split("-")[1];
                navInner = $(".fengoNav .navInner");
                columnClasses = "has1column has2columns has3columns has4columns has5columns";
                $(".navOpened").hide().removeClass("navOpened");

                //replace the side image with the one from within dump's link, if there's none, hide it.
                fengoImage = $(this).data("nav-background");
                if (fengoImage === "none") {
                    $(".fengoNav .navInner").addClass("noImage");
                    $(".sideImage").hide();
                    $(".sideImage img").attr("src", "").hide();
                } else {
                    $(".sideImage img").attr("src", fengoImage).show();
                }

                //clear out existing fengo nav leftovers
                $(".linkList").remove();

                //process the java generated nav dump
                rootItem = thisDump.find("ul.sub-menu > li");
                secondaryItem = rootItem.children("ul.secondary-sub-menu");
                //we don't care about 3rd level with Fengo style. Toast it just in case it came along for the ride
                tertiaryItem = $(this).find("ul.tertiary-sub-menu").remove();

                //create a DIV for each fengo top level item and toss the entire base LI into the navInner
                rootItem.each(function() {
                    var $clonedRoot = $(this).clone();
                    $("<div/>").addClass("linkList").appendTo(navInner).html($clonedRoot);
                });

                rootItems = rootItem.length; // Endor-1109 update to jquery 3.4.1
                //count the columns and adjust the widths via CSS by adding a class
                if (rootItems === 1) {
                    navInner.removeClass(columnClasses).addClass("has1column");
                }
                if (rootItems === 2) {
                    navInner.removeClass(columnClasses).addClass("has2columns");
                }
                if (rootItems === 3) {
                    navInner.removeClass(columnClasses).addClass("has3columns");
                }
                if (rootItems === 4) {
                    navInner.removeClass(columnClasses).addClass("has4columns");
                }
                if (rootItems > 4) {
                    navInner.removeClass(columnClasses).addClass("has5columns");
                }

                //hide the other navs
                $(".fengoNav").toggle().toggleClass("navOpened");
                $("nav.navbar").addClass("activeNav");
                $(".trigger-MidNav").attr("aria-expanded", true);
                e.preventDefault();

                eFengoNav.destroy();

            } //mouseEnter function
        }); //on

    }, //.init
    destroy: function() {
        //if needed to totally destroy the fengo contents...
    } //destroy
}; //eFengoNav

var eMiscNav = {
    init: function() {
        // nav triggers Simple Nav
        $("#navbar a.trigger-SimpleNav").on({
            click: function(e) {
                $(".navOpened").hide();
                $(".SimpleNav").toggle().addClass("navOpened");
                e.preventDefault();
            },
            mouseenter: function(e) {
                $(".navOpened").hide();
                $(".SimpleNav").toggle().addClass("navOpened");
                $("nav.navbar").addClass("activeNav");
                e.preventDefault();
            },
            keydown: function(e) {
                $(".navOpened").hide();
                $(".SimpleNav").toggle().addClass("navOpened");
                $("nav.navbar").addClass("activeNav");
                e.preventDefault();
            }
        });

        // nav triggers Simple Nav
        $("#navbar a.trigger-NoNav").on({
            click: function(e) {
                $(".navOpened").hide();
            },
            mouseenter: function() {
                $("nav.navbar").removeClass("activeNav");
                $(".navOpened").hide();
            },
            keydown: function(e) {
                $("nav.navbar").removeClass("activeNav");
                $(".navOpened").hide();
            }
        });

        // hide full nav when you're not using it
        $(".fullNav .navInner").on({
            mouseleave: function() {
                $(this).parent("div").hide();
                //change the background back to the default...
                $(this).parent("div").attr("style", "");
            }
        });
        $("#navbar a.trigger-MidNav").on({
            mouseleave: function() {
                $(".trigger-MidNav").attr("aria-expanded", false);
            }
        });

        // hide fengo nav when you're not using it
        $(".fengoNav .navInner").on({
            mouseleave: function() {
                $(".fengoNav").removeClass("navOpened").hide();
                $("nav.navbar").removeClass("activeNav");
            }
        });
        // the simple nav is built differently and thus must be hidden differently.
        $("ul.SimpleNav").on({
            mouseleave: function() {
                $("nav.navbar").removeClass("activeNav");
                $(this).hide();
            }
        });

        $(".navbar > .container > .row").on({
            mouseenter: function() {
                var navsToDismiss = $(".SimpleNav, .navOpened");
                $("nav.navbar").removeClass("activeNav");
                navsToDismiss.hide();
            }
        });
        //handle all nav hiding
        $(".navItem > a").on({
            mouseleave: function() {}
        });
        //mobile hamburger reveals top option bar
        $(".navbar-toggle").on("touchend", function(e) {
            var optionBar = $(".header-top");
            var navBar = $("#navbar");
            optionBar.toggleClass("mobileActive").insertAfter("#navbar");
            navBar.toggleClass("mobileActive");
        });
    }
};

var eLanguageOptions = {
    init: function() {
        var $languageSelect = $(".header-top .languageSelect");
        var $languageSelectWidth = $languageSelect.width();
        var $languageText = $(".languageSelect .languageSelectHeader :selected").text();
        var $languageTextClone = $('<span />').addClass('languageClone').html($languageText);
        $(".header-top").find(".customSelectInner").after('<div class="icon-container preheader-language-arrow-align""><i class="eicon-preheader-language-arrow-down"></i></div>');
        var $globe = $(".header-top .endor-globe");
        $(".languageSelect").prepend($languageTextClone);
        var $languageTextWidth = $(".languageClone").width();
        var $offsetAmount = $languageTextWidth + 22;
        $globe.css("right", $offsetAmount);
    }
};

var eSingleNav = {
    init: function() {
        var $topNavItem = $(".navItem");
        var $menuItems = $topNavItem.children(".navDump");
        //console.log("single nav init: " + $topNavItem.size());
        $menuItems.each(function() {
            var topLink = $(this).siblings("a");
            var subLi = $(this).children("li");
            var topLinkURL = topLink.attr("href");
            if (subLi.text().trim().length < 1) {
                //disable flyout nav for this item
                topLink.unbind("mouseenter");
                topLink.unbind("click");
                //remove link classes and go to URL
                topLink.removeClass("trigger-FullNav");
                topLink.on("click", function(e) {
                    window.location.href = topLinkURL;
                });
            } else {}
        });
    }
};

var eMobileNav = {
    init: function() {}
};;
 /*
eGridItems
eGridSort
eGridItem
eGridInitialResize
eMissingGridImage
*/
 var eGridItems = {
     init: function () {

         // handle text overspill on main headline for grid pages (ignore on huge widths)
         var $mainHeadline = $(".gridContainer h1.hidden-xs");
         var $mainHeadlineSize = $mainHeadline.text().length;
         var $windowWidth = $(window).width();
         if (($mainHeadlineSize > 24) && ($windowWidth <= 1201)) {
             $mainHeadline.css("font-size", "46px");
         } else {}

         // show alternate image on grid list item hover
         $(".gridItemLink").on({
             mouseenter: function () {
                 if($(this).children(".merchItemAlt").length){
                    $(this).children(".merchItem").addClass("hidden");
                    $(this).children(".merchItemAlt").addClass("active");
                 }
             },
             mouseleave: function () {
                if($(this).children(".merchItemAlt").length){
                    $(this).children(".merchItemAlt").removeClass("active");
                    $(this).children(".merchItem").removeClass("hidden");
                }
             }
         });

         //grid color choice item carousel
         $(".colorChoiceItemCarousel").owlCarousel({
             navigation: false,
             pagination: false,
             slideSpeed: 300,
             stopOnHover: true,
             paginationSpeed: 400,
             addClassActive: true,
             singleItem: true,
             mouseDrag: true,
             touchDrag: true,
             afterMove: function () {},
             autoPlay: false,
             afterInit: function () {}
         });
     }
 };

 var eGridSort = {
     // count the number of checked brands
     init: function () {
         $(".brand input").on({
             click: function () {
                 checkedBrands = $(".brands .brand input:checkbox:checked").length;
                 $("h2.brands em.viewingSelected").text(checkedBrands);
                 if (checkedBrands === 0) {
                     $("h2.brands em.viewingAll").show();
                     $("h2.brands em.viewingSelected").hide();

                 }
                 if (checkedBrands >= 1) {
                     $("h2.brands em.viewingAll").hide();
                     $("h2.brands em.viewingSelected").show();
                 }
             }
         });

         // brand checkbox reset
         $(".brands .action .endor-trash").on({
             click: function () {
                 $('.brand input:checkbox').removeAttr('checked');
                 $("h2.brands em.viewingAll").show();
                 $("h2.brands em.viewingSelected").hide();
             }
         });

         $(".brands .brand input:checkbox").click(function () {
             if (this.checked) {
                 $(".activity-indicator").css("display", "block");
             }
             if (!this.checked) {
                 $(".activity-indicator").css("display", "block");
             }
         });

         $(".endor-trash").click(function () {
             $('.brand input:checkbox').removeAttr('checked');
         });


         $(".category .brand input:checkbox").click(function () {
             if (this.checked) {
                 $(".activity-indicator").css("display", "block");
             }
             if (!this.checked) {
                 $(".activity-indicator").css("display", "block");
             }
         });

         // brand filter more button
         $(".filters .brands .moreButton a").on("click touchend", function (e) {
             e.preventDefault();
         });

         // clear all filters
         $(".filters .clearAll").on({
             click: function () {}
         });

         // grid filter accordion
         $(".filters h2").each(function () {
             $(this).on("click touchend", function (e) {
                 var $nearest = $(this).next(".brands.filter");
                 var $categoryNearest = $(this).next(".category.filter");
                 var $icon = $(this).children(".endorIcon");
                 $icon.toggleClass("endor-up-open-big");
                 $icon.toggleClass("endor-down-open-big");
                 $nearest.slideToggle();
                 $categoryNearest.slideToggle();
             });
         });
     }
 };

 //truncate grid text
 var eGridTruncate = {
     init: function () {
         var minimized_elements = $('.merchInfo p.title, .merchInfo p.description');
         var minimize_character_count = 140;

         minimized_elements.each(function () {
             var t = $(this).text();
             if (t.length < minimize_character_count) return;
             $(this).html(t.slice(0, minimize_character_count) + '<span>...</span>');
         });
     }
 };

 //brand filter
 var eTruncateBrandFilter = {
     init: function () {
         $('.auto-open').click();

         var $brandContainer = $('.brands.filter');
         var $brands = $brandContainer.children(".brand");
         var brandNumber = $brands.length;
         var brandCutoff = 4;

         if (brandNumber > brandCutoff) {
             $brands.hide();
             var brandVisible = $brands.slice(0, brandCutoff);
             brandVisible.show();
             var brandsHidden = $brands.not(brandVisible).get();
             $('#brandViewToggle')
                 .show()
                 .on("click touchend", function (e) {
                     e.preventDefault();
                     $(brandsHidden).slideToggle();
                     $('.buttonTextLess').toggle();
                     $('.buttonTextMore').toggle();
                 });
         }
     }
 };


 //Category filter
 var eTruncateCategoryFilter = {
     init: function () {
         $('.auto-open').click();
         var $categoryContainer = $('.category.filter');
         var $category = $categoryContainer.children(".brand");
         var categoryNumber = $category.length;
         var categoryCutoff = 4;

         if (categoryNumber > categoryCutoff) {
             $category.hide();
             var categoryVisible = $category.slice(0, categoryCutoff);
             categoryVisible.show();
             var categoryHidden = $category.not(categoryVisible).get();
             $('#categoryViewToggle')
                 .show()
                 .on("click touchend", function (e) {
                     e.preventDefault();
                     $(categoryHidden).slideToggle();
                     $('.btnCategoryLess').toggle();
                     $('.btnCategoryMore').toggle();
                 });
         }
     }
 };

 //event filter
 var eTruncateEventFilter = {
     init: function () {
         $('.auto-open').click();
         var eventsContainers = $('.filter').not('.location'),
             eventsContainer = $(eventsContainers).find($('.events-container'));
         $.each(eventsContainer, function (i) {
             var events = $(eventsContainer[i]).find('.event'),
                 viewMoreButton = $(eventsContainer[i]).find('.view-more-button-container'),
                 eventNumber = events.length,
                 eventListCutoff = 10;
             if (eventNumber > eventListCutoff) {
                 events.hide();
                 var eventsVisible = events.slice(0, eventListCutoff);
                 eventsVisible.show();
                 var eventsHidden = events.not(eventsVisible).get();
                 $(eventsHidden).addClass('hidden-event');
                 $(viewMoreButton).show();
                 $(viewMoreButton).find('a').append('<span class="hidden-events-total" href="javascript: void(0)">(' + eventsHidden.length + ')</span>');
                 $(viewMoreButton).on('click touchend', function (e) {
                     e.preventDefault();
                     var hiddenEvents = $(e.currentTarget).parents('.events-container').find('.hidden-event'),
                         buttonTextMore = $(e.currentTarget).parents('.events-container').find('.view-more-button-container .moreButton a .buttonTextMore'),
                         buttonTextLess = $(e.currentTarget).parents('.events-container').find('.view-more-button-container .moreButton a .buttonTextLess'),
                         hiddenEventsTotal = $(e.currentTarget).parents('.events-container').find('.hidden-events-total');
                     $(hiddenEvents).slideToggle();
                     $(buttonTextLess).toggle();
                     $(buttonTextMore).toggle();
                     $(hiddenEventsTotal).toggle();
                 });
             }

         });
     }
 };

 //resize grid items
 var eGridItem = {
     resize: function ($gridItem) {
         var
             $wWidth = $(window).width(),
             tallest = 0,
             btnUseAddressHeight = $('.btn-use-address').height();

         $gridItem.each(function () {
             var thisHeight = $(this).height();
             if (thisHeight > tallest) {
                 tallest = thisHeight;
             }
         });
         $gridItem.height(tallest);

         if ($wWidth > 767) {
             //$gridItem.height(tallest + btnUseAddressHeight);

             // center add address link if the address containers get taller
             var addAddressLink = $('.address-head');
             // get the parent container width and subtract half the width of the link
             var addAddressLinkPos = ($(addAddressLink).parents('li').outerHeight() / 2) - 40;
             addAddressLink.css('padding-top', addAddressLinkPos);
         }
         return $gridItem;
     }
 };

 var eGridInitialResize = {
     init: function () {
         var
            $gridItem = $('.grid-item, .first-row-grid-item'),
            $recentGridItem = $('.recently-viewed-slider .merchInfo'),
            $dealsGridItem = $('.deals-slider .merchInfo'),
            $featuresGridItem = $('.featured-products .tiny-tile .merchInfo'),
            $oldHomeFeaturesGridItem = $('#featuredItemsHome .merchInfo'),
            $productGridItem = $('.products-grid-container .merchInfo');
            //$gridImage = $('.gridItemLink img');

            setTimeout(function(){
                $gridItem = eGridItem.resize($gridItem);
                eGridItem.resize($recentGridItem);
                eGridItem.resize($dealsGridItem);
                eGridItem.resize($featuresGridItem);
                eGridItem.resize($oldHomeFeaturesGridItem);
                eGridItem.resize($productGridItem);
            } ,10);

         /* $gridImage.on('load', function () {
             $gridImage = eGridItem.resize($gridImage);
         }); */

         if ($gridItem.length > 0) {
             //resize when we tab
             $('*[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                 $gridItem.css('height', 'auto');
                 //$gridImage.css('height', 'auto');
                 eGridItem.resize($gridItem);
                 //eGridItem.resize($gridImage);
             });
         }
     }
 };

 var eMissingGridImage = {
     init: function () {
         $(".gridItem").each(function () {
             var protocol = window.location.protocol;
             var $checkFor = $(this).find(".gridItemLink");
             var gridPlaceholder = "<a class='gridItemLink' href=''><img class='merchItem' src='" + protocol + "//s7d4.scene7.com/is/image/BIworldwide/no-image-product-card?$GRMProductCard$' alt='merchItem'></a>";
             if (!$checkFor.length) {
                 $(this).find(".gridItemImage").append(gridPlaceholder);
             }else {
                //create a placeholder for the no image image
                //$(this).find(".gridItemImage").append(gridPlaceholder);
                //console.log("fixed that");
            }
         });
     }
 }

 var eEventList = {
     pagination: function () {

     }
 }
;
/*
eDetail
*/
var eDetail = {
    init: function () {
		
        var carouselColorImage = $("#thumbnail-container .product-thumbnail img");
        var colorSwatchLink = $(".detail .colorSelect .swatches .swatch a");
        var colorSwatchLinkItems = $(".detail .colorSelect .swatches .swatch a").length; // Endor-1109 update to jquery 3.4.1
        var sizeSwatchLinkItems = $(".sizeSelect .swatch a").length; // Endor-1109 update to jquery 3.4.1
        var skuGenType1SwatchLinkItems = $(".skuGenType1Select .swatch a").length; // Endor-1109 update to jquery 3.4.1
        var skuGenType2SwatchLinkItems = $(".skuGenType2Select .swatch a").length; // Endor-1109 update to jquery 3.4.1
        var skuGenType3SwatchLinkItems = $(".skuGenType3Select .swatch a").length; // Endor-1109 update to jquery 3.4.1
        var skuGenType4SwatchLinkItems = $(".skuGenType4Select .swatch a").length; // Endor-1109 update to jquery 3.4.1
        var skuGenType5SwatchLinkItems = $(".skuGenType5Select .swatch a").length; // Endor-1109 update to jquery 3.4.1
        var detailPicContainer = $("#thumbnail-container .product-thumbnail");
        var detailPicContainerParent = $("#thumbnail-container .product-thumbnail");
        var detailCarouselPic = $("#thumbnail-container .product-thumbnail img");
        var zoomedItem = $(".pic > img");
        var sceneSevenImagePreset = 'GRMProductDetail';
		
		 $(".product-widgets").click(function() {
            var clk_href = $(this).siblings(".gridItemImage").find("a")[0].href;
            if(clk_href && clk_href != ''){
				window.location.href = clk_href;
			}
		});
		
        $('.back-to-previous').on('click', function (event) {
            $(this).css('pointer-events', 'none');
            window.history.go(-1);
        });
        //detail image carousel thumbnail clicks
        detailCarouselPic.each(function (index, element) {
            $(this).on("click touchend", function (e) {
            	var selectedColorId = $(this)[0].dataset.colorid;
            	if(selectedColorId && e.originalEvent){
            		$(".swatches").find("a[data-colorid='"+selectedColorId+"']").trigger("click");
            	}
            	var thisZoomSource = $(this).attr("src");
                var activeImage = thisZoomSource.replace('GRMThumbnail', sceneSevenImagePreset);
                detailPicContainer.removeClass("activeImage");
                detailPicContainerParent.removeClass("activeItem");
                if ($(this).parent()[0].className === "product-thumbnail") {
                    $(this).parent().addClass("activeImage activeItem");
                } else {
                    $(this).parent(".item").addClass("activeImage").parent(".owl-item").addClass("activeItem");
                }
                zoomedItem.attr("src", activeImage);
                e.preventDefault();
            });
        });

        colorSwatchLink.each(function (i, index, element) {
            var currentColor = $(this).data("colorname");
            var colorSelected = currentColor;
            var thisClass = "colorway-" + colorSelected;
            var triggerPath = ".carousel .item img." + thisClass;
            var colorID = $(this).data("colorid");

            //on swatch click trigger the detail photo carousel to change the detail main image, if that color image exists.
            $(this).on("click", function(e) {
                var detailCarousel = $("#thumbnail-container");
                var swatchMatch = detailCarousel.find("[data-colorid='" + colorID + "']").parents(".product-thumbnail");
                var swatchMatchTrigger = swatchMatch.children("img");
                var swatchMatchIndex = swatchMatch.index();
                var thisParent = $(this).parents(".swatch");

                if (thisParent.hasClass("strikeThrough")) {} else {
                    $(this).closest(".swatches").find(".selected").removeClass("selected");
                    $(this).parent("div").addClass("selected");
                    $(".colorSelect div em").html(currentColor);
                }

                if (swatchMatchIndex >= 0) {
                    //move the carousel slide into view
                    detailCarousel.trigger("owl.goTo", swatchMatchIndex);
                    //click the proper indexed one
                    swatchMatchTrigger.trigger("click");
                }

                e.preventDefault();
            });
        });

        // cart color click
        // $(".cart .colorSelect .swatch a").on({
		// 	click: function (e) {
		// 		var $this = $(this);
		// 		var colorLabelDisplay = $(this).data("colorname").replace(/[_\s]/g, '-').replace(/[^a-z0-9-\s]/gi, '/');
		// 		$(this).parent("div").siblings().removeClass("selected");
		// 		$(this).parent("div").addClass("selected");
		// 		$this.closest('.product_container').find(".colorSelect div em").html(colorLabelDisplay);
		// 	}
        // });
        
        // product detail size click and hover behavior
        $(".sizeSelect .swatch a").on({
            click: function (e) {
                var currentSize = $(this).data("sizename");
                var thisSize = $(this).parents(".swatch");
                if (thisSize.hasClass("strikeThrough")) {} else {
                    $(this).closest(".swatches").find(".selected").removeClass("selected");
                    $(this).parent("div").addClass("selected");
                    $(this).parent("div").siblings().children('a').attr("aria-pressed", "false");
                    $(this).attr("aria-pressed", "true");
                    $(".sizeSelect div em").text(currentSize);
                }
                e.preventDefault();
            },
            touchend: function () {},
            mouseenter: function () {},
            mouseleave: function () {}
        });

        // product detail skuGenType1 click and hover behavior
        $(".skuGenType1Select .swatch a").on({
            click: function (e) {
                var currentSize = $(this).data("skugentype1name");
                var thisSize = $(this).parents(".swatch");
                if (thisSize.hasClass("strikeThrough")) {} else {
                    $(this).closest(".swatches").find(".selected").removeClass("selected");
                    $(this).parent("div").addClass("selected");
                    $(".skuGenType1Select div em").text(currentSize);
                }
                e.preventDefault();
            },
            touchend: function () {},
            mouseenter: function () {},
            mouseleave: function () {}
        });

        // product detail skuGenType2 click and hover behavior
        $(".skuGenType2Select .swatch a").on({
            click: function (e) {
                var currentSize = $(this).data("skugentype2name");
                var thisSize = $(this).parents(".swatch");
                if (thisSize.hasClass("strikeThrough")) {

                } else {
                    $(this).closest(".swatches").find(".selected").removeClass("selected");
                    $(this).parent("div").addClass("selected");
                    $(".skuGenType2Select div em").text(currentSize);
                }
                e.preventDefault();
            },
            touchend: function () {},
            mouseenter: function () {},
            mouseleave: function () {}
        });

        // product detail skuGenType3 click and hover behavior
        $(".skuGenType3Select .swatch a").on({
            click: function (e) {
                var currentSize = $(this).data("skugentype3name");
                var thisSize = $(this).parents(".swatch");
                if (thisSize.hasClass("strikeThrough")) {} else {
                    $(this).closest(".swatches").find(".selected").removeClass("selected");
                    $(this).parent("div").addClass("selected");
                    $(".skuGenType3Select div em").text(currentSize);
                }
                e.preventDefault();
            },
            touchend: function () {},
            mouseenter: function () {},
            mouseleave: function () {}
        });

        // product detail skuGenType4 click and hover behavior
        $(".skuGenType4Select .swatch a").on({
            click: function (e) {
                var currentSize = $(this).data("skugentype4name");
                var thisSize = $(this).parents(".swatch");
                if (thisSize.hasClass("strikeThrough")) {} else {
                    $(this).closest(".swatches").find(".selected").removeClass("selected");
                    $(this).parent("div").addClass("selected");
                    $(".skuGenType4Select div em").text(currentSize);
                }
                e.preventDefault();
            },
            touchend: function () {},
            mouseenter: function () {},
            mouseleave: function () {}
        });

        // product detail skuGenType5 click and hover behavior
        $(".skuGenType5Select .swatch a").on({
            click: function (e) {
                var currentSize = $(this).data("skugentype5name");
                var thisSize = $(this).parents(".swatch");
                if (thisSize.hasClass("strikeThrough")) {} else {
                    $(this).closest(".swatches").find(".selected").removeClass("selected");
                    $(this).parent("div").addClass("selected");
                    $(".skuGenType5Select div em").text(currentSize);
                }
                e.preventDefault();
            },
            touchend: function () {},
            mouseenter: function () {},
            mouseleave: function () {}
        });

        //handle color and size swatch one-option scenarios 
        if (colorSwatchLinkItems < 2) {
            var currentColor = $(".detail .colorSelect .swatches .swatch a").data("colorname");
            $(".detail .colorSelect .swatches .swatch").addClass("selected");
            $(".colorSelect div em").html(currentColor);
        }

        if (sizeSwatchLinkItems < 2) {
            var currentSize = $(".detail .sizeSelect .swatches .swatch a").data("sizename");
            $(".detail .sizeSelect .swatches .swatch").addClass("selected");
            $(".sizeSelect div em").text(currentSize);
        }

        if (skuGenType1SwatchLinkItems < 2) {
            var currentSize = $(".detail .skuGenType1Select .swatches .swatch a").data("skugentype1name");
            $(".detail .skuGenType1Select .swatches .swatch").addClass("selected");
            $(".skuGenType1Select div em").text(currentSize);
        }

        if (skuGenType2SwatchLinkItems < 2) {
            var currentSize = $(".detail .skuGenType2Select .swatches .swatch a").data("skugentype2name");
            $(".detail .skuGenType2Select .swatches .swatch").addClass("selected");
            $(".skuGenType2Select div em").text(currentSize);
        }

        if (skuGenType3SwatchLinkItems < 2) {
            var currentSize = $(".detail .skuGenType3Select .swatches .swatch a").data("skugentype3name");
            $(".detail .skuGenType3Select .swatches .swatch").addClass("selected");
            $(".skuGenType3Select div em").text(currentSize);
        }

        if (skuGenType4SwatchLinkItems < 2) {
            var currentSize = $(".detail .skuGenType4Select .swatches .swatch a").data("skugentype4name");
            $(".detail .skuGenType4Select .swatches .swatch").addClass("selected");
            $(".skuGenType4Select div em").text(currentSize);
        }

        if (skuGenType5SwatchLinkItems < 2) {
            var currentSize = $(".detail .skuGenType5Select .swatches .swatch a").data("skugentype5name");
            $(".detail .skuGenType5Select .swatches .swatch").addClass("selected");
            $(".skuGenType5Select div em").text(currentSize);
        }
        // $('.pic > img').elevateZoom({
        //     scrollZoom: false,
        //     zoomWindowFadeIn: 250,
        //     zoomWindowFadeOut: 250
        // });
        // set initial css to display: none; to avoid seeing the small image
        // for a second before the image swap occurs
        $('.detail .pic').css('display', 'block');
        // initialize the zoom view on the main product image, unless there is no image

        // quantity select controls
        $(".quantityLess").on("click", function (e) {
            var elm = $(this).siblings(".quantityOrdered");
            var val = elm.val();
            if (/^[0-9]+$/.test(val)) {
                val = Number(val) == NaN ? 0 : Number(val);
                // don't let it get below 1
                if (val === 0) {} else {
                    elm.val(val - 1);
                    /*      Added For ExpressCheckout              */
                    $('#ExpressCheckOutForm input[name=quantity]').val(val - 1);
                    $('#totalQuantity').text(val - 1);

                    var price = $('#productPrice').text();
                    price = Number(price) == NaN ? 0 : Number(price);
                    $('#totalPrice').text(price * (val - 1));

                }
            } else {
                elm.val(1);
            }
            e.preventDefault();
        });

        $(".quantityMore").on("click", function (e) {
            var elm = $(this).siblings(".quantityOrdered");
            var val = elm.val();
            if (/^[0-9]+$/.test(val)) {
                val = Number(val) == NaN ? 0 : Number(val);
                elm.val(val + 1);
                /*      Added For ExpressCheckout              */
                $('#ExpressCheckOutForm input[name=quantity]').val(val + 1);
                $('#totalQuantity').text(val + 1);

                var price = $('#productPrice').text();
                price = Number(price) == NaN ? 0 : Number(price);
                $('#totalPrice').text(price * (val + 1));
            } else {
                elm.val(1);
            }
            e.preventDefault();
        });

        $(".quantityOrdered").keypress(function (event) {
            if (event.keyCode == 13) return false;
        });

        // product detail bulk pricing
        $(".bulkDiscount .seeBelow").on("click", function (e) {
            $(".product-detail-tabs .bulk-discount-tab a").click();
            $("html,body").animate({
                scrollTop: $(".product-detail-tabs .bulk-discount-tab").offset().top
            },
            "slow");
            e.preventDefault();
        });

        // product detail description nav content area -
        // identify the pieces and associate them with the nav
        $(".detailDesc .col-md-9").each(function (index, element) {
            descNum = index + 1;
            descId = "itemExtras" + descNum;
            triggerId = "itemExtrasTrigger" + descNum;
            $(this).attr("id", descId);
            if (index > 0) {
                $(this).hide();
            }
        });

        $('.detailDesc .btn-collapse').each(function (index, element) {
            var $this = $(this);
            descNum = index + 1;
            triggerId = "itemExtrasTrigger" + descNum;
            $this.attr("href", '#' + triggerId);
        });

        $(".detailDesc ul li").each(function (index, element) {
            var $this = $(this);
            descNum = index + 1;
            triggerId = "itemExtrasTrigger" + descNum;
            $this.attr("id", triggerId);
        }).children("a").each(function (index, element) {
            $(this).on("click touchend", function (e) {
                descNum = index + 1;
                itemExtrasTarget = "#itemExtras" + descNum;
                $(".detailDesc .col-md-9").hide();
                $(itemExtrasTarget).show();
                $(".detailDescriptionNav li").removeClass("active");
                $(this).parent("li").addClass("active");
                e.preventDefault();
            });
        });

        $('.detailDesc .btn-collapse').each(function (index, element) {
            $(this).on("click touchend", function (e) {
                e.preventDefault();
                descNum = index + 1;
                itemExtrasTarget = "#itemExtras" + descNum;

                if ($(this).hasClass('active')) {
                    $(this).removeClass('active');
                    $(itemExtrasTarget).hide();
                } else {

                    $(itemExtrasTarget).show();
                    $(this).addClass("active");
                }
            });
        });

        //insert quantity text limiter here...
        $(".quantityOrdered").keyup(function () {
            if (this.value != this.value.replace(/[^0-9]/g, '')) {
                this.value = this.value.replace(/[^0-9]/g, '');
            }
            if (this.value.trim().length == 0) {
            	this.value = 1;
            }
        });

        //digitalDownloads expressCheckout
//        $("#chooseDigitalAddToCartForm .expressCheckout").on("click touchend", function (e) {
//            var confirm = $(".expressCheckoutConfirm");
//            confirm.fadeIn();
//            e.preventDefault();
//        });

        $('.productgridtable .bulkprice').click(function(evt){
            var _this = $(this);
            var itemId = _this.data('item_id');
            var modalToShow = $('#'+itemId);
            eGRMModal.open(modalToShow);
        }); 
        
        $('.productgridtable .grm-modal.grm-modal--align').on('click', window, function (event) {
            var modal = $('.productgridtable .grm-modal.grm-modal--align.no-grm-modal--show.grm-modal--show').attr("id");
            var modalToShow = $('#'+modal);
            var modal = document.getElementById(modal);
            if (event.target == modal) {
                eGRMModal.close(modalToShow);
            }
        });
        // $("#addToFavoritesFrmProdDetail").keypress(function(e){
        //     if(e.which == 32 ||  e.which === 13){
        //         $("#addToFavoritesFrmProdDetail").click();
        //         return false;
        //     }
        // });
    },
    realDeal: function () {
        if ($(".detail").hasClass("rdso")) {
           // var $gaText = $("#rdsoText").text();
           // var $ga = $(".globalAlert p span");
           // $ga.text($gaText);
            $("a.btn").addClass("disabled");
            setTimeout(function () {
                $(".globalAlert").slideDown();
            }, 1000)
        }
    },
    flowers: function () {
        var flowerChars = $("#flowersMessage").attr('maxlength');
        var flowerCharsLeft = $("#txt_length_0");
        var maxLength = flowerChars;
        var dangerLength = maxLength / 5;
        $('#flowersMessage').keyup(function () {
            var length = $(this).val().length;
            var length = maxLength - length;
            if (length < dangerLength) {
                flowerCharsLeft.css("color", "red");
            }
            if (length > dangerLength) {
                flowerCharsLeft.css("color", "black");
            }
            flowerCharsLeft.text(length);
        });
    },
    readMore: function() {
		$("#readless_arrow_note, .shadow-in-desc").hide();
        $('#product_description_info').each(function() {
            var contentHeight = this.scrollHeight;
            // get the visible measurements from jQuery object
            var $this = $(this);
            //var visibleHeight = $this.height();
            var visibleHeight = 200; //It's a fixed height so.
            if (visibleHeight < contentHeight) {
                $("#readmore_arrow_note , .shadow-in-desc").show();
            } else if (visibleHeight == contentHeight) {
                $('#product_description_info').css({'height': '250px'});
                $("#readmore_arrow_note , .shadow-in-desc").hide();
            } else {
                // element doesn't have overflow value
                $("#readmore_arrow_note , .shadow-in-desc").hide();
            }
        });
        $("#readmorelink_more, #showmore_expand").click(function() {
            $('#product_description_info').css({"height":"auto","overflow":"auto"});
            $("#readmore_arrow_note , .shadow-in-desc").hide();
            $("#readless_arrow_note").show();
		});
		$("#readmorelink_less, #showless_collapse").click(function() {
            $('#product_description_info').css({"height":"200px","overflow":"hidden"});
            $("#readmore_arrow_note, .shadow-in-desc").show();
            $("#readless_arrow_note").hide();
		});
	}
    
};;
/*
eMakeItRain
eProductOptionsToggle
eCart
 */
var eOptionData = {
	set : function($this, data) {
		if(data.orderItemId){
			var currentForm = $("#prodForm"+data.orderItemId);
		}else{
			var currentForm = $this.closest('.product_container');
		}
		var $options = currentForm.find('.option-value');
		var $optionTypeClicked = currentForm.find('div em');
		var optionType = $optionTypeClicked.data('optiontype');
		var optionLabel = $optionTypeClicked.data('optionlabel'); 
		var optionId = $optionTypeClicked.attr('id');
		var optionNotSelected = [];
		var printSelectedOptions=[];
		var cartItemOptions = [];
		$options.each(function(index, element) {
			var optionType = $(element).data('optiontype');
			var value;
			var printValue;
			var option;
			var field;
			if ("TEXT" == optionType) {
				field = ($(element).attr('id'));
				value = currentForm.find($('input[name="itemAttributes[' + field + ']"]')).val();
				printValue = eOptionData.trim(value,true);
				option = field+'='+eOptionData.trim(value,true);
			} else if ("TEXTAREA" == optionType) {
				field = ($(element).attr('id'));
				value = $(element).next('textarea').val();
				printValue = eOptionData.trim(value,true);
				option = field+'='+eOptionData.trim(value,true);
			} else if ("DECIMAL" == optionType) {
				field = ($(element).attr('id'));
				value = $(element).next('input').val();
				printValue = eOptionData.trim(value,false);
				option = field+'='+eOptionData.trim(value,false);
			} else if ("SELECT" == optionType) {
				var $select = $(element).next('select');
				field = ($(element).attr('id'));
				value = $select.find('option:selected').val();
				printValue = eOptionData.trim(value,false);
				option = field+'='+eOptionData.trim(value,false);
			}  else if ("DATE" == optionType) {
				field = ($(element).attr('id'));
				var value = currentForm.find($('input[name="itemAttributes[' + field + ']"]')).val();
				printValue = eOptionData.trim(value,true);
				option = field+'='+eOptionData.trim(value,true);
			} else {
				field = ($(element).attr('id'));
				value = $(element).text();
				printValue = eOptionData.trim(value,false);
				option = field+'='+eOptionData.trim(value,false);
			}
			if (value && value.trim().length != 0) {
				data['itemAttributes[' + $(element).attr('id') + ']'] = value;
			}
			if(printValue && printValue.trim().length != 0 ){
				printSelectedOptions.push(printValue);
			}
			if(option && option.trim().length != 0 ){
				cartItemOptions.push(option);
			}
		});

		data['currentOptionTypeSelection'] = optionId;
		data['printSelectedOptions'] = printSelectedOptions;
		data['cartItemOptions'] = cartItemOptions;
		return data;
	},
	trim: function(value,isquoted){
		if(value && value.trim().length != 0){
			var trimedValue = value.length > 24 ? value.substring(0,24) + '...':value;
			if(isquoted){
				return '"'+trimedValue+'"';
			}else{
				return trimedValue;
			}
		}
		return value;
	}
};
var eMakeIt = {
	rain : function($btn) {
		if ($('html').hasClass('lt-ie9')) {
			console.log('Product has been added to your cart.');
			return;
		}
		$("body").css("overflow-x", "hidden");

		var cartPosition = $(".flyout-toggle.shopping-cart").offset(), cartSize = $(
				".endorIcon.endor-cart").height(), buttonPosition = $btn
				.offset(), buttonX = buttonPosition.left, buttonY = buttonPosition.top, buttonWidth = $btn
				.width(), onTheMoveAdjustedX = buttonWidth / 2, itemsToClone = 1, $img, duration = itemsToClone;

		if ($btn.hasClass('listProductAddToCart')
				|| $btn.hasClass('addCartButton')) {
			$img = $btn.closest('.gridItemImage').find('img:first-child');
		} else {
			$img = $('.pic img');
		}
		// first, throw one because the timer cuts one off the total number...
		throwOne();

		function throwOne() {
			$img.clone().height('auto').addClass("onTheMove").appendTo("body")
					.css("left", buttonX).css("top", buttonY);

			// spin it
			var interval = null;
			var counter = 0;
			clearInterval(interval);
			interval = setInterval(function() {
				if (counter !== -360) {
					counter -= 1;
					$(".onTheMove").css({
						MozTransform : 'rotate(-' + -counter + 'deg)',
						WebkitTransform : 'rotate(' + -counter + 'deg)',
						transform : 'rotate(' + -counter + 'deg)'
					});
				}
			}, 5);

			// throw it
			$(".onTheMove").css("margin-left", onTheMoveAdjustedX).animate({
				top : cartPosition.top,
				left : cartPosition.left,
				marginLeft : -cartSize * 1,
				width : cartSize * 4,
				height : cartSize * 4
			}, 500);

			$(".onTheMove").animate({
				opacity : 0,
				width : cartSize,
				height : cartSize,
				marginLeft : cartSize / 5
			}, 250, function() {
				$(this).remove();
			});
		}

		// The countdown (actually count UP the items to toss...)
		$.fn.countdown = function(callback, duration, message) {

			var countdown = setInterval(function() {
				if (--duration) {
					throwOne();
				} else {
					clearInterval(countdown);
				}
			}, 300);
		};

		$(document).countdown(validateCartAdd, duration, "s remaining");

		// Function to be called after 5 seconds
		function validateCartAdd() {
			console.log("All done...");
		}
	}
};

var eProductOptionsToggle = {
	init : function() {
		$(".product-options .product__edit-btn").on("click", function() {
			var $thisItemToEdit = $(this).closest(".product-options");
			$thisItemToEdit.find(".optionEditContainer").slideToggle();
			$thisItemToEdit.find(".currentOptions").slideToggle();
			$thisItemToEdit.toggleClass("editing");
		});
		$('.product__save-btn').keydown(function(e) {
			if (!e.shiftKey && e.which == 9) {
				var $thisItemToEdit = $(this).closest(".product-options");
				$thisItemToEdit.find(".optionEditContainer").slideToggle();
				$thisItemToEdit.find(".currentOptions").slideToggle();
				$thisItemToEdit.toggleClass("editing");
			}
		});
		//4394 - commenting this part out to prevent stack overflows when visiting certain pages
//		if($("div.swatch.product-option.selected").length > 0 ) {
//			$("div.swatch.product-option.selected > a").eq(0).click();
//		}
//end 4394

		// cart product options color switcher
		// $(".cart .colorSelect .swatch a").on({
		// 	click: function (e) {
		// 		console.log("am color select")
		// 		var $this = $(this);
		// 		var colorLabelDisplay = $(this).data("colorname").replace(/[_\s]/g, '-').replace(/[^a-z0-9-\s]/gi, '/');
		// 		$(this).parent("div").siblings().removeClass("selected");
		// 		$(this).parent("div").addClass("selected");
		// 		$this.closest('.product_container').find(".colorSelect div em").html(colorLabelDisplay);
		// 	}
		// });
	}
};

var eCart = {
	init : function() {
		$(".inputPromoCode:visible").val('');
		eCart.trashItem();
		eCart.addFromGrid();
		eCart.addFromDetail();
		eCart.addFromFavorites();
		eCart.addFromDetailPlateau();
		//eCart.addFromDigitalDownloads();
		eCart.updateQuantity();
		eCart.updateSKU();
		eCart.addPromo();
		eCart.eventsLinkAllEvents();
		eCart.expressCheckout();
		eCart.expressCheckoutPanel();
		eCart.flyoutPopup();
		eCart.removeCartAlert();
		eCart.updateSKUFromFav();
		eCart.updateSKUFromCart();
		eCart.editFromFav();
		eCart.editFromCart();
		eCart.updateCartList();

		// close modal on clicking outside GL2207
		$(document).on('click', '#add_to_cart_modal', function (evt) {
			if($(evt.target).is($('#add_to_cart_modal'))){
				evt.preventDefault();
				$('#add_to_cart_modal .grm-modal__close').click();
			}
		});

		// view-cart
		$(document).on('click', '#add_to_cart_modal .view-cart', function (evt) {
			evt.preventDefault();
			window.location.href = $(this).attr('url');
			
		// 	console.log('view_cart '+'<Page Title>' +'<Page Location>');
		// 	gtag("event", "view_cart", {
		// 		page_title: '<Page Title>',
		// 		page_location: '<Page Location>'

		// 	});
		});
		
		// continue shopping
		$(document).on('click', '#add_to_cart_modal .continue-shopping', function (evt) {
			evt.preventDefault();
			$('#add_to_cart_modal .grm-modal__close').click();
		});
		
		$('.show_fpd_preview_modal_cart').click(function(evt){
            var _this = $(this);
            var itemId = _this.data('item_id');
            var modalToShow = $('#fpd_preview_modal_cart_'+itemId);
            eGRMModal.open(modalToShow);
        });

		var removedProductName = sessionStorage.getItem('removedProductName');
		if(removedProductName){
			$('.removedProductName').text(removedProductName);
			$('#product-success-alert').removeClass('hidden');
			sessionStorage.removeItem('removedProductName');
		}
	},
	$cartFlyout : $('#cartFlyout'),
	$itemCount : $('#itemCount'),
	removeCartAlert : function(){
		$(document).on('click', '.cartItem .grm-alert .grm-alert-close', function () {
			$(this).parents('.cartItem').removeClass('addedToCart');
		});
	},
	// Customization Preview
	flyoutPopup : function() {
		$('#viewcustomProduct').on("click", function() {
			$('#Modal').addClass('show');
			$('#Modal').removeClass('fade');
			$('.modal-dialog').css('float', 'right');
			$('.modal-dialog').css('margin-top', '170px');
			$('body').css('overflow', 'hidden');
			var imageURL = $('#imageURL').val();
			$('.customProductImage').attr('src', imageURL);
		});
	},
	// Customization Preview
	trashItem : function() {
		$('.cartItemTrash').on(
				'click',
				function(e) {
					e.preventDefault();
					var $this = $(this);
					$('.cartItemTrash').addClass('disabled');
					var csrfToken = $('[name=csrfToken]').val();

					var _data = {
						orderItemId : $this.data('order-item-id'),
						productId : $this.data('product-id'),
						biwProductId : $this.data('biw-product-id'),
						productName : $this.data('product-name'),
						qty : $this.data('qty'),
						csrfToken : csrfToken
					};
					eCart.handleCartItemTrashGA(_data.biwProductId,
							_data.productName, _data.qty);
					eActivityIndicator.show();
					BLC.ajax({
						url : '/ecommerce/cart/removeFromCartFly',
						type : 'POST',
						data : _data,
						eror : function() {
							eActivityIndicator.hide();
						}
					}, function(data) {
						eCart.updateFlyout(data);
						$('#snackbar').removeClass('snackbarErr');
						if($($this).closest('#cartFlyoutInner').find('.cartItemTrash').length){
							$('#snackbar .snackbar-alert-message').html(_data.productName+" "+$("#itemRemovedSuccessCart").html());
							$('#snackbar').addClass('visible');
						}
						$(".gridItem [data-product-id='"+_data.productId+"']").removeClass('carted');
						if ($('#CheckoutCartPage').length > 0) {
							location.reload(true);
						}
						eActivityIndicator.hide();
						$('.cartItemTrash').removeClass('disabled');
					});
				});
	},
	updateFlyout : function(data) {
		eCart.$cartFlyout.html(data);
		var itemCount = $('#cart-item-count').val();
		eCart.$itemCount.text(itemCount);
		if(parseInt(itemCount,10) > 0){
			eCart.$itemCount.removeClass('empty');
		}else{
			eCart.$itemCount.addClass('empty');
		}
		eCart.trashItem();

		return itemCount;
	},

	handleCartItemTrashGA : function(data) {
		//3759 - Remove GA snippet when final conversion to GTAG is complete
		if (typeof ga == 'function') {
			ga('master.ec:addProduct', {
				'id' : data.productId,
				'name' : data.name,
				'quantity' : data.qty,
			});
			ga('master.ec:setAction', 'remove');
			ga('master.send', 'event', 'UX', 'click', 'add to cart');
		}

		// if (typeof gtag == 'function') {
		// 	console.log('Remove from cart 1: handleCartItemTrashGA (data) '+data);
		// 	gtag("event", "remove_from_cart", {
		// 	  items: [
		// 	    {
		// 	      item_id: data.productId,
		// 	      item_name: data.name,
		// 	      quantity: data.qty
		// 	    }
		// 	  ]
		// 	});
		// }
	},
	handleCartItemTrashGA : function(productId, name, qty) {
		//3759 - Remove GA snippet when final conversion to GTAG is complete
		if (typeof ga == 'function') {
			ga('master.ec:addProduct', {
				'id' : productId,
				'name' : name,
				'quantity' : qty,
			});
			ga('master.ec:setAction', 'remove');
			ga('master.send', 'event', 'UX', 'click', 'add to cart');
		}
		// if (typeof gtag == 'function') {
		// 	console.log('Remove from cart 2: handleCartItemTrashGA (productId, name, qty) '+productId+' '+ name+' '+ qty);
		// 	gtag("event", "remove_from_cart", {
		// 	  items: [
		// 	    {
		// 	      item_id: productId,
		// 	      item_name: name,
		// 	      quantity: qty
		// 	    }
		// 	  ]
		// 	});
		// }
	},
	//getQuantityAdded : function(data) {
	//	eCart.$cartFlyout.html(data);
	//	var itemCount = $('.quantityOrdered').val();
	//	return itemCount;
	//},
	getGridQuantityAdded : function(data) {
		eCart.$cartFlyout.html(data);
		var quantityLen = $('.quantityOrdered').length;
		var itemCount = 0;
		for (var i = 0; i < quantityLen; i++) {
			if ($($('.quantityOrdered')[i]).is(':visible')) {
				itemCount += parseInt($('.quantityOrdered')[i].value);
			}
		}
		return itemCount;
	},
	handle500 : function() {
		$("#alertWrapper").html(
				'<div class="alert alert-danger"><p>'
						+ $('#headerServerError').html() + '</p></div>');
	},
	addToCartModalPreview:function(data,from,resEleObj){
		// console.log(from,data);
		if(data.length){
			var addTocartModal = $('#add_to_cart_modal');
			var prodDetailWrapper = addTocartModal.find('.item-details');
			var prodDetailTmpl = addTocartModal.find('.product-item').first().clone();

			prodDetailWrapper.html('');
			for (var index = 0; index < data.length; index++) {
				var prodObj = data[index];
				var prodId = prodObj.hasOwnProperty('tempBIWProductId') ? prodObj.tempBIWProductId:prodObj.id; // grouped product id on sku selection
				if(parseInt(prodObj.quantity,10) > 0){
					if(from != 'P_FAVORITE'){
						var flyoutEle = resEleObj.find("a[data-biw-product-id='"+prodId+"']").parents('.cartItem:last');
						var totalPrice = flyoutEle.find('.item-total-price').text().trim();
						var updatedQty = flyoutEle.find('.itemQuantity').text().trim(); 
					}
					if(from == 'P_FAVORITE'){
						var totalPrice = resEleObj.find('.biw-price').text().trim();
					}
					
					var prodEle = prodDetailTmpl.clone();

					//meta
					prodEle.find('.m-thumbnail').attr("src",prodObj.pImgSrc);
					prodEle.find('.m-product-name').html(prodObj.name);
					prodEle.find('.m-product-id').text(prodId);
					
					//price
					prodEle.find('.m-biw-price').text(totalPrice ? totalPrice : prodObj.pValue);
					prodEle.find('.m-mediaName').text(prodObj.pLabel);
	
					//chips
					var grmChips = prodEle.find('.product-item-options .grm-chips');
					grmChips.html('');
					var qtyChip = '<div class="grm-chip grm-chip--primary">Qty: <span class="m-qty">'+(updatedQty?updatedQty:prodObj.quantity)+'</span></div>';
					grmChips.append(qtyChip);
					var chipTemplate = '<div class="grm-chip grm-chip--primary"><span class="user-text">$value$</span></div>';
					if(prodObj.printSelectedOptions && prodObj.printSelectedOptions.length){
						var options = prodObj.printSelectedOptions;
						options.forEach(function(element){
							var fromChipTempl = chipTemplate;
							fromChipTempl= fromChipTempl.replace('$value$',element);
							grmChips.append(fromChipTempl);
						});
					}
					
					prodDetailWrapper.append(prodEle);
				}
			}

			// $('body').addClass('overflow-hidden');
			// $('#add_to_cart_modal').addClass('grm-modal--show');
			// eGRMModal.open($('#add_to_cart_modal'));
		}
	},
	addFromGrid: function () {
		$('.listProductAddToCart').on('click', function () {
			if ($(this).hasClass('carted') || $(this).hasClass('progress')) {
				return;
			}
			var $button = $(this), $form = $(this).closest('form'), data = BLC.serializeObject($form), productId = $button.data('product-id');
			// prepare data for add to cart modal
			var prodImgSrc = $(this).parents('.gridItemInner').find('.gridItemImage img').attr('src');
			var priceValue = $('.actualPrice').first().text();
			var priceLabel = $('.mediaName').first().text();
			data.pImgSrc = prodImgSrc;
			data.pLabel = priceLabel;
			data.pValue = priceValue;
			var modalData=data;

			eCart.handleGoogleAnalytics(data);
			eActivityIndicator.show();
			$(this).addClass('progress');
			BLC.ajax({
				statusCode: {
					500: function () {
						handle500();
					}
				},
				url: $form.attr('action'),
				type: "POST",
				dataType: 'html',
				data: data
			}, function (data) {
				var $cartItem = data.find("[data-product-id='"+productId+"']").parents('.cartItem');
				$cartItem.addClass('addedToCart');
				//$('.cart-flyout-wrapper').addClass('fixedOn');
				//$('a[href="#cartFlyout"]').click();
				$button.addClass('carted');
				$button.removeClass('progress');
				eCart.updateFlyout(data);
				eActivityIndicator.hide();
				// $('#cart-notification')
				// 	.html(
				// 		'<div class="alert alert-success"><p>'
				// 		+ $(
				// 			'.addedTocartPrdListItem')
				// 			.html()
				// 		+ '</p></div>');

				//eMakeIt.rain($button);
				// $('body').addClass('overflow-hidden');
				// $('#add_to_cart_modal').addClass('grm-modal--show');
				eCart.addToCartModalPreview([modalData],'P_CARD',$(data));
				eGRMModal.open($('#add_to_cart_modal'));
			});
		});

		// FOR Testing
		// $('#myBtn').click(function(){
		// 	$('#myModal').modal('show'); 
		// });

		// When the user clicks on <span> (x), close the modal
			$('.closeSS').click(function(){
				$('#myModal').hide();
			});
		//  FOR Testing


		$(document).on('keypress', '.listProductAddToCart', function (e) {
			if(e.which == 32 ||  e.which === 13){
				e.preventDefault();
                $(this).click();
                return false;
            }
		});
	},
	addFromDetail : function() {
		var fpdProdObj={};
		$('.detail .addToCart').on(
			'click',
		 function (event) {

			// console.log('ADD TO CART GTAG ', event)

			if ($('#sessionDetail').text() != null || $('#sessionDetail').text() != 'null' || $('#sessionDetail').text() != 'undefined' || $('#sessionDetail').text() != '' ){
                var liveId = $('#sessionDetail').text();
                }else{
                    var liveId = 'placeholder'
                }
			
						if($('#skillsoftDetailsProvided').val() === true){
						$('#myModal').hide();
						$('#myModal').modal('hide');
					}
					else if ($('#skillsoftChannel').val() !== null && $('#skillsoftDetailsProvided').val() == 'false') {
						//return	$('#myModal').modal('show');
						//$('#myModal').modal('show');
						$('#myModal').show();
						eActivityIndicator.hide(); 
						return false;
						} 
					else{
						$('#myModal').hide();
						$('#myModal').modal('hide');

					}

					var $this = $(this);
					if($this.hasClass('disabled')){
						return;
					}
					if ($('#main-container').filter(function() {
						return $(this).css('display') === 'block'
					}).length > 0) {
						var product = yourDesigner.getProduct();
						fpdProdObj=product;
						yourDesigner.getProductDataURL(function(dataURL) {
							sendAddCart($this, "{'productInfo':'"
									+ JSON.stringify(product)
									+ "','imageData':'" + dataURL + "'}");
						})
					} else {
						if ($(".purchase-acknowledgement-container")[0]
								&& !$('#purchase-acknowledgement-input').prop(
										'checked')) {
							$('#purchase-acknowledgement').addClass(
									"acknowledgement-alert");
						} else {
							sendAddCart($this, null);
						}
					}
					return false;
				});

		//[GL-1240] - Start
		 $('#purchase-acknowledgement-input').click(function(){
	            if($(this).prop("checked") == true){
	            	$('#purchase-acknowledgement').removeClass(
					"acknowledgement-alert");
	            }
	            else if($(this).prop("checked") == false){
	            	$('#purchase-acknowledgement').addClass(
					"acknowledgement-alert");
	            }
	        });
		//[GL-1240] - Start GL 1620 - changes in alert message
		function sendAddCart($this, customData) {

			$('div#accountBalanceLess').addClass('hidden');
			$('div#errorBrowseID').addClass('hidden');
			$('.grm-alert-danger').addClass('hidden');
			$('.alert-danger').css('display', 'none'); // need this until we remove all old alerts with grm alerts
		
			var
			$form = $this.closest('form'), 
			$errorSpan = $('#error-alert-wrapper'), 
			$successSpan = $('#product-success-alert'), 
			$successSingle = $('#itemAddedSuccess').text(), 
			$zeroItemsAddedError = $('#zeroItemsAddedError').text(),
			$successMultiple = $('#itemsAddedSuccess').text(), 
			$container = $this.closest('.product_container'), 
			$requiredOptions = $container.find('em.required-option-value'), 
			requiredOptionNotSelected = [], 
			data = BLC.serializeObject($form), 
			data = eOptionData.set($this, data), 
			addToCartText = $this.text(), 
			addingText = $this.data('text-adding'), 
			addedText = $this.data('text-added'),
			errorAlertTemplate = $('#product-error-alert');
			modalData=[];
			//product.itemsAddedError.alertError
			eCart.handleGoogleAnalytics(data);
			if (data.gridenable == 'true') {
				var dataItemAttrObj = {};
				for ( var key in data) {
					if (key.indexOf("itemAttributes") != -1) {

						var oKey = key.match(/\[(.*?)\]/)[1];
						var oValue = data[key];
						dataItemAttrObj[oKey] = oValue;
					}
				};
				var $gridform = $('#productAddToCartListForm');
				var formdata = $("#productAddToCartListForm").serializeArray();
				var datatest = {};
				var gidLen = $gridform.find('.productgridtable > tbody > tr').length;
				var modalPreviewData=[];
				var mData = {};
				var tempOptionsarr = [];
				mData.name = data.name;
				mData.pImgSrc = $('.product-primary-img').attr('src') || fpdProdObj[0].thumbnail;

				function normalize(input) {
					var input = input.replace("{", "").replace(
						"}", "").replace(/=/g, ":").split(
							",");
					var result = {};
					input.forEach(function (v) {
						v = v.trim().split(":");
						var temp = {};
						temp[v[0]] = v[1];
						result = Object.assign(temp, result);
					});
					return result;
				};

				$(formdata).each(function (index, obj) {
					var testobj = obj.name;
					if (testobj.match(/\[(.*?)\]/)) {
						for (var index = 0; index < gidLen; index++) {
							var regMatcher = new RegExp('[' + index + ']');
							if (testobj.match(regMatcher)) {
								if (obj.name.indexOf("biwProductId") != -1) {
									mData.id = obj.value;
								}
								if (obj.name.indexOf("quantity") != -1) {
									mData.quantity = obj.value;
								}
								if (obj.name.indexOf("salePrice") != -1) {
									mData.pValue = obj.value;
									mData.pLabel = $('.mediaName').first().text();
								}
								if (obj.name.indexOf("itemAttributes") != -1) {
									tempOptionsarr[index] = Object.assign({}, normalize(obj.value), dataItemAttrObj, tempOptionsarr[index]);
									mData.tempOptionsarr = tempOptionsarr;
								}
								modalPreviewData[index] = Object. assign({}, mData);
							}
						}
					}
					if (testobj.indexOf("itemAttributes") != -1) {
						datatest[obj.name] = Object.assign({}, normalize(obj.value), dataItemAttrObj);
					} else {
						datatest[obj.name] = obj.value;
					}
				});

				for (var index = 0; index < modalPreviewData.length; index++) {
					modalPreviewData[index].printSelectedOptions=[];
					var optionObj = modalPreviewData[index].tempOptionsarr[index];
					for (var optKey in optionObj) {
						if (optionObj.hasOwnProperty(optKey)) {
							modalPreviewData[index].printSelectedOptions.push(optionObj[optKey]);
						}
					}
				}


				if (customData) {
					datatest["customData"] = customData;
				}
				$this.children('.endor-loader').removeClass('hidden');
				$this.children('.btn-text').text(addingText);
				eActivityIndicator.show();
				BLC.ajax(
						{
							url: $gridform.attr('action'),
							type: "POST",
							data: datatest,
							error: function (error) {
								console.log('There was an error: ');
								console.log(error);
								eActivityIndicator.hide();
							}
						}, function (data) {
							eActivityIndicator.hide();
							var dataString = $(data);
							$this.children('.endor-loader').addClass('hidden');
							if (dataString.hasClass('grm-alert grm-alert-danger')) { // looking for any error
								$this.children('.btn-text').text(addToCartText);
								$successSpan.addClass('hidden');
								$errorSpan.html(data);
								$errorSpan.removeClass('hidden');
								eCart.scrollToElement($errorSpan);
								if (requiredOptionNotSelected.length > 0 && $errorSpan.has('#missingRequiredOptions')) {
									$missingRequiredOptionsSpan = $errorSpan.find('#missingRequiredOptions');
									var spanText = "";
									for (i = 0; i < requiredOptionNotSelected.length; i++) {
										spanText = spanText
											+ "<br/><span>"
											+ requiredOptionNotSelected[i]
											+ "</span>";
									}
									$missingRequiredOptionsSpan.html(spanText);
								}
							} else {
								$errorSpan.find('.grm-alert.grm-alert-danger').addClass('hidden');
								//$successSpan.removeClass('hidden');

								// itemCount / updateFlyout is in place to update the cart icon count
								var itemCount = eCart.updateFlyout(data);

								// itemCount is overridden to display quantity added for that product, instead of cart item count in the success message
								itemCount = eCart.getGridQuantityAdded(data);

								if (itemCount === 1) {
									$successSpan.find('.grm-alert-message').html(itemCount + ' '+ $successSingle);
								} else if (itemCount === 0) { // Oh no !! there is an error
									$successSpan.addClass('hidden');
									$errorSpan.html('');
									$errorSpan.removeClass('hidden');
									errorAlertTemplate.clone().appendTo($errorSpan);
									//$errorSpan.find('.grm-alert-message').html(itemCount + '9999 ' + $successSingle)
									$errorSpan.find('.grm-alert-message').html($zeroItemsAddedError);
									$errorSpan.find('.grm-alert-danger').removeClass('hidden'); //Showing manual error
								} else {
									$successSpan.find('.grm-alert-message').html(itemCount + ' '+ $successMultiple);
								}
								//$this.children('.btn-text').text(addedText);
								eCart.updateFlyout(data);
								//eMakeIt.rain($this);
								if(itemCount>0){
									// $('body').addClass('overflow-hidden');
									// $('#add_to_cart_modal').addClass('grm-modal--show');
									eCart.addToCartModalPreview(modalPreviewData,'P_GRID',dataString);
									eGRMModal.open($('#add_to_cart_modal'));
								}
							}
							//eActivityIndicator.show();
							setTimeout(function () {
								$this.children('.btn-text').text(addToCartText);
							}, 3000);
						});
			} else {
				if(data.quantity > 0) {
					if (customData) {
						data["customData"] = customData;
					}
					var isSkillsoftItem = false,
					    isCourseraItem = false;
					if (data.skillsoftChannel != null) {
						isSkillsoftItem = true;
					}
					if (data.courseraProgram != null) {
						isCourseraItem = true;
					}
					$this.children('.endor-loader').removeClass('hidden');
					$this.children('.btn-text').text(addingText);
					$requiredOptions.each(function (index, element) {
						var optionType = $(element).data('optiontype'), optionLabel = $(
							element).data('optionlabel'), value;
						if ("TEXT" == optionType) {
							value = $(element).next('input').val();
							if (value == null || value == "") {
								value = " ";
							}
						} else if ("TEXTAREA" == optionType) {
							value = $(element).next('textarea').val();
						} else if ("DECIMAL" == optionType) {
							value = $(element).next('input').val();
						} else if("DATE" == optionType){
							value = $(element).next('input').val();
						}else {
							value = $(element).text();
						}
						if (value.trim().length == 0) {
							requiredOptionNotSelected.push(optionLabel);
						}
					});
					// check flower values and add highlight error class GL2263
					if($('#isFlowersProduct').length){
						if(!$("[name='itemAttributes[flowersOccasion]']").val()){
							$("[name='itemAttributes[flowersOccasion]']").parents('.grm-form-group').addClass('has-error');
						}else{
							$("[name='itemAttributes[flowersOccasion]']").parents('.grm-form-group').removeClass('has-error');
						}
						if(!$("[name='itemAttributes[flowersMessage]']").val()){
							$("[name='itemAttributes[flowersMessage]']").parents('.grm-form-group').addClass('has-error');
						}else{
							$("[name='itemAttributes[flowersMessage]']").parents('.grm-form-group').removeClass('has-error');
						}
						if(!$("[name='itemAttributes[flowersDeliveryDate]']").val()){
							$("[name='itemAttributes[flowersDeliveryDate]']").parents('.grm-form-group').addClass('has-error');
						}else{
							$("[name='itemAttributes[flowersDeliveryDate]']").parents('.grm-form-group').removeClass('has-error');
						}
						if(!$("[name='itemAttributes[flowersSpecialInstruction]']").val()){
							$("[name='itemAttributes[flowersSpecialInstruction]']").parents('.grm-form-group').addClass('has-error');
						}else{
							$("[name='itemAttributes[flowersSpecialInstruction]']").parents('.grm-form-group').removeClass('has-error');
						}
					}
					// prepare data for add to cart modal
					var prodImgSrc = $('.product-primary-img').attr('src');
					var priceValue = $('.biw-price').first().text();
					var priceLabel = $('.mediaName').first().text();
					data.pImgSrc = prodImgSrc;
					data.pLabel = priceLabel;
					data.pValue=priceValue;
					modalData=data;

					eActivityIndicator.show();
					BLC.ajax(
						{
							url: $form.attr('action'),
							type: "POST",
							data: data,
							error: function () {
								$this.children('.btn-text').text(addToCartText);
								$errorSpan.html('');
								$errorSpan.removeClass('hidden');
								errorAlertTemplate.clone().appendTo($errorSpan);
								$errorSpan.find('.grm-alert-message').html("Something went wrong.");
								$errorSpan.find('.grm-alert-danger').removeClass('hidden'); //Showing manual error
								eActivityIndicator.hide();
							}
						}, function (data) {
							eActivityIndicator.hide();
							var dataString = $(data);
							$this.children('.endor-loader').addClass('hidden');
							if (dataString.hasClass('grm-alert grm-alert-danger')) { // looking for any error
								$this.children('.btn-text').text(addToCartText);
								$successSpan.addClass('hidden');
								$errorSpan.html(data);
								$errorSpan.removeClass('hidden');
								eCart.scrollToElement($errorSpan);
								if (requiredOptionNotSelected.length > 0 && $errorSpan.has('#missingRequiredOptions')) {
									$missingRequiredOptionsSpan = $errorSpan.find('#missingRequiredOptions');
									var spanText = "";
									for (i = 0; i < requiredOptionNotSelected.length; i++) {
										spanText = spanText
											+ "<br/><span>"
											+ requiredOptionNotSelected[i]
											+ "</span>";
									}
									$missingRequiredOptionsSpan.html(spanText);
								}
							} else {
								$errorSpan.find('.grm-alert.grm-alert-danger').addClass('hidden');
								//$successSpan.removeClass('hidden');

								// itemCount / updateFlyout is in place to update the cart icon count
								var itemCount = eCart.updateFlyout(data);

								if (isSkillsoftItem || isCourseraItem) {
									itemCount = 1;
									$container.find("#courseAlreadyInCart").removeClass('hidden');
									$form.find(".detail-button-container").html('');
								} else {
									// itemCount is overridden to display quantity added for that product, instead of cart item count in the success message
									itemCount = eCart.getGridQuantityAdded(data);
								}

								if (itemCount === 1) {
									$successSpan.find('.grm-alert-message').html(itemCount + ' '+ $successSingle);
								} else if (itemCount === 0) { // Oh no !! there is an error
									$successSpan.addClass('hidden');
									$errorSpan.html('');
									$errorSpan.removeClass('hidden');
									errorAlertTemplate.clone().appendTo($errorSpan);
									$errorSpan.find('.grm-alert-message').html(itemCount + ' ' + $successSingle);
									$errorSpan.find('.grm-alert-danger').removeClass('hidden'); //Showing manual error

								} else {
									$successSpan.find('.grm-alert-message').html(itemCount + ' '+ $successMultiple);
								}
								$this.children('.btn-text').text(addedText);
								eCart.updateFlyout(data);
								//eMakeIt.rain($this);
								if(itemCount>0){
									// $('body').addClass('overflow-hidden');
									// $('#add_to_cart_modal').addClass('grm-modal--show');
									eCart.addToCartModalPreview([modalData],'P_DETAIL',dataString);
									eGRMModal.open($('#add_to_cart_modal'));
								}
							}
							setTimeout(function () {
								$this.children('.btn-text').text(addToCartText);
							}, 3000);
						});
				}else{
					$successSpan.addClass('hidden');
					$errorSpan.html('');
					$errorSpan.removeClass('hidden');
					errorAlertTemplate.clone().appendTo($errorSpan);
					$errorSpan.find('.grm-alert-message').html($("#qtyZeroErrMsg").val());
					$errorSpan.find('.grm-alert-danger').removeClass('hidden'); //Showing manual error
				}
			}
		}
	},
	scrollToElement : function(dataNodeId){
			if(dataNodeId && dataNodeId != ''){
     			 var targetElement = $(dataNodeId);
     			 if($(window).width() <= 768) {
					$('html, body').animate({scrollTop : 600},800);
				 }
				 else {
					$('html, body').animate({scrollTop : 200},800);
				}
  			  }
    },
	addFromFavorites : function() {		
		// $('#closeSSFav').click(function () {
		// 	$('#myModal').hide();
		// });
		$('.wish-list .addToCart').on('click', function () {
			var $this = $(this);
			var isFromCart = $this.attr('data-from') && $this.attr('data-from') == 'cart';
			var itemId = $this.attr('data-item');
			var errAlert = $('#error-alert-'+itemId);
			var grmErrorAlertTemplate = $('#product-error-alert');
			grmErrorAlertTemplate.addClass('hidden');
			var currentItem = $this.parents('.wish-list-item');
			var itemEditSaveBtn = currentItem.find('.product__save-btn');
			var priceValue = currentItem.find('.biw-price').first().text();
			var priceLabel = currentItem.find('.mediaName').first().text();
			var pImgSrc = currentItem.find('.product-item-img img').attr('src');
			var skillsoftChannelCheck = currentItem.find('.skillsoftSkuCheck').val();
			var isDetailsCheck = currentItem.find('.skillsoftDetailProvided').val();

			// $('#skillsoftSkuAddCheck').removeClass('skillsoftSkuClassAdd');
			$('.skillsoftSkuClassAdd').removeClass('skillsoftSkuClassAdd');
			if(isDetailsCheck == 'true'){
				$('#myModal').hide();
				$('#myModal').modal('hide');
			}
			else if (skillsoftChannelCheck !== null && isDetailsCheck == 'false') {
				currentItem.find('#skillsoftSkuAddCheck').addClass('skillsoftSkuClassAdd');
				
				//return $('#myModal').modal('show'); 
				$('#myModal').show();
				return false;
				} 
			else{
				$('#myModal').hide();
				$('#myModal').modal('hide');
			}

			var $form = $this.closest('form');
			var data = BLC.serializeObject($form);
			data = eOptionData.set(itemEditSaveBtn, data);
			data.pImgSrc = pImgSrc;
			data.pLabel =priceLabel;
			data.pValue=priceValue;

			eCart.addToCartModalPreview([data],'P_FAVORITE',currentItem);
			eCart.handleGoogleAnalytics(data);

			errAlert.addClass('hidden');
			eActivityIndicator.show();
			var ajaxObj = {
				url: data.endpoint,
				type: "GET",
				error: function () {
					eActivityIndicator.hide();
					grmErrorAlertTemplate.find('.grm-alert-message').html('Something went wrong.');
					grmErrorAlertTemplate.removeClass('hidden');
				}
			};

			BLC.ajax(ajaxObj, function (response) {
				if(response.success){
					var itemCount = parseInt($('#itemCount').text(),10) + response.itemAddedToCart;
					eCart.$itemCount.text(itemCount);
					if(parseInt(itemCount,10) > 0){
						eCart.$itemCount.removeClass('empty');
					}else{
						eCart.$itemCount.addClass('empty');
					}
					var grmModal = $('#add_to_cart_modal');
					if(isFromCart){
						grmModal.find('.grm-modal__close').attr('data-reload',1);
					}
					eGRMModal.open(grmModal);
				}else{
					if(response.error){
						errAlert.find('.grm-alert-message').html(response.errorMessage);
						errAlert.removeClass('hidden');
					}else{
						errAlert.find('.grm-alert-message').html('Something went wrong.');
						errAlert.removeClass('hidden');
					}
					// $("html, body").animate({ scrollTop: 0 }, "slow");
				}
				eActivityIndicator.hide();
			});
		});
	},
	editFromFav : function(){
		$('.wish-list .editItem').on('click', function () {
			eActivityIndicator.show();
			var $this = $(this);
			var selItemId = $this.data("item_id");
			$('#error-alert-'+selItemId).addClass('hidden');
			var selItemModal = $("#edit_item_modal_"+selItemId);
			eGRMModal.open(selItemModal);
			eActivityIndicator.hide();
		});
		$('.wish-list .editable').on('click', function () {
			$(this).parents('.wish-list-item').find('.editItem').click();
		});
	},
	editFromCart: function () {
		$('.my-cart-list .editItem').on('click', function () {
			eActivityIndicator.show();
			var $this = $(this);
			var selItemId = $this.data("item_id");
			var selItemModal = $("#edit_item_modal_"+selItemId);
			eGRMModal.open(selItemModal);
			eActivityIndicator.hide();
		});
		$('.my-cart-list .editable').on('click', function () {
			$(this).parents('.my-cart-list-item').find('.editItem').click();
		});
	},
	handleGoogleAnalytics : function(product) {
		if (typeof ga == 'function') {
			ga('master.ec:addProduct', {
				'id' : product.id,
				'name' : product.name,
				'category' : product.category,
				'brand' : product.brand,
				'variant' : product.variant,
				'price' : product.price,
				'quantity' : product.quantity
			});
			ga('master.ec:setAction', 'add');
			ga('master.send', 'event', 'UX', 'click', 'add to cart');
		}

		if (typeof gtag == 'function') {
			var categories = product.category;
			var	item_category; 
			var	item_category2;
			var	item_category3;
			var	item_category4;
			var	item_category5;				
			var promotion_id = sessionStorage.getItem("promo_id");
            var promotion_name = sessionStorage.getItem("promo_name");  
			if(categories != null)
			{
				categoryTokens =  categories.split('/');
				if(categoryTokens[1] != null)
				{
					item_category =categoryTokens[1];
				}
				if(categoryTokens[2] != null)
				{
					item_category2 =categoryTokens[2];
				}
				if(categoryTokens[3] != null)
				{
					item_category3 =categoryTokens[3];
				}
				if(categoryTokens[4] != null)
				{
					item_category4 =categoryTokens[4];
				}
				if(categoryTokens[5] != null)
				{
					item_category5 =categoryTokens[5];
				}
			}

			// var sortedItems='';
			// if(product.cartItemOptions && product.cartItemOptions.length > 0 ){
			// 	sortArrayDesc(product.cartItemOptions);	//Endor-4289
			// 	sortedItems = '{'+product.cartItemOptions.join(', ')+'}';

			// }
			// function sortArrayDesc(arr) { //Endor-4289
			//   arr.sort(function(b, a) {
			//     // Compare the reversed strings to achieve descending order
			//     return a.localeCompare(b);
			//   });
			// }

			gtag("event", "add_to_cart", {
				'currency': product.currency,
				'value': Number(product.price),
			  	'items': [
			    {
			      'item_id': product.id,
			      'item_name': product.name,
			      'item_brand': product.brand,
			//    'item_variant': sortedItems,
			      'item_variant': product.cartItemOptions.sort(),
			      'item_category': item_category,
			      'item_category2': item_category2,
			      'item_category3': item_category3,
			      'item_category4': item_category4,
			      'item_category5': item_category5,
			      'price': Number(product.price),
			      'quantity':  Number(product.quantity),
				  'promotion_id': promotion_id,
				  'promotion_name': promotion_name
			    }
			  ]
			});
		}
	},
	addFromDetailPlateau : function() {
		$('.detail .addToCartPlateau').on('click', function () {
			var $this = $(this);
			$this.prop("disabled", true);
			if ($('#main-container').filter(function () {
				return $(this).css('display') === 'block'
			}).length > 0) {
				var product = yourDesigner.getProduct();
				yourDesigner.getProductDataURL(function (dataURL) {
					sendAddPlateauCart($this, "{'productInfo':'"
						+ JSON.stringify(product)
						+ "','imageData':'" + dataURL + "'}");
				});
			} else {
				sendAddPlateauCart($this, null);
			}
			return false;
		});

		function sendAddPlateauCart($this, customData) {
			$('div#accountBalanceLess').addClass('hidden');
			$('div#errorBrowseID').addClass('hidden');
			$('.alert-danger').css('display', 'none'); // need this until we remove all old alerts with grm alerts
			$('.grm-alert-danger').addClass('hidden');

			var
			$form = $this.closest('form'), 
			$errorSpan = $('#error-alert-wrapper'), 
			$successSpan = $('.alert.alert-success'), 
			$successSingle = $('#itemAddedSuccess').text(), 
			$successMultiple = $('#itemsAddedSuccess').text(), 
			$container = $this.closest('.product_container'), 
			$requiredOptions = $container.find('em.required-option-value'), 
			requiredOptionNotSelected = [], 
			data = BLC.serializeObject($form), 
			data = eOptionData.set($this, data), 
			addToCartText = $this.text(), 
			addingText = $this.data('text-adding'), 
			addedText = $this.data('text-added'),
			errorAlertTemplate = $('#product-error-alert');

			$this.text(addingText);

			if(data.quantity > 0) {
				if (customData) {
					data["customData"] = customData;
				}

				$requiredOptions.each(function (index, element) {
					var optionType = $(element).data('optiontype'), optionLabel = $(
						element).data('optionlabel'), value;
					if ("TEXT" == optionType) {
						value = $(element).next('input').val();
						if (value == null || value == "") {
							value = " ";
						}
					} else if ("TEXTAREA" == optionType) {
						value = $(element).next('textarea').val();
					} else if ("DECIMAL" == optionType) {
						value = $(element).next('input').val();
					} else {
						value = $(element).text();

					}
					if (value.trim().length == 0) {
						requiredOptionNotSelected.push(optionLabel);
					}
				});
	
				BLC.ajax({
					url : $form.attr('action'),
					type : "POST",
					data : data
				}, function(data) {
					var dataString = $(data);
	
					if (dataString.hasClass('grm-alert grm-alert-danger')) { // looking for any error
						$this.text(addToCartText);
						$errorSpan.html(data);
						$errorSpan.removeClass('hidden');
						eCart.scrollToElement($errorSpan);
						if (requiredOptionNotSelected.length > 0 && $errorSpan.has('#missingRequiredOptions')) {
							$missingRequiredOptionsSpan = $errorSpan.find('#missingRequiredOptions');
							var spanText = "";
							for (i = 0; i < requiredOptionNotSelected.length; i++) {
								spanText = spanText + "<br/><span>"+ requiredOptionNotSelected[i] + "</span>";
							}
							$missingRequiredOptionsSpan.html(spanText);
						}
						$this.prop("disabled", false);
					} else {
						var protocol = window.location.protocol;
	
						var host = window.location.hostname;
						if (host == "localhost") {
							host = host + ":" + window.location.port;
						}
						//$this.attr('disabled', '');
	
						var checkoutURL = protocol + "//" + host
								+ "/ecommerce/checkout";
	
						window.open(checkoutURL, "_self");
					}
				});
			}
			else{
				$errorSpan.html('');
				$errorSpan.removeClass('hidden');
				errorAlertTemplate.clone().appendTo($errorSpan);
				$errorSpan.find('.grm-alert-message').html($("#qtyZeroErrMsg").val());
				$errorSpan.find('.grm-alert-danger').removeClass('hidden'); //Showing manual error
				$this.prop("disabled", false);
			}
		}
	},

	updateQuantity : function() {
		$('.updateCartBtn').click(function () {
			var $this = $(this),
				$form = $(this).closest('form'),
				$editProdOption = $form.find('.optionEditContainer'),
				data = BLC.serializeObject($form),
				data = eOptionData.set($this, data),
				$errorSpan = $('#error-alert-wrapper');

			var qty = parseInt($form.find('.quantityOrdered').val())||0;
			data['quantity'] = qty;

			BLC.ajax(
				{
					url: 'cart/updateQuantity',
					async: true,
					type: 'POST',
					data: data
				},
				function (data) {
					var dataString = $(data);
					if (dataString.hasClass('grm-alert grm-alert-danger')) { // looking for any error
						$errorSpan.html(data);
						$errorSpan.removeClass('hidden');
						eCart.scrollToElement($errorSpan);
					} else {
						document.forms[0].method = "GET";
						document.forms[0].action = "cart";
						document.forms[0].submit();
					}
				});
		});
	},
	checkoutStepOneGA : function(option,event) {
		
		//2413 init
        var currentEnteredPromoCode = '';
         if($('.inputPromoCode:visible').length > 0 ) { 
         	currentEnteredPromoCode = $('.inputPromoCode:visible').val();
         }
        if($(".inputPromoCode") && currentEnteredPromoCode != ''){
			$('.addPromo:visible').trigger('click');
			event.preventDefault(); // Prevent the default action of the link
		}
		//2413 End
		
		if (typeof ga == 'function') {
			ga('master.ec:setAction', 'checkout', {
				'step' : 1
			});
			ga('master.send', 'pageview');
			ga('master.ec:setAction', 'checkout', {
				'step' : 1,
				'option' : option
			});
			ga('master.send', 'event', 'Checkout', 'Option', {
			});
		}

		if (typeof gtag == 'function') {
				var currency;
				var items = [];
				$('.view-cart-list').each(function () {
						var categories = $(this).find(".gtag_view_category").val();
						var	item_category; 
						var	item_category2;
						var	item_category3;
						var	item_category4;
						var	item_category5;				
						if(categories != null)
						{
							categoryTokens =  categories.split('/');
							if(categoryTokens[1] != null)
							{
								item_category =categoryTokens[1];
							}
							if(categoryTokens[2] != null)
							{
								item_category2 =categoryTokens[2];
							}
							if(categoryTokens[3] != null)
							{
								item_category3 =categoryTokens[3];
							}
							if(categoryTokens[4] != null)
							{
								item_category4 =categoryTokens[4];
							}
							if(categoryTokens[5] != null)
							{
								item_category5 =categoryTokens[5];
							}
						}
					var item_id = $(this).find(".gtag_view_item_id").val();
					var quantity = Number($(this).find(".gtag_view_item_qty").val());
					// var has_options = $(this).find(".gtag_view_item_opt").val();
					var item_brand = $(this).find(".gtag_view_item_brand").val();
					var item_name = $(this).find(".gtag_view_item_name").val();
					var price = Number($(this).find(".gtag_view_item_price").val());
					var index = $(this).find(".gtag_index").val();
					var promotion_id = sessionStorage.getItem("promo_id");
                    var promotion_name = sessionStorage.getItem("promo_name");  
					//var item_category = $(this).find(".gtag_view_category").val();
					// var item_variant = $(this).find(".gtag_item_attributes").val();

					var gtagArr = $(this).find(".gtag_item_attributes").val();
					gtagArr = gtagArr.replaceAll("{", '["')
					gtagArr = gtagArr.replaceAll("}", '"]')
					gtagArr = gtagArr.replaceAll(",", '",')
					gtagArr = gtagArr.replaceAll(", ", ', "')
					var item_variant = JSON.parse(gtagArr).sort();


					currency = $(this).find(".gtag_currency").val();
					if(item_id != null)
					{
						items.push({ item_id, quantity, item_name, price, item_brand, item_variant, item_category, item_category2, item_category3, item_category4, item_category5,index, promotion_id, promotion_name });
	                    items.forEach((object, i) => object.index = i + 1);
					}
				});
				gtag("event", "begin_checkout", {			
					'currency': currency ,
					'value': Number($('.cartTotal').val()),
					'items': items
				});


		}
	},


	updateSKU : function() {
		$('.detail .swatch a').on('click', function () {
			$('.detail .addToCart').addClass('disabled');
			//Endor 4144 start
			$('.priceAvailability').val('1');
			//Endor 4144 end
			var $this = $(this), $form = $('#productAddToCartForm'),
				$container = $this.closest('.product_container'),
				$colorOptions = $container.find('.colorSelect .swatch'),
				$sizeOptions = $container.find('.sizeSelect .swatch'),
				$skuGenType1Options = $container.find('.skuGenType1Select .swatch'),
				$skuGenType2Options = $container.find('.skuGenType2Select .swatch'),
				$skuGenType3Options = $container.find('.skuGenType3Select .swatch'),
				$skuGenType4Options = $container.find('.skuGenType4Select .swatch'),
				$skuGenType5Options = $container.find('.skuGenType5Select .swatch'),
				$selectedColor = $container.find('.colorSelect div em'),
				$selectedSize = $container.find('.sizeSelect div em'),
				$selectedSkuGenType1 = $container.find('.skuGenType1Select div em'),
				$selectedSkuGenType2 = $container.find('.skuGenType2Select div em'),
				$selectedSkuGenType3 = $container.find('.skuGenType3Select div em'),
				$selectedSkuGenType4 = $container.find('.skuGenType4Select div em'),
				$selectedSkuGenType5 = $container.find('.skuGenType5Select div em'),
				$optionTypeClicked = $this.closest('.product-option-group').find('div em'),
				optionType = $optionTypeClicked.data('optiontype'),
				optionLabel = $optionTypeClicked.data('optionlabel'),
				data = BLC.serializeObject($form), data = eOptionData.set($this, data);
				
			$('#selectSkuError').addClass('hidden'); //GL 1620
			$('#error-alert-wrapper').find('.grm-alert.grm-alert-danger').addClass('hidden'); //GL 1620
			BLC.ajax({
				url: '/ecommerce/selectSku',
				type: 'POST',
				dataType: 'json',
				data: data,
				error: function (error) {
					$('.detail .addToCart').removeClass('disabled');
					console.log('There was an error: ');
					console.log(error);
				}
			}, function (data) {
				$('.detail .addToCart').removeClass('disabled');
				$('#tempBIWProductId').attr('value', data.biwProductId);
				if (data.skuPriceData == null || data.skuPriceData == '') {
					$(".bulkDiscount").addClass("hidden");
					$(".bulk-discount-tab").addClass("hidden");
				}
				else {
					$(".bulkDiscount").removeClass("hidden");
					$(".bulk-discount-tab").removeClass("hidden");
					$("#bulk-discount-section tbody").html("");
					var htmlData = '';
					$.each(data.skuPriceData, function (index, element) {
						htmlData += '<tr><td>' + element.minQuantity + '</td><td><span>' + element.salePrice + '</span> <span>' + data.bulkpricingUnit + '</span></td></tr>';
					});
					$("#bulk-discount-section .bulk tbody").html(htmlData);
				}
				var selectedTabClass = $('.product-detail-tabs ul').find("[tabindex=0]").parent().prop('className');
				if (selectedTabClass && selectedTabClass.indexOf("hidden") > 0) {
					$(".product-detail-tabs .description-tab a").click();
				}
				else {
					$("." + selectedTabClass + " a").click();
				}
				if (data.update === true) {
					$('.priceDetails .productId em').html(data.biwProductId);
					$('.mobileProductHeader .productName').html(data.biwProductName); 
					$('#prop-65-section .prop65-warning').html(data.prop65Warning);
					$('.priceDetails .itemPrice .biw-price').html(data.salePrice);
					if (data.isOnSale === true) {
						$('.priceDetails .itemPrice .ps-price').html(data.psPrice);
						$('.priceDetails .itemPrice .default-sku-price').removeClass("hidden");
					} else {
						$('.priceDetails .itemPrice .ps-price').html("");
						$('.priceDetails .itemPrice .default-sku-price').addClass("hidden");
					}
					$('#productAddToCartForm .stockRemaining strong').html(data.quantityAvailable);
					$('#productAddToCartForm .stockRemaining span').html(data.inStockText);
					//$('.product-detail-tabs .alert-description').html(data.alertDescription);
					if (data.alertDescription) {
						$('#alert-description-container').removeClass('hidden');
						$('#alert-description-container .grm-alert-message').html(data.alertDescription);
					} else {
						$('#alert-description-container').addClass('hidden');
					}
					$('.product-detail-tabs .long-description').html(data.longDescription);
					$('.product-detail-tabs .details-description').html(data.detailsDescription);
					$('.detailDesc .spex-data').html(data.spexData);
					$('.shippingSelect p').html(data.estimatedShipDate);
					if ($colorOptions.length > 0) {
						$colorOptions.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($sizeOptions.length > 0) {
						$sizeOptions.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType1Options.length > 0) {
						$skuGenType1Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType2Options.length > 0) {
						$skuGenType3Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType3Options.length > 0) {
						$skuGenType3Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType4Options.length > 0) {
						$skuGenType4Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType5Options.length > 0) {
						$skuGenType5Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
				}
				if (data.updateAvailableOptions === true) {

					// Allow more than 2 SKU Generating Product Options
					if (optionType === 'COLOR' || optionType === 'SIZE' || optionType === 'SKUGENTYPE1' || optionType === 'SKUGENTYPE2' || optionType === 'SKUGENTYPE3' || optionType === 'SKUGENTYPE4' || optionType === 'SKUGENTYPE5') {
						if ($colorOptions.length > 0) {
							$colorOptions.each(function (index, element) {
								var colorName = "" + $(element).children().data('colorname'),
									colorAvailable = false;
								for (i = 0; i < data.availableColors.length; i++) {
									if (colorName === data.availableColors[i]) {
										colorAvailable = true;
									}
								}
								if (colorAvailable) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedColor.html() === colorName) {
										$selectedColor.html("");
									}
								}
							});
						}
						if ($sizeOptions.length > 0) {
							$sizeOptions.each(function (index, element) {
								var sizeName = "" + $(element).children().data('sizename'),
									sizeAvailable = false;
								for (i = 0; i < data.availableSizes.length; i++) {
									if (sizeName === data.availableSizes[i]) {
										sizeAvailable = true;
									}
								}
								if (sizeAvailable) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSize.html() === sizeName) {
										$selectedSize.html("");
									}
								}
							});
						}
						if ($skuGenType1Options.length > 0) {
							$skuGenType1Options.each(function (index, element) {
								var skuGenType1Name = "" + $(element).children().data('skugentype1name'),
									skuGenType1Available = false;
								for (i = 0; i < data.availableSkuGenType1s.length; i++) {
									if (skuGenType1Name === data.availableSkuGenType1s[i]) {
										skuGenType1Available = true;
									}
								}
								if (skuGenType1Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType1.html() === skuGenType1Name) {
										$selectedSkuGenType1.html("");
									}
								}
							});
						}
						if ($skuGenType2Options.length > 0) {
							$skuGenType2Options.each(function (index, element) {
								var skuGenType2Name = "" + $(element).children().data('skugentype2name'),
									skuGenType2Available = false;
								for (i = 0; i < data.availableSkuGenType2s.length; i++) {
									if (skuGenType2Name === data.availableSkuGenType2s[i]) {
										skuGenType2Available = true;
									}
								}
								if (skuGenType2Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType2.html() === skuGenType2Name) {
										$selectedSkuGenType2.html("");
									}
								}
							});
						}
						if ($skuGenType3Options.length > 0) {
							$skuGenType3Options.each(function (index, element) {
								var skuGenType3Name = "" + $(element).children().data('skugentype3name'),
									skuGenType3Available = false;
								for (i = 0; i < data.availableSkuGenType3s.length; i++) {
									if (skuGenType3Name === data.availableSkuGenType3s[i]) {
										skuGenType3Available = true;
									}
								}
								if (skuGenType3Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType3.html() === skuGenType3Name) {
										$selectedSkuGenType3.html("");
									}
								}
							});
						}
						if ($skuGenType4Options.length > 0) {
							$skuGenType4Options.each(function (index, element) {
								var skuGenType4Name = "" + $(element).children().data('skugentype4name'),
									skuGenType4Available = false;
								for (i = 0; i < data.availableSkuGenType4s.length; i++) {
									if (skuGenType4Name === data.availableSkuGenType4s[i]) {
										skuGenType4Available = true;
									}
								}
								if (skuGenType4Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType4.html() === skuGenType4Name) {
										$selectedSkuGenType4.html("");
									}
								}
							});
						}
						if ($skuGenType5Options.length > 0) {
							$skuGenType5Options.each(function (index, element) {
								var skuGenType5Name = "" + $(element).children().data('skugentype5name'),
									skuGenType5Available = false;
								for (i = 0; i < data.availableSkuGenType5s.length; i++) {
									if (skuGenType5Name === data.availableSkuGenType5s[i]) {
										skuGenType5Available = true;
									}
								}
								if (skuGenType5Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType5.html() === skuGenType5Name) {
										$selectedSkuGenType5.html("");
									}
								}
							});
						}
					}
				}
				if (data.priceNotAvailable === true) {
					if ($colorOptions.length > 0) {
						$this.removeClass("selected");
						$selectedColor.html("");
					}
					if ($sizeOptions.length > 0) {
						$this.removeClass("selected");
						$selectedSize.html("");
					}
					$('#selectSkuError').removeClass('hidden'); //GL 1620
					$('#selectSkuErrorMessage').text(data.priceNotAvailableMsg);
					//Endor 4144 start add to cart button disabled if price is not available
					$('.detail .addToCart').addClass('disabled');
					$('.priceAvailability').val('0');
					//Endor 4144 end
				}
			});
		});
	},
	updateSKUFromFav: function(){

		$(".whishlist .colorSelect .swatch a").on({
			click: function (e) {
				var $this = $(this);
				var colorLabelDisplay = $this.data("colorname").replace(/[_\s]/g, '-').replace(/[^a-z0-9-\s]/gi, '/');
				var thisParent = $this.parents(".swatch");
                if (thisParent.hasClass("strikeThrough")) {} else {
                    $this.closest(".swatches").find(".selected").removeClass("selected");
                    $this.parent("div").addClass("selected");
                    $(".colorSelect div em").html(colorLabelDisplay);
                }
			}
		});

		$('.whishlist .swatch a').on('click', function () {

			var $this = $(this);
			var $form = $this.closest('form');
			var $container = $this.closest('.product_container');
			var $editModal = $this.closest('.fav_edit_modal');

			var $colorOptions = $container.find('.colorSelect .swatch');
			var $sizeOptions = $container.find('.sizeSelect .swatch');
			var $skuGenType1Options = $container.find('.skuGenType1Select .swatch');
			var $skuGenType2Options = $container.find('.skuGenType2Select .swatch');
			var $skuGenType3Options = $container.find('.skuGenType3Select .swatch');
			var $skuGenType4Options = $container.find('.skuGenType4Select .swatch');
			var $skuGenType5Options = $container.find('.skuGenType5Select .swatch');

			var $selectedColor = $container.find('.colorSelect div em');
			var $selectedSize = $container.find('.sizeSelect div em');
			var $selectedSkuGenType1 = $container.find('.skuGenType1Select div em');
			var $selectedSkuGenType2 = $container.find('.skuGenType2Select div em');
			var $selectedSkuGenType3 = $container.find('.skuGenType3Select div em');
			var $selectedSkuGenType4 = $container.find('.skuGenType4Select div em');
			var $selectedSkuGenType5 = $container.find('.skuGenType5Select div em');

			var $optionTypeClicked = $this.closest('.product-option-group').find('div em');
			var optionType = $optionTypeClicked.data('optiontype');

			var data = BLC.serializeObject($form);
			data = eOptionData.set($this, data);

			var errorTemplate = $form.find('.grm-alert-danger');
			errorTemplate.addClass('hidden');

			BLC.ajax({
				url: '/ecommerce/selectSku',
				type: 'POST',
				dataType: 'json',
				data: data,
				error: function (error) {
					console.log('There was an error: ',error);
					errorTemplate.find('.grm-alert-message').html('Something went wrong.');
					errorTemplate.removeClass('hidden');
				}
			}, function (data) {

				$form.find('.tempBIWProductId').attr('value', data.biwProductId);

				if (data.update === true) {
					$editModal.find('.productId .p-value').html(data.biwProductId);

					if ($colorOptions.length > 0) {
						$colorOptions.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($sizeOptions.length > 0) {
						$sizeOptions.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType1Options.length > 0) {
						$skuGenType1Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType2Options.length > 0) {
						$skuGenType3Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType3Options.length > 0) {
						$skuGenType3Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType4Options.length > 0) {
						$skuGenType4Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType5Options.length > 0) {
						$skuGenType5Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
				}

				if (data.updateAvailableOptions === true) {
					// Allow more than 2 SKU Generating Product Options
					if (optionType === 'COLOR' || optionType === 'SIZE' || optionType === 'SKUGENTYPE1' || optionType === 'SKUGENTYPE2' || optionType === 'SKUGENTYPE3' || optionType === 'SKUGENTYPE4' || optionType === 'SKUGENTYPE5') {
						if ($colorOptions.length > 0) {
							$colorOptions.each(function (index, element) {
								var colorName = "" + $(element).children().data('colorname'),
									colorAvailable = false;
								for (i = 0; i < data.availableColors.length; i++) {
									if (colorName === data.availableColors[i]) {
										colorAvailable = true;
									}
								}
								if (colorAvailable) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedColor.html() === colorName) {
										$selectedColor.html("");
									}
								}
							});
						}
						if ($sizeOptions.length > 0) {
							$sizeOptions.each(function (index, element) {
								var sizeName = "" + $(element).children().data('sizename'),
									sizeAvailable = false;
								for (i = 0; i < data.availableSizes.length; i++) {
									if (sizeName === data.availableSizes[i]) {
										sizeAvailable = true;
									}
								}
								if (sizeAvailable) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSize.html() === sizeName) {
										$selectedSize.html("");
									}
								}
							});
						}
						if ($skuGenType1Options.length > 0) {
							$skuGenType1Options.each(function (index, element) {
								var skuGenType1Name = "" + $(element).children().data('skugentype1name'),
									skuGenType1Available = false;
								for (i = 0; i < data.availableSkuGenType1s.length; i++) {
									if (skuGenType1Name === data.availableSkuGenType1s[i]) {
										skuGenType1Available = true;
									}
								}
								if (skuGenType1Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType1.html() === skuGenType1Name) {
										$selectedSkuGenType1.html("");
									}
								}
							});
						}
						if ($skuGenType2Options.length > 0) {
							$skuGenType2Options.each(function (index, element) {
								var skuGenType2Name = "" + $(element).children().data('skugentype2name'),
									skuGenType2Available = false;
								for (i = 0; i < data.availableSkuGenType2s.length; i++) {
									if (skuGenType2Name === data.availableSkuGenType2s[i]) {
										skuGenType2Available = true;
									}
								}
								if (skuGenType2Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType2.html() === skuGenType2Name) {
										$selectedSkuGenType2.html("");
									}
								}
							});
						}
						if ($skuGenType3Options.length > 0) {
							$skuGenType3Options.each(function (index, element) {
								var skuGenType3Name = "" + $(element).children().data('skugentype3name'),
									skuGenType3Available = false;
								for (i = 0; i < data.availableSkuGenType3s.length; i++) {
									if (skuGenType3Name === data.availableSkuGenType3s[i]) {
										skuGenType3Available = true;
									}
								}
								if (skuGenType3Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType3.html() === skuGenType3Name) {
										$selectedSkuGenType3.html("");
									}
								}
							});
						}
						if ($skuGenType4Options.length > 0) {
							$skuGenType4Options.each(function (index, element) {
								var skuGenType4Name = "" + $(element).children().data('skugentype4name'),
									skuGenType4Available = false;
								for (i = 0; i < data.availableSkuGenType4s.length; i++) {
									if (skuGenType4Name === data.availableSkuGenType4s[i]) {
										skuGenType4Available = true;
									}
								}
								if (skuGenType4Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType4.html() === skuGenType4Name) {
										$selectedSkuGenType4.html("");
									}
								}
							});
						}
						if ($skuGenType5Options.length > 0) {
							$skuGenType5Options.each(function (index, element) {
								var skuGenType5Name = "" + $(element).children().data('skugentype5name'),
									skuGenType5Available = false;
								for (i = 0; i < data.availableSkuGenType5s.length; i++) {
									if (skuGenType5Name === data.availableSkuGenType5s[i]) {
										skuGenType5Available = true;
									}
								}
								if (skuGenType5Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType5.html() === skuGenType5Name) {
										$selectedSkuGenType5.html("");
									}
								}
							});
						}
					}
				}

				if (data.priceNotAvailable === true) {
					if ($colorOptions.length > 0) {
						$this.removeClass("selected");
						$selectedColor.html("");
					}
					if ($sizeOptions.length > 0) {
						$this.removeClass("selected");
						$selectedSize.html("");
					}

					$errorTemplate.find('.grm-alert-message').text(data.priceNotAvailableMsg);
					errorTemplate.removeClass('hidden');
				}
			});
		});
	},
	updateSKUFromCart: function(){

		$(".mycartlist .colorSelect .swatch a").on({
			click: function (e) {
				var $this = $(this);
				var colorLabelDisplay = $this.data("colorname").replace(/[_\s]/g, '-').replace(/[^a-z0-9-\s]/gi, '/');
				var thisParent = $this.parents(".swatch");
                if (thisParent.hasClass("strikeThrough")) {} else {
                    $this.closest(".swatches").find(".selected").removeClass("selected");
                    $this.parent("div").addClass("selected");
                    $(".colorSelect div em").html(colorLabelDisplay);
                }
			}
		});

		$('.mycartlist .swatch a').on('click', function () {

			var $this = $(this);
			var $form = $this.closest('form');
			var $container = $this.closest('.product_container');
			var $editModal = $this.closest('.cart_edit_modal');

			var $colorOptions = $container.find('.colorSelect .swatch');
			var $sizeOptions = $container.find('.sizeSelect .swatch');
			var $skuGenType1Options = $container.find('.skuGenType1Select .swatch');
			var $skuGenType2Options = $container.find('.skuGenType2Select .swatch');
			var $skuGenType3Options = $container.find('.skuGenType3Select .swatch');
			var $skuGenType4Options = $container.find('.skuGenType4Select .swatch');
			var $skuGenType5Options = $container.find('.skuGenType5Select .swatch');

			var $selectedColor = $container.find('.colorSelect div em');
			var $selectedSize = $container.find('.sizeSelect div em');
			var $selectedSkuGenType1 = $container.find('.skuGenType1Select div em');
			var $selectedSkuGenType2 = $container.find('.skuGenType2Select div em');
			var $selectedSkuGenType3 = $container.find('.skuGenType3Select div em');
			var $selectedSkuGenType4 = $container.find('.skuGenType4Select div em');
			var $selectedSkuGenType5 = $container.find('.skuGenType5Select div em');

			var $optionTypeClicked = $this.closest('.product-option-group').find('div em');
			var optionType = $optionTypeClicked.data('optiontype');

			var data = BLC.serializeObject($form);
			data = eOptionData.set($this, data);

			var errorTemplate = $form.find('.grm-alert-danger');
			errorTemplate.addClass('hidden');

			BLC.ajax({
				url: '/ecommerce/selectSku',
				type: 'POST',
				dataType: 'json',
				data: data,
				error: function (error) {
					console.log('There was an error: ',error);
					errorTemplate.find('.grm-alert-message').html('Something went wrong.');
					errorTemplate.removeClass('hidden');
				}
			}, function (data) {

				$form.find('.tempBIWProductId').attr('value', data.biwProductId);

				if (data.update === true) {
					$editModal.find('.productId .p-value').html(data.biwProductId);

					if ($colorOptions.length > 0) {
						$colorOptions.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($sizeOptions.length > 0) {
						$sizeOptions.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType1Options.length > 0) {
						$skuGenType1Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType2Options.length > 0) {
						$skuGenType3Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType3Options.length > 0) {
						$skuGenType3Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType4Options.length > 0) {
						$skuGenType4Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
					if ($skuGenType5Options.length > 0) {
						$skuGenType5Options.each(function (index, element) {
							$(element).removeClass("strikeThrough inactiveLink");
						});
					}
				}

				if (data.updateAvailableOptions === true) {
					// Allow more than 2 SKU Generating Product Options
					if (optionType === 'COLOR' || optionType === 'SIZE' || optionType === 'SKUGENTYPE1' || optionType === 'SKUGENTYPE2' || optionType === 'SKUGENTYPE3' || optionType === 'SKUGENTYPE4' || optionType === 'SKUGENTYPE5') {
						if ($colorOptions.length > 0) {
							$colorOptions.each(function (index, element) {
								var colorName = "" + $(element).children().data('colorname'),
									colorAvailable = false;
								for (i = 0; i < data.availableColors.length; i++) {
									if (colorName === data.availableColors[i]) {
										colorAvailable = true;
									}
								}
								if (colorAvailable) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedColor.html() === colorName) {
										$selectedColor.html("");
									}
								}
							});
						}
						if ($sizeOptions.length > 0) {
							$sizeOptions.each(function (index, element) {
								var sizeName = "" + $(element).children().data('sizename'),
									sizeAvailable = false;
								for (i = 0; i < data.availableSizes.length; i++) {
									if (sizeName === data.availableSizes[i]) {
										sizeAvailable = true;
									}
								}
								if (sizeAvailable) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSize.html() === sizeName) {
										$selectedSize.html("");
									}
								}
							});
						}
						if ($skuGenType1Options.length > 0) {
							$skuGenType1Options.each(function (index, element) {
								var skuGenType1Name = "" + $(element).children().data('skugentype1name'),
									skuGenType1Available = false;
								for (i = 0; i < data.availableSkuGenType1s.length; i++) {
									if (skuGenType1Name === data.availableSkuGenType1s[i]) {
										skuGenType1Available = true;
									}
								}
								if (skuGenType1Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType1.html() === skuGenType1Name) {
										$selectedSkuGenType1.html("");
									}
								}
							});
						}
						if ($skuGenType2Options.length > 0) {
							$skuGenType2Options.each(function (index, element) {
								var skuGenType2Name = "" + $(element).children().data('skugentype2name'),
									skuGenType2Available = false;
								for (i = 0; i < data.availableSkuGenType2s.length; i++) {
									if (skuGenType2Name === data.availableSkuGenType2s[i]) {
										skuGenType2Available = true;
									}
								}
								if (skuGenType2Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType2.html() === skuGenType2Name) {
										$selectedSkuGenType2.html("");
									}
								}
							});
						}
						if ($skuGenType3Options.length > 0) {
							$skuGenType3Options.each(function (index, element) {
								var skuGenType3Name = "" + $(element).children().data('skugentype3name'),
									skuGenType3Available = false;
								for (i = 0; i < data.availableSkuGenType3s.length; i++) {
									if (skuGenType3Name === data.availableSkuGenType3s[i]) {
										skuGenType3Available = true;
									}
								}
								if (skuGenType3Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType3.html() === skuGenType3Name) {
										$selectedSkuGenType3.html("");
									}
								}
							});
						}
						if ($skuGenType4Options.length > 0) {
							$skuGenType4Options.each(function (index, element) {
								var skuGenType4Name = "" + $(element).children().data('skugentype4name'),
									skuGenType4Available = false;
								for (i = 0; i < data.availableSkuGenType4s.length; i++) {
									if (skuGenType4Name === data.availableSkuGenType4s[i]) {
										skuGenType4Available = true;
									}
								}
								if (skuGenType4Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType4.html() === skuGenType4Name) {
										$selectedSkuGenType4.html("");
									}
								}
							});
						}
						if ($skuGenType5Options.length > 0) {
							$skuGenType5Options.each(function (index, element) {
								var skuGenType5Name = "" + $(element).children().data('skugentype5name'),
									skuGenType5Available = false;
								for (i = 0; i < data.availableSkuGenType5s.length; i++) {
									if (skuGenType5Name === data.availableSkuGenType5s[i]) {
										skuGenType5Available = true;
									}
								}
								if (skuGenType5Available) {
									$(element).removeClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "false");
								} else {
									$(element).addClass("strikeThrough inactiveLink");
									$(element).children('a').attr("aria-disabled", "true");
									$(element).removeClass("selected");
									if ($selectedSkuGenType5.html() === skuGenType5Name) {
										$selectedSkuGenType5.html("");
									}
								}
							});
						}
					}
				}

				if (data.priceNotAvailable === true) {
					if ($colorOptions.length > 0) {
						$this.removeClass("selected");
						$selectedColor.html("");
					}
					if ($sizeOptions.length > 0) {
						$this.removeClass("selected");
						$selectedSize.html("");
					}

					$errorTemplate.find('.grm-alert-message').text(data.priceNotAvailableMsg);
					errorTemplate.removeClass('hidden');
				}
			});
		});
	},
	updateCartList: function () {
		$('.updateCartListBtn').click(function () {
			var $this = $(this);
			var $form = $(this).closest('form');
			var data = BLC.serializeObject($form);
			data = eOptionData.set($this, data);
			var errorTemplate = $form.find('.grm-alert-danger');
			var qty = parseInt($form.find('.quantityOrdered').val());
			if(isNaN(qty)){
				errorTemplate.find('.grm-alert-message').html($('input[name="valid_qty_msg"]').val());
				errorTemplate.removeClass('hidden');
				return;
			}
			data['quantity'] = qty;
			errorTemplate.addClass('hidden');
			eActivityIndicator.show();
			BLC.ajax({
				url: 'cart/updateQuantity',
				async: true,
				type: 'POST',
				dataType: 'json',
				data: data,
				error: function () {
					eActivityIndicator.hide();
					errorTemplate.find('.grm-alert-message').html('Something went wrong.');
					errorTemplate.removeClass('hidden');
				}
			}, function (data) {
				if (data.error) {
					if (data.error == 'noSkuForSelectedOptions') {
						errorTemplate.find('.grm-alert-message').html($('#noSkuForSelectedOptions').html());
						errorTemplate.removeClass('hidden');
					} else if (data.error == 'priceNotAvailable') {
						errorTemplate.find('.grm-alert-message').html($('#priceNotAvailable').html());
						errorTemplate.removeClass('hidden');
					} else if (data.error == 'addToCartError') {
						errorTemplate.find('.grm-alert-message').html(data.errorMessage);
						errorTemplate.removeClass('hidden');
					} else if (data.error == 'minQtyError') {
						errorTemplate.find('.grm-alert-message').html('Minimum Quantity Error');
						errorTemplate.removeClass('hidden');
					}else{
						if(data.errorMessage){
							errorTemplate.find('.grm-alert-message').html(data.errorMessage);
						}else{
							errorTemplate.find('.grm-alert-message').text('Something went wrong');
						}
						errorTemplate.removeClass('hidden');
					}
					eActivityIndicator.hide();
				} else {
					if(data.hasOwnProperty('removedProductName') && data.removedProductName){
						sessionStorage.setItem('removedProductName', data.removedProductName);
					}
					
					//Endor 3624 start
					var sortBy = $('#cart_sortMethodSelector').find(":selected").attr("value");
					
					if (typeof sortBy != 'undefined') {
						window.location.href = BLC.servletContext + '/cart?sort=' + sortBy;
					}
					else { 
						window.location.href = window.location.protocol + "//" + window.location.host + window.location.pathname;
					}
					//Endor 3624 end
					
				}
			});
		});
	},
	addPromo : function() {
		$('.addPromo').on(
				'click',
				function() {
							var $form = $(this).closest('form');
							$('div[id^="promocode-note-msg"]').hide();  
							var dataPayloadInfo = $form.serialize();
							$('#activity-indicator').show();
							BLC.ajax({
								url : $form.attr('action'),
								type : "POST",
								data : dataPayloadInfo
							}, function(data) {
								if (!data.promoAdded) {
									$(".cart_promo_add_response").html(data.exception);
								} else {
									$(".cart_promo_add_response").html(
											$('.promoCodeSuccessMessage').html());
									$('div[id^="promocode-note-msg"]').show(); 
									
		                			var promoCodeTag = extractValue(dataPayloadInfo, 'promoCode');
									var dynamicValue = promoCodeTag;
		            				var htmlContent = '<span class="tag label label-info"><span class="codetagInfo promocode-label">' + dynamicValue + '</span><a href="/ecommerce/cart/promoCode/remove?offerCode='+dynamicValue+'"><div class="icon-container promoCodeRemove"><i class="eicon-circle-remove"></i></div></a></span>';
		            				$('.dynamic-content').append(htmlContent);
		            				$(".inputPromoCode:visible").val('')
		            				/*if (event.isTrigger && ($(".btn-checkout").length > 0)) {
										window.location.href =  $(".btn-checkout")[0].href;
									}*/
								}
									$('#activity-indicator').hide();
									window.location.reload(true);
							});
				});

			$('.dynamic-content').on('click', '.promoCodeRemove', function() {
				
					BLC.ajax({
						url : "cart/promoCode/remove",
						type : "GET",
						data : { "offerCode" : $(this).prev().text() }
					}, function(data) {

						if (!data.promoAdded) {
							
						} else {
            				/*var htmlContent = '<span class="tag label label-info"><span class="codetagInfo">' + dynamicValue + '</span><div class="icon-container promoCodeRemove"><i class="eicon-circle-remove"></i></div></span>';
            				$('.dynamic-content').append(htmlContent);*/
						}
					});
			});
			
			function extractValue(serializedData, key) {
                var value = serializedData
                    .split('&')
                    .filter(function(item) {
                        return item.split('=')[0] === key;
                    })
                    .map(function(item) {
                        return decodeURIComponent(item.split('=')[1]);
                    });
                return value.length ? value[0] : null;
            }
            
		$(".promoCode").on('keyup', function() {
			/*if(this.value ===""){
				$(".addPromo").removeClass('grm-btn-primary');
			}*/
		});
		$(".promoCode").keypress(
				function(e) {
					/*if($(".promoCode").length > 0 ){
						$(".addPromo").addClass('grm-btn-primary');
					}*/
					if (e.keyCode == 13) {
						var $form = $(this).closest('form');
						$('div[id^="promocode-note-msg"]').hide();
						BLC.ajax({
							url : $form.attr('action'),
							type : "POST",
							data : $form.serialize()
						}, function(data) {
							if (!data.promoAdded) {
								$(".cart_promo_add_response").html(
										data.exception);
							} else {
								$(".cart_promo_add_response").html(
										$('.promoCodeSuccessMessage').html());
								  $('div[id^="promocode-note-msg"]').show();
										
							}
						});
						e.preventDefault();
					}
				});
	},
	eventsLinkAllEvents : function() {
		$('.eventsLinkallEvents').on('click', function(e) {
			$(this).closest('.allEventsForm').submit();
			e.preventDefault();

		});
	},
	expressCheckoutPanel : function() {
		$('.expressCheckoutBtn').on('click', function(e) {
			$('.expressCheckoutPanel').css('display', 'block');
			$('.expressCheckoutBtn').hide();
		});
	},
	expressCheckout : function() {
		$('.expressCheckout')
				.on(
						'click',
						function() {

							var $this = $(this), $form = $this.closest('form'), $errorSpan = $('#errorMsg'), $successSpan = $('.alert.alert-success'), $successMultiple = $(
									'#itemsAddedSuccess').text(), $container = $this
									.closest('.product_container'), $requiredOptions = $container
									.find('em.required-option-value'), requiredOptionNotSelected = [], data = BLC
									.serializeObject($form), data = eOptionData
									.set($this, data)

							;
							BLC
									.ajax(
											{
												url : $form.attr('action'),
												type : "POST",
												data : data
											},
											function(data) {
												var dataString = $(data);
												if (dataString[0].className == "expressCheckoutError") {
													$errorSpan.html(data);
													$('#emailAddress')
															.addClass(
																	"expressCheckoutEmailError");

												} else if (dataString[0].className == "expressCheckoutSuccess") {
													$errorSpan.hide();
													$('#emailAddress')
															.addClass(
																	"expressCheckoutEmailSuccess");
													$('.expressCheckoutConfirm')
															.css('background',
																	'rgb(204, 235, 173) none repeat scroll 0% 0%');
													$('.expressCheckout')
															.hide();
													$('#expressCheckoutDOne')
															.css('display',
																	'block');
													$('.mediaAmount')
															.text(
																	$(data)
																			.find(
																					'#accountBalance')
																			.text());
													$('#expressCheckoutDOne')
															.html(data);
													$('#emailAddress').prop(
															'disabled', true);
												} else if (dataString.hasClass('grm-alert grm-alert-danger')) { // GL 1620
													$('#error-alert-wrapper').html(data);
												}
											});
						});
	},
	goToCartPage : function() {
		$(document).on('submit', 'form.view-cart-form', function() {
			eActivityIndicator.show();

			setTimeout(function() {
				eActivityIndicator.hide();
			}, 15000);
		});
	},
	goToCheckoutPage : function() {
		$(document).on('submit', 'form.cart-flyout-checkout', function() {
			eActivityIndicator.show();

			setTimeout(function() {
				eActivityIndicator.hide();
			}, 15000);
		});
	},	
}

$('.finalReview').on("click", function() {
	$('#ModalCart').addClass('show');
	$('#ModalCart').removeClass('fade');
	$('.modal-dialogfinalReview').css('float', 'right');
	$('.modal-dialogfinalReview').css('margin-top', '170px');
	$('.modal-dialogfinalReview').css('margin-right', '20px');
	$('body').css('overflow', 'hidden');
	var customizationID = $(this)[0].innerText;
	var imageURL = $(this)[0].nextElementSibling.value;

	$(".customizeID").text(customizationID);
	$('.customProductImage').attr('src', imageURL);
});
$('.plateauFinalReview').on("click", function() {
	$('#ModalCart').addClass('show');
	$('#ModalCart').removeClass('fade');
	$('.modal-dialogfinalReview').css('float', 'right');
	$('.modal-dialogfinalReview').css('margin-top', '170px');
	$('.modal-dialogfinalReview').css('margin-right', '20px');
	$('body').css('overflow', 'hidden');
	var customizationID = $('#customisationId').val();
	var imageURL = $('#imageURL').val();
	$(".customizeID").text(customizationID);
	$('.customProductImage').attr('src', imageURL);
});
$('#ModalCart').find('.close').on("click", function(e) {
	if ($('#ModalCart').hasClass('show')) {
		$('#ModalCart').addClass('fade');
		$('#ModalCart').removeClass('show');
		$('body').css('overflow', 'auto');
	} else {
		$('#ModalCart').addClass('show');
		$('#ModalCart').removeClass('fade');
	}
});
$('.viewcustomProduct').on("click", function(e) {
	$('#Modal').addClass('show');
	$('#Modal').removeClass('fade');
	$('.modal-dialog').css('float', 'right');
	$('.modal-dialog').css('margin-top', '170px');
	$('.modal-dialog').css('margin-right', '20px');
	$('body').css('overflow', 'hidden');
	var customizationID = $(this)[0].previousElementSibling.value;
	var imageURL = $(this)[0].parentElement.children[0].value;

	$(".customizeID").text(customizationID);
	$('.customProductImage').attr('src', imageURL);
});
$('body').on("click", ".customId", function(e) {
	$('#Modal').addClass('show');
	$('#Modal').removeClass('fade');
	$('.modal-dialog').css('float', 'right');
	$('.modal-dialog').css('margin-top', '170px');
	$('.modal-dialog').css('margin-right', '20px');
	$('body').css('overflow', 'hidden');
	var customizationID = $(this)[0].innerText;
	var imageURL = $(this)[0].nextElementSibling.value;

	$(".customizeID").text(customizationID);
	$('.customProductImage').attr('src', imageURL);
});
$('body').on("click", "#Modal .close", function(e) {
	var modal = $('#Modal');
	if (modal.hasClass('show')) {
		modal.addClass('fade');
		modal.removeClass('show');
		$('body').css('overflow', 'auto');
	} else {
		modal.addClass('show');
		modal.removeClass('fade');
	}
});
function DisableMultiAddRemoveProduct(element, url){
	$(element).addClass("disabled");
	$(location).attr('href',url);
}
$('.closeSS').click(function () {
	$('#myModal').hide();
	$('#myModal').modal('hide');
});

$('#ssToggle').click(function () {
	if ($('#skillsoftClearPassword').attr('type') == 'text') {
	   $('#skillsoftClearPassword').attr('type', 'password');
	   $('#ssToggle').toggleClass("fa-eye-slash fa-eye");


	} else {
	   $('#skillsoftClearPassword').attr('type', 'text');
	   $('#ssToggle').toggleClass("fa-eye fa-eye-slash");
	}
 });
//  $('#closeSSFav').click(function () {
// 	$('#myModal').hide();
// });
$('#SSBtnDetail').on(
	'click',
	function () {
		if($("#SSCheckBox").is(':checked')){
		// checked
		var formData = {
			customerId: $('#customerIdForSS').val(),
			skillsoftLoginName: $('#skillsoftLoginName').val(),
			skillsoftPassword: $('#skillsoftClearPassword').val(),
			skillsoftFirstName: $('#skillsoftFirstname').val(),
			skillsoftLastName: $('#skillsoftLastname').val(),
			skillsoftEmailAddress: $('#skillsoftEmailAddress').val()
		}; 
		$('.skillSoftErrorCheckbox').hide();
		$('#SSactivity-indicator').attr("style", "display: flex !important");
		$("#SSErrorMsg").text('');
		$("#SSBtnDetail").attr("disabled", true);
		$('#closeSS').removeClass('closeSS');		
		BLC.ajax({
			url: "/ecommerce/skillsoft/customer/saveCredentials",
			type: "POST",
			data: formData,
			dataType: "json"
		},
			function (data) {
				$('#SSactivity-indicator').attr("style", "display: none !important");
				$("#SSBtnDetail").attr("disabled", false);
				$('#closeSS').addClass('closeSS');
				if (data.isError === true) {
					var errorMsges = data.errorMessages;
					$("#SSErrorMsg").prop("type", "text");
					$.each(errorMsges, function (index, element) {
						$("#SSErrorMsg").append('* ' + element + '<br>');
					});
				}

				else {
					$('#SSactivity-indicator').attr("style", "display: none !important");
					$("#SSBtnDetail").attr("disabled", false);
					$('#closeSS').addClass('closeSS');
					$("#SSErrorMsg").prop("type", "hidden");
					$('#skillsoftDetailsProvided').attr('value', true);
					$('#myModal').hide();
					$('#myModal').modal('hide');
					$('.detail .addToCart').trigger('click');
				}

			});
		}
		else {
			// unchecked
			$('.skillSoftErrorCheckbox').show();
			}

	});

	$('#SSBtnFav').on(
		'click',
		function () {
			if($("#SSCheckBox").is(':checked')){
			// checked
			var formData = {
				customerId: $('#customerIdForSS').val(),
				skillsoftLoginName: $('#skillsoftLoginName').val(),
				skillsoftPassword: $('#skillsoftClearPassword').val(),
				skillsoftFirstName: $('#skillsoftFirstname').val(),
				skillsoftLastName: $('#skillsoftLastname').val(),
				skillsoftEmailAddress: $('#skillsoftEmailAddress').val()
			}; 
			$('.skillSoftErrorCheckbox').hide();
			$('#SSactivity-indicator').attr("style", "display: flex !important");
			$("#SSErrorMsg").text('');
			// $("#SSBtnFav").attr("disabled", true);
			$('#closeSS').removeClass('closeSS');		

			BLC.ajax({
				url: "/ecommerce/skillsoft/customer/saveCredentials",
				type: "POST",
				data: formData,
				dataType: "json"
			},
				function (data) {
					$('#SSactivity-indicator').attr("style", "display: none !important");
					// $(".SSBtnFav").attr("disabled", false);
					$('#closeSS').addClass('closeSS');
					if (data.isError === true) {
						var errorMsges = data.errorMessages;
						$("#SSErrorMsg").prop("type", "text");
						$.each(errorMsges, function (index, element) {
							$("#SSErrorMsg").append('* ' + element + '<br>');
						});
					}
	
					else {
						$('#SSactivity-indicator').attr("style", "display: none !important");
						// $("#SSBtnFav").attr("disabled", false);
						$('#closeSS').addClass('closeSS');
						$("#SSErrorMsg").prop("type", "hidden");
						$('.skillsoftDetailProvided').attr('value', true);
						$('#myModal').hide();
						$('#myModal').modal('hide');
						$('.skillsoftSkuClassAdd.addToCart').trigger('click');
					}
	
				});
			}
			else {
				// unchecked
				$('.skillSoftErrorCheckbox').show();
				}
	
		});

	$('.gtag_select_item_cart').on('click', function () {
				var categories = $(this).find(".gtag_view_category").val();
				var	item_category; 
				var	item_category2;
				var	item_category3;
				var	item_category4;
				var	item_category5;				
				if(categories != null)
				{
					categoryTokens =  categories.split('/');
					if(categoryTokens[1] != null)
					{
						item_category =categoryTokens[1];
					}
					if(categoryTokens[2] != null)
					{
						item_category2 =categoryTokens[2];
					}
					if(categoryTokens[3] != null)
					{
						item_category3 =categoryTokens[3];
					}
					if(categoryTokens[4] != null)
					{
						item_category4 =categoryTokens[4];
					}
					if(categoryTokens[5] != null)
					{
						item_category5 =categoryTokens[5];
					}
				}

		var gtagArr = $(this).find(".gtag_item_attributes").val();
		gtagArr = gtagArr.replaceAll("{", '["')
		gtagArr = gtagArr.replaceAll("}", '"]')
		gtagArr = gtagArr.replaceAll(",", '",')
		gtagArr = gtagArr.replaceAll(", ", ', "')
		var item_variant = JSON.parse(gtagArr).sort();

		gtag("event", "select_item", {
			'items': [{
				item_id: $(this).find(".gtag_view_item_id").val(),
				quantity: Number($(this).find(".gtag_view_item_qty").val()),
				// has_options: $(this).find(".gtag_view_item_opt").val(),
				item_brand: $(this).find(".gtag_view_item_brand").val(),
				item_name: $(this).find(".gtag_view_item_name").val(),
				// item_variant: $(this).find(".gtag_item_attributes").val(),
				item_variant: item_variant,
				item_category: item_category,
				item_category2: item_category2,
				item_category3: item_category3,
				item_category4: item_category4,
				item_category5: item_category5,
				price: Number($(this).find(".gtag_view_item_price").val())
			}]
		});

		gtag("event", "view_item", {
			currency:  $(this).find(".gtag_currency").val(),
			value: Number($(this).find(".gtag_view_item_price").val()).toFixed(2),
			items: [{
				item_id: $(this).find(".gtag_view_item_id").val(),
				quantity: Number($(this).find(".gtag_view_item_qty").val()),
				// has_options: $(this).find(".gtag_view_item_opt").val(),
				item_brand: $(this).find(".gtag_view_item_brand").val(),
				item_name: $(this).find(".gtag_view_item_name").val(),
				item_category: item_category,
				item_category2: item_category2,
				item_category3: item_category3,
				item_category4: item_category4,
				item_category5: item_category5,
				price: Number($(this).find(".gtag_view_item_price").val())
			}]
		});

	})

				$('.my-cart-list-delete').on('click', function () {
			// $('a.gridItemLink .img.merchItem .p.description .p.description p.productId').on('click', function () {
					var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4];
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}		
					
					var gtagArr = $(this).find(".gtag_item_attributes").val();
					gtagArr = gtagArr.replaceAll("{", '["')
					gtagArr = gtagArr.replaceAll("}", '"]')
					gtagArr = gtagArr.replaceAll(",", '",')
					gtagArr = gtagArr.replaceAll(", ", ', "')
					var item_variant = JSON.parse(gtagArr).sort();

					gtag("event", "remove_from_cart", { 
						currency:  $(this).find(".gtag_currency").val(),
						value: Number($(this).find(".gtag_view_item_price").val()),
						items:[{
							item_id: $(this).find(".gtag_view_item_id").val(),
							quantity: Number($(this).find(".gtag_view_item_qty").val()),
							// has_options: $(this).find(".gtag_view_item_opt").val(),
							item_brand: $(this).find(".gtag_view_item_brand").val(),
							item_name: $(this).find(".gtag_view_item_name").val(),
							// item_variant:$(this).find(".gtag_item_attributes").val(),
							item_variant: item_variant,
							item_category: item_category,
							item_category2: item_category2,
							item_category3: item_category3,
							item_category4: item_category4,
							item_category5: item_category5,
							price: Number($(this).find(".gtag_view_item_price").val())
						}]
			  });
					})
			// },

			$('.complete-order, .shiptoButton, .normalCheckoutSpin, .guestCheckoutSpin').one(
				'click',
				function () {
						$('#activity-indicator').attr("style", "display: flex !important");
												
				});
;
/*
eHeart
eFavorite
*/

var eHeart = {
	fill: function ($this) {
		$this.addClass('favorited');
		$this.removeClass('gtag-add-wishlist');
		$this.addClass('gtag-remove-wishlist');
		$this.find('.endor-heart').removeClass('endor-heart').addClass('endor-heart-filled');
		$this.find('.eicon-heart').removeClass('eicon-heart').addClass('eicon-heart-filled-red');
					var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4];
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}	
			//add_to_wishlist 

					var gtagArr = $(this).find(".gtag_item_attributes").val();
					gtagArr = gtagArr.replaceAll("{", '["')
					gtagArr = gtagArr.replaceAll("}", '"]')
					gtagArr = gtagArr.replaceAll(",", '",')
					gtagArr = gtagArr.replaceAll(", ", ', "')
					var item_variant = JSON.parse(gtagArr).sort();

				gtag("event", "add_to_wishlist", {
					currency:  $(this).find(".gtag_currency").val(),
					value: Number($(this).find(".gtag_view_item_price").val()),
					items: [{
						item_id: $this.find(".gtag_view_item_id").val(),
						quantity: Number($this.find(".gtag_view_item_qty").val()),
						// has_options: $(this).find(".gtag_view_item_opt").val(),
						item_brand: $this.find(".gtag_view_item_brand").val(),
						item_name: $this.find(".gtag_view_item_name").val(),
						// item_variant: $(this).find(".gtag_item_attributes").val(),
						item_variant: item_variant,
						item_category: item_category,
						item_category2: item_category2,
						item_category3: item_category3,
						item_category4: item_category4,
						item_category5: item_category5,
						price: Number($this.find(".gtag_view_item_price").val())
					}]
				});

	},
	empty: function ($this) {
		$this.removeClass('favorited');
		$this.removeClass('gtag-remove-wishlist');
		$this.addClass('gtag-add-wishlist');

		$this.find('.endor-heart-filled').removeClass('endor-heart-filled').addClass('endor-heart');
		$this.find('.eicon-heart-filled-red').removeClass('eicon-heart-filled-red').addClass('eicon-heart');

			//add_to_wishlist 
			
			//TODO: no gtag event for remove from wishlist find out if one exists
					var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4];
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}	

					var gtagArr = $(this).find(".gtag_item_attributes").val();
					gtagArr = gtagArr.replaceAll("{", '["')
					gtagArr = gtagArr.replaceAll("}", '"]')
					gtagArr = gtagArr.replaceAll(",", '",')
					gtagArr = gtagArr.replaceAll(", ", ', "')
					var item_variant = JSON.parse(gtagArr).sort();

				gtag("event", "remove_from_wishlist", {
					currency:  $(this).find(".gtag_currency").val(),
					value: Number($(this).find(".gtag_view_item_price").val()),
					items: [{
						item_id: $this.find(".gtag_view_item_id").val(),
						quantity: Number($this.find(".gtag_view_item_qty").val()),
						// has_options: $(this).find(".gtag_view_item_opt").val(),
						item_brand: $this.find(".gtag_view_item_brand").val(),
						item_name: $this.find(".gtag_view_item_name").val(),
						// item_variant: $(this).find(".gtag_item_attributes").val(),
						item_variant: item_variant,
						item_category: item_category,
						item_category2: item_category2,
						item_category3: item_category3,
						item_category4: item_category4,
						item_category5: item_category5,
						price: Number($this.find(".gtag_view_item_price").val())
					}]
				});
	},
	loadingStart: function ($this) {
		$this.find('.endorIcon').addClass('hidden');
		$this.find('.endor-loader').removeClass('hidden');
	},
	loadingFinish: function ($this) {
		$this.find('.endorIcon').removeClass('hidden');
		$this.find('.endor-loader').addClass('hidden');
	}
};

var eFavorites = {

	favorite: function () {
		/*Add to Favorites from cart page */
			
	$(document).ready(function(){
		var countOfFav = $(".home-refresh-container").find('a.favorited').length;
		for(var i=0 ; i < countOfFav ; i++){
			$(".home-refresh-container").find('a.favorited')[i].innerHTML = '<div class="icon-container"><i class="eicon-heart-filled-red"></i></div>';
		}
	});

		$(document).on('click', '.moveToFavorites, .addToFavoritesFeature, #addToFavoritesFrmProdDetail',function (event) {
			// console.log('Fav.js ', event)
		
			if ($('#sessionDetail').text() != null || $('#sessionDetail').text() != 'null' || $('#sessionDetail').text() != 'undefined' || $('#sessionDetail').text() != '' ){
                var liveId = $('#sessionDetail').text();
                }else{
                    var liveId = 'placeholder'
                }
                
			//Endor 4144 start
			var $successSpan = $('#product-success-alert');
			var $errorSpan = $('#selectOptionsForFavorites');	
			$successSpan.addClass('hidden');
			$errorSpan.addClass('hidden');
			if($('.priceAvailability').val()==0){
				return;
			}
			//Endor 4144 end
			
			var $this = $(this);
			if ($('#main-container').filter(function () {
					return $(this).css('display') === 'block'
				}).length > 0) {
				var product = yourDesigner.getProduct();
				yourDesigner.getProductDataURL(function (dataURL) {
					sendAddFavorites($this, "{'productInfo':'" + JSON.stringify(product) + "','imageData':'" + dataURL + "'}");
				});
			} else {
				if(!$this.closest('form').find('.isFavFromCard').length){
					if ($(".purchase-acknowledgement-container")[0] && !$('#purchase-acknowledgement-input').prop('checked')) {
						$('#purchase-acknowledgement').addClass("acknowledgement-alert");
					} else {
						sendAddFavorites($this, null);
					}
				} else {
					sendAddFavorites($this, null);
				}
			}
			return false;
		});

		function sendAddFavorites($this, customData) {
			var $this = $this;
			if (!$this.hasClass('favorited') && !$this.hasClass('progress')) {
				var
					$form = $this.closest('form')[0] !== undefined ? $this.closest('form') : $('#productAddToCartForm');
				data = BLC.serializeObject($form),
					data = eOptionData.set($this, data),
					requiredOptionNotSelected = [];
				if ($this.is('#addToFavoritesFrmProdDetail')) {
					eHeart.loadingStart($this);
				}
				if (data.gridenable == 'true') {
					var dataItemAttrObj = {};
					for (var key in data) {
						if (key.indexOf("itemAttributes") != -1) {

							var oKey = key.match(/\[(.*?)\]/)[1];
							var oValue = data[key];
							dataItemAttrObj[oKey] = oValue;
						}
					};
					var formdata = $("#productAddToCartListForm").serializeArray();
					var datatest = {};
					$(formdata).each(function (index, obj) {
						var testobj = obj.name;
						if (testobj.indexOf("itemAttributes") != -1) {

							function normalize(input) {
								var input = input.replace("{", "").replace("}", "").replace(/=/g, ":").split(",");
								var result = {};
								input.forEach(function (v) {
									v = v.trim().split(":");
									var temp = {};
									temp[v[0]] = v[1];
									result = Object.assign(temp, result);
								});
								return result;
							};

							datatest[obj.name] = Object.assign({}, normalize(obj.value), dataItemAttrObj);
						} else {
							datatest[obj.name] = obj.value;
						}
					});

					if (customData) {
						datatest["customData"] = customData;
					}
					if ($this.is('#addToFavoritesFrmProdDetail')) {
						var
							$container = $this.closest('.product_container'),
							$requiredOptions = $container.find('em.required-option-value');
						$container.find('#error-alert-wrapper').addClass('hidden');
						$requiredOptions.each(function (index, element) {
							var
								optionType = $(element).data('optiontype'),
								optionLabel = $(element).data('optionlabel'),
								value;
							if ("TEXT" == optionType) {
								value = $(element).next('input').val();
								if (value == null || value == "") {
									requiredOptionNotSelected.push(optionLabel);
									value = " ";
								}
							} else if ("TEXTAREA" == optionType) {
								value = $(element).next('textarea').val();
							} else if ("DECIMAL" == optionType) {
								value = $(element).next('input').val();
							} else {
								value = $(element).text();
							}
							if (value.length == 0) {
								requiredOptionNotSelected.push(optionLabel);
							}
						});
						var vport = eUtils.getViewport();
						if(vport == 'xs' || vport == 'sm' || vport == 'md'){
							eActivityIndicator.show();
						}
						BLC.ajax({
							url: '/ecommerce/account/wishlist/addGridList',
							type: "POST",
							dataType: "json",
							data: datatest
						}, function (data) {
							eActivityIndicator.hide();
							data.Operation = "add";
							if ($this.is('#addToFavoritesFrmProdDetail')) {
								eHeart.loadingFinish($this);
							}
							if (data.error) {
								eHeart.empty($this);
							} else {
								eHeart.fill($this);
								// $this.attr("tabindex", "-1");
							}
							eFavorites.msgs($this, data, requiredOptionNotSelected);
						});
					}
				} else {
					if (customData) {
						data["customData"] = customData;
					}
					if(data.quantity > 0) {
						if ($this.is('#addToFavoritesFrmProdDetail')) {
							var
								$container = $this.closest('.product_container'),
								$requiredOptions = $container.find('em.required-option-value');
							$container.find('#error-alert-wrapper').addClass('hidden');
							$requiredOptions.each(function (index, element) {
								var
									optionType = $(element).data('optiontype'),
									optionLabel = $(element).data('optionlabel'),
									value;
								if ("TEXT" == optionType) {
									value = $(element).next('input').val();
									if (value == null || value == "") {
										requiredOptionNotSelected.push(optionLabel);
										value = " ";
									}
								} else if ("TEXTAREA" == optionType) {
									value = $(element).next('textarea').val();
								} else if ("DECIMAL" == optionType) {
									value = $(element).next('input').val();
								} else {
									value = $(element).text();
								}
								if (value.length == 0) {
									requiredOptionNotSelected.push(optionLabel);
								}
							});
						}
						$this.addClass('progress');
						var vport = eUtils.getViewport();
						if(vport == 'xs' || vport == 'sm' || vport == 'md'){
							eActivityIndicator.show();
						}
						BLC.ajax({
							url: '/ecommerce/account/wishlist/add',
							type: "POST",
							dataType: "json",
							data: data
						}, function (data) {
							eActivityIndicator.hide();
							$this.removeClass('progress');
							$('#snackbar').removeClass('snackbarErr');
							eHeart.loadingFinish($this);
							data.Operation = "add";

							if (data.error) {
								eHeart.empty($this);
							} else {
								eHeart.fill($this);
								// $this.attr("tabindex", "-1");
							}
							
							if($form.find('.isFavFromCard').length){
								$('#snackbar .snackbar-alert-message').html(data.productName+" "+$("#itemAddedSuccessFavToast").html());
								if (data.error) {
									if(data.error == 'allOptionsRequired'){
										var url = $this.closest('.grmProductCard').find(".gridItemLink").attr("href");
										window.location.href = url+"?addToFavoritesWithOptions=true";
										return false;
									}
									else{
										$('#snackbar').addClass('snackbarErr');
										$('#snackbar .snackbar-alert-message').html(data.errorMessage);
									}
								}
								$('#snackbar').addClass('visible');
							}else{
								eFavorites.msgs($this, data, requiredOptionNotSelected);
							}
							
						});
					}
					else{
						$this.closest('.product_container').find('#error-alert-wrapper').addClass('hidden');
						var $errorSpan = $('#selectOptionsForFavorites');
						$errorSpan.find('.grm-alert-message').html($("#qtyZeroErrMsg").val());
						$errorSpan.removeClass('hidden');
					}
				}
			}
		}

		
		$(document).on('click','.favorited', function () {
			var _that = $(this);
			if(!_that.hasClass('progress')) {
				var requiredOptionNotSelected = [];
				var $favovrited = $(this).find('.favorited');
				$favovrited.addClass('progress');

				var $form = $(this).closest('form');
				var data = {};
				if($form.length){
					data.productId = $form.find("input[name=productId]").val()
				}else{
					data.productId = $("input[name=productId]").val()
				}
				_that.addClass('progress');
				var vport = eUtils.getViewport();
				if(vport == 'xs' || vport == 'sm' || vport == 'md'){
					eActivityIndicator.show();
				}
				BLC.ajax({
					url: '/ecommerce/account/wishlist/removeFromGridList',
					async: true,
					type: 'POST',
					dataType: 'json',
					data: data
				}, function (data) {
					_that.removeClass('progress');
					eActivityIndicator.hide();
					$('#snackbar').removeClass('visible');
					$('#snackbar').removeClass('snackbarErr');
					if (data.returnCode == 0) {
						$favovrited.removeClass('progress');
						if($form.length){
							$form.addClass("addToFavoritesFeature"); // call msgs() if need to notify fav removal
						} else{
							$('.favorited').addClass("addToFavoritesFeature");
						}
						$favovrited.removeClass("favorited");
						if($form.find('.isFavFromCard').length){
							$('#snackbar .snackbar-alert-message').html(data.productName+" "+$("#itemRemovedSuccessFavToast").html());
							$('#snackbar').addClass('visible');
						}else{
							data.Operation = "removeFromFav";
							eFavorites.msgs(_that, data, requiredOptionNotSelected);
						}
						// clear heart
						eHeart.empty(_that);
						if($form.find('.isFavFromCard').length && data.gridenable){
							$form.find("a.addremoveFav").remove();
						}
						return false;
					} else {
						if($form.find('.isFavFromCard').length){
							$('#snackbar .snackbar-alert-message').html(data.productName+" "+data.returnMsg);
							$('#snackbar').addClass('snackbarErr');
							$('#snackbar').addClass('visible');
						}else{
							data.Operation = data.error = "removeFromFav";
							eFavorites.msgs(_that, data, requiredOptionNotSelected);
						}
						return false;
					}
				});
			}
		});

		$(document).on('keypress', '.moveToFavorites, .addToFavoritesFeature, #addToFavoritesFrmProdDetail, .removeFromFavorite', function (e) {
			// console.log('Favorits E3: ', e)
			if(e.which == 32 ||  e.which === 13){
				e.preventDefault();
                $(this).click();
                return false;
            }
		});
	},
	msgs: function ($this, data, requiredOptionNotSelected) {
		if (!$this.is('#addToFavoritesFrmProdDetail') && !$this.is('a.addToFavorites')) return;
		var $successSpan = $('#product-success-alert');
		var $errorSpan;
		if($('#selectOptionsForFavorites').length){
			$errorSpan = $('#selectOptionsForFavorites');	
		}
		else{
			$errorSpan = $('.grm-alert.grm-alert-danger');	
		}
		if($('#my-cart').length){
			var itemId = $this.attr('data-item');
			$successSpan = $('#success-alert-'+itemId);
			$errorSpan = $('#error-alert-'+itemId);
		}
		var $errorSpanMsg = $errorSpan.find('.grm-alert-message');
		var $successFavorite = $('#itemAddedSuccessFav').text();
		var $ErrorFavoriteNotAvailable = $('#productNotAvailable').text();
		var $ErrorFavoriteOptions = $('#selectRequiredOptions').text();
		var $successRemoveFavorite = $('#itemRemovedSuccessFav').text();

		if (data.error) {
			$successSpan.addClass('hidden');
			if (data.error == 'allOptionsRequired') {
				if (requiredOptionNotSelected.length > 0) {
					var errorHtml = "";
					for (i = 0; i < requiredOptionNotSelected.length; i++) {
						errorHtml = errorHtml + "<br/><span>" + requiredOptionNotSelected[i] + "</span>";
					}
					$errorSpanMsg.html($ErrorFavoriteOptions + errorHtml);
				}
			} else if (data.error == 'addToCartError') {
				$errorSpanMsg.html(data.errorMessage);
			} else if (data.error == 'inventoryUnavailable') {
				$errorSpanMsg.html($ErrorFavoriteNotAvailable);
			} else if (data.error == 'productExcluded') {
				$errorSpanMsg.html(data.errorMessage);
			} else if (data.error == 'removeFromFav') {
				$errorSpanMsg.html(data.returnMsg);
			} else if (data.error == 'InvalidGridQty') {
				$errorSpanMsg.html(data.errorMessage);
			} else if (data.error == 'productOptionValidationError') {
				$errorSpanMsg.html(data.errorMessage);
			}else if(data.error == 'realDealProductErrorMsg'){
				$errorSpanMsg.html(data.errorMessage);
			} else {
				$errorSpanMsg.html(data.returnMsg);
			}
			$errorSpan.removeClass('hidden');
		} else {
			$('.alert.alert-danger').css('display', 'none');
			$('.grm-alert.grm-alert-danger').addClass('hidden');
			
			$displayMsg = $successFavorite;
			if(data.Operation != undefined &&  data.Operation == "removeFromFav"){
				$displayMsg = $successRemoveFavorite;
			}

			if (data.productName == undefined) {
				$successSpan.find('.grm-alert-message').html(0 + ' ' + $displayMsg);
			} else {
				$successSpan.find('.grm-alert-message').html(data.productName + ' ' + $displayMsg);
			}
			$successSpan.removeClass('hidden');
		}
	},
	updateWishList: function () {
		var removedProductName = sessionStorage.getItem('removedProductName');
		if(removedProductName){
			$('.removedProductName').text(removedProductName);
			$('#product-success-alert').removeClass('hidden');
			sessionStorage.removeItem('removedProductName');
		}
		$('.updateWishlistBtn').click(function () {
			var $this = $(this);
			var $form = $(this).closest('form');
			var data = BLC.serializeObject($form);
			data = eOptionData.set($this, data);
			var errorTemplate = $form.find('.grm-alert-danger');
			var qty = parseInt($form.find('.quantityOrdered').val());
			if(isNaN(qty)){
				errorTemplate.find('.grm-alert-message').html($('input[name="valid_qty_msg"]').val());
				errorTemplate.removeClass('hidden');
				return;
			}
			data['quantity'] = qty;
			errorTemplate.addClass('hidden');
			eActivityIndicator.show();
			BLC.ajax({
				url: 'wishlist/updateWishlist',
				async: true,
				type: 'POST',
				dataType: 'json',
				data: data,
				error: function () {
					eActivityIndicator.hide();
					errorTemplate.find('.grm-alert-message').html('Something went wrong.');
					errorTemplate.removeClass('hidden');
				}
			}, function (data) {
				if (data.error) {
					if (data.error == 'noSkuForSelectedOptions') {
						errorTemplate.find('.grm-alert-message').html($('#noSkuForSelectedOptions').html());
						errorTemplate.removeClass('hidden');
					} else if (data.error == 'priceNotAvailable') {
						errorTemplate.find('.grm-alert-message').html($('#priceNotAvailable').html());
						errorTemplate.removeClass('hidden');
					} else if (data.error == 'wishlistUpdateError') {
						errorTemplate.find('.grm-alert-message').html(data.errorMessage);
						errorTemplate.removeClass('hidden');
					} else if (data.error == 'minQtyError') {
						errorTemplate.find('.grm-alert-message').html(data.favoriteCustomizedMinimumQtyError);
						errorTemplate.removeClass('hidden');
					}else{
						if(data.errorMessage){
							errorTemplate.find('.grm-alert-message').html(data.errorMessage);
						}else{
							errorTemplate.find('.grm-alert-message').text('Something went wrong');
						}
						errorTemplate.removeClass('hidden');
					}
					eActivityIndicator.hide();
				} else {
					if(data.hasOwnProperty('removedProductName') && data.removedProductName){
						sessionStorage.setItem('removedProductName', data.removedProductName);
					}
					//Endor #3624 start
					var sortBy = $('#wishlist_sortMethodSelector').find(":selected").attr("value");
					
					if (typeof sortBy != 'undefined') {
						window.location.href = BLC.servletContext + '/account/wishlist?sort=' + sortBy;
					}
					else {
						location.reload();
					}
					//Endor 3624 end
				}
			});
		});
	},
	addToFavoritesGA: function (product, name, quantity) {
		var productId = "Unknown";
		var productName = "Unknown";
		var productQty = 0;

		if (product != null) {
			if (product != null) {
				productId = product;
			}
			if (product != null) {
				productName = name;
			}
			if (quantity != null) {
				productQty = quantity;
			}
		}

		if (typeof ga == 'function') {
			ga('master.send', 'event', "add-to-favorites", "click", productId, productQty);
		}
		// if (typeof gtag == 'function') {
		// 	console.log('creating gtag for add to favorites '+product+ ' '+ name +' '+ quantity );
		// 	gtag("event", "add_to_wishlist", {
		// 	  items: [
		// 	    {
		// 	      item_id: productId,
		// 	      item_name: productName,
		// 	      quantity: productQty
		// 	    }
		// 	  ],
		// 	});
		// }
	},

	updateFavoritesGA: function (product, quantity, id) {
		var productId = "Unknown";
		var previousQty = 0;
		var newQty = 0;
		var qtyDiff = 0;

		if (product != null) {
			productId = product;
		}
		if (quantity != null) {
			previousQty = quantity;
		}
		if ($('#' + id + ' #totalQty').val() != null) {
			newQty = $('#' + id + ' #totalQty').val();
		}

		qtyDiff = newQty - previousQty;

		if (typeof ga == 'function') {
			ga('master.send', 'event', "update-favorites", "click", productId, qtyDiff);
		}
		// if (typeof gtag == 'function') {
		// 	console.log('creating gtag for updating favorites '+product+ ' '+ quantity +' '+ id);
		// 	gtag("event", "update_wishlist", {
		// 	  items: [
		// 	    {
		// 	      item_id: productId,
		// 	      quantity: qtyDiff
		// 	    }
		// 	  ],
		// 	});
		// }
	},
	removeFavoritesGA: function (product, qty) {
		var productId = "Unknown";
		var productQty = "Unknown";

		if (product != null) {
			productId = product;
		}
		if (qty != null) {
			productQty = qty;
		}

		if (typeof ga == 'function') {
			ga('master.send', 'event', "removeFavoritesGA", "click", productId, productQty);
		}
		// if (typeof gtag == 'function') {
		// 	console.log('creating gtag for removing favorites '+product +' '+ qty);
		// 	gtag("event", "remove_wishlist", {
		// 	  items: [
		// 	    {
		// 	      item_id: productId,
		// 	      quantity: productQty
		// 	    }
		// 	  ],
		// 	});
		// }
	},
	moveToCartGA: function (product, qty) {
		var productId = "Unknown";
		var productQty = "Unknown";

		if (product != null) {
			productId = product;
		}
		if (qty != null) {
			productQty = qty;
		}

		if (typeof ga == 'function') {
			ga('master.send', 'event', "move-favorites-to-cart", "click", productId, productQty);
		}
		// if (typeof gtag == 'function') {
		// 	console.log('creating gtag for moving favorites to cart'+product+' '+ qty);
		// 	gtag("event", "move_wishlist_to_cart", {
		// 	  items: [
		// 	    {
		// 	      item_id: productId,
		// 	      quantity: productQty
		// 	    }
		// 	  ],
		// 	});
		// }

	}

}



	//add_to_wishlist 
	$('.gtag-add-wishlist').on('click', function () {
					var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4];
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}			
					
					var gtagArr = $(this).find(".gtag_item_attributes").val();
					gtagArr = gtagArr.replaceAll("{", '["')
					gtagArr = gtagArr.replaceAll("}", '"]')
					gtagArr = gtagArr.replaceAll(",", '",')
					gtagArr = gtagArr.replaceAll(" ", ' "')
					var item_variant = JSON.parse(gtagArr).sort();

		gtag("event", "add_to_wishlist", {
			currency:  $(this).find(".gtag_currency").val(),
			value: Number($(this).find(".gtag_view_item_price").val()),
			items: [{
				item_id: $(this).find(".gtag_view_item_id").val(),
				quantity: Number($(this).find(".gtag_view_item_qty").val()),
				// has_options: $(this).find(".gtag_view_item_opt").val(),
				item_brand: $(this).find(".gtag_view_item_brand").val(),
				item_name: $(this).find(".gtag_view_item_name").val(),
				// item_variant: $(this).find(".gtag_item_attributes").val(),
				item_variant: item_variant,
				item_category: item_category,
				item_category2: item_category2,
				item_category3: item_category3,
				item_category4: item_category4,
				item_category5: item_category5,
				price: Number($(this).find(".gtag_view_item_price").val())
			}]
		});
	})
	//remove_from_wishlist
	$('.gtag-remove-wishlist').on('click', function () {
					var categories = $(this).find(".gtag_view_category").val();
					var	item_category; 
					var	item_category2;
					var	item_category3;
					var	item_category4;
					var	item_category5;				
					if(categories != null)
					{
						categoryTokens =  categories.split('/');
						if(categoryTokens[1] != null)
						{
							item_category =categoryTokens[1];
						}
						if(categoryTokens[2] != null)
						{
							item_category2 =categoryTokens[2];
						}
						if(categoryTokens[3] != null)
						{
							item_category3 =categoryTokens[3];
						}
						if(categoryTokens[4] != null)
						{
							item_category4 =categoryTokens[4];
						}
						if(categoryTokens[5] != null)
						{
							item_category5 =categoryTokens[5];
						}
					}			


		//TODO: no remove from wishlist function exists for gtag.  find out if one does exist
					var gtagArr = $(this).find(".gtag_item_attributes").val();
					gtagArr = gtagArr.replaceAll("{", '["')
					gtagArr = gtagArr.replaceAll("}", '"]')
					gtagArr = gtagArr.replaceAll(",", '",')
					gtagArr = gtagArr.replaceAll(" ", ' "')
					var item_variant = JSON.parse(gtagArr).sort();

		gtag("event", "remove_from_wishlist", {
			currency:  $(this).find(".gtag_currency").val(),
			value: Number($(this).find(".gtag_view_item_price").val()),
			items: [{
				item_id: $(this).find(".gtag_view_item_id").val(),
				quantity: Number($(this).find(".gtag_view_item_qty").val()),
				// has_options: $(this).find(".gtag_view_item_opt").val(),
				item_brand: $(this).find(".gtag_view_item_brand").val(),
				item_name: $(this).find(".gtag_view_item_name").val(),
				// item_variant: $(this).find(".gtag_item_attributes").val(),
				item_variant: item_variant,
				item_category: item_category,
				item_category2: item_category2,
				item_category3: item_category3,
				item_category4: item_category4,
				item_category5: item_category5,
				price: Number($(this).find(".gtag_view_item_price").val())
			}]
		});
	})
;
/*
ePayment
*/
var ePayment = {
    init: function () {
    	
        var
        afterCertsTotal = $(".afterCertsTotal").val(),
        rawAfterCertsTotal = $(".rawAfterCertsTotal").val();

        function ajaxPaymentMethodUpdate() {

            // eSpinners.show('spinner-wrapper', '.order-summary');
            eActivityIndicator.show();
            BLC.ajax({
                url: "/ecommerce/checkout/payment/update",
                type: "POST",
                data: $('#payment-form').serialize()
            }, function (data) {
                // console.log(data)
                //update the order summary
                $('.order-summary').html(data);

                // check for errors
                var shippingTaxCalculationErrorMsg = $(".shippingTaxCalculationErrorMsg").val();
                if (shippingTaxCalculationErrorMsg != "") {
                    $("#checkout-error-alert").removeClass("hidden");
                    $("#paymentErrorHolder").text(shippingTaxCalculationErrorMsg);
                } else {
                    $("#checkout-error-alert").addClass('hidden');
                    $("#paymentErrorHolder").text("");
                }

                // clear certificates from the billing page
                var $certs = $('.cert-number'),
                    certsLength = $certs.length,
                    clearAppliedCertificates = $(".clearAppliedCertificates").val();

                if (clearAppliedCertificates === 'true') {
                    $.each($certs, function (i, cert) {
                        if (i < certsLength - 1) {
                            cert.remove();
                        }
                    });
                }

                //update credit card signature with latest order total
                var
                    afterCertsTotal = $(".afterCertsTotal").val(),
                    rawAfterCertsTotal = $(".rawAfterCertsTotal").val();
                
                if(rawAfterCertsTotal == '0'){
                	$("#credit-card-total").text("$0.00");
                    $('#ccPaymentOption').prop('checked', false);
                    $('#invoiceOption').prop('checked', false);
                }else if (afterCertsTotal > '') {

                    $("#credit-card-total").text(afterCertsTotal);
                    $("input[name=amount]").attr('value', rawAfterCertsTotal);

//                    var csData = {
//                        amount: rawAfterCertsTotal,
//                        transaction_uuid: $("input[name=transaction_uuid]").val(),
//                        locale: $("input[name=locale]").val(),
//                        reference_number: $("input[name=reference_number]").val(),
//                        currency: $("input[name=currency]").val(),
//                        signed_field_names: $("input[name=signed_field_names]").val(),
//                        signed_date_time: $("input[name=signed_date_time]").val()
//                    };
//3969 - Do not invoke signature update until submission
//                    BLC.ajax({
//                        url: BLC.servletContext + "/checkout/payment/ajaxGenerateCybersourceSignature",
//                        type: "POST",
//                        data: csData,
//                        dataType: "json"
//                    }, function (data) {
//                        $("input[name=signature]").attr('value', data.signature);
//                    });
                }

                // eSpinners.hide('spinner-wrapper');
                eActivityIndicator.hide();
            });
        }

        $('#mobileTotal').text($('.order-summary-ordertotal').text());

        // initalizer and settings for credit card plugin
        if ($("#creditCard").length) {

            if ($("html").hasClass("lt-ie9")) {
                //don't let IE8 users type in more than 16 digits
                $("#card_number_unsanitized").attr("maxlength", "16");
            } else {
                $('#payment-form').card({
                    container: '.card-wrapper',

                    width: 350,
                    formatting: true,

                    messages: {
                        validDate: 'valid\ndate',
                        monthYear: 'mm-yyyy'
                    },

                    formSelectors: {
                        numberInput: '#card_number_unsanitized',
                        expiryInput: '#card_expiry_date',
                        cvcInput: '#card_cvn',
                        nameInput: '#bill_to_address_forename'
                    },

                    values: {
                        number: '•••• •••• •••• ••••',
                        name: 'Full Name',
                        expiry: '••-••••',
                        cvc: '•••'
                    }
                });
            }
            // check what kind of card the user has and put it into a hidden field
            var
                $cardTypeHiddenField = $('#card_type'),
                $cardNumberHiddenField = $('#card_number'),
                $cardNumber = $('#card_number_unsanitized'),
                $cardType = $('.jp-card'),
                $cardDateFieldM = $("#exp_month"),
                $cardMonth = $("#exp_month").val(),
                $cardDateFieldY = $("#exp_year"),
                $cardYear = $("#exp_year").val(),
                $displayDate = $(".jp-card-expiry.jp-card-display"),
                $cardDateFieldSanitized = $("#card_expiry_date"),
                $ie8cardType = $("#card_type_ie8");

            // when user starts entering their card number check for the card class then add that card class to the hidden field
            if ($("html").hasClass("lt-ie9")) {
                //don't let IE8 do the onblur
                $cardNumber.on('blur', function () {
                    var val = $(this).val();
                    $cardNumberHiddenField.val(val);
                });
            } else {
                $cardNumber.on('blur', function () {
                    var jpStr = $cardType.attr('class');
                    var type;
                    var ccTypes = {
                        "visa": "001",
                        "mastercard": "002",
                        "amex": "003",
                        "discover": "004"
                    };

                    for (var k in ccTypes) {
                        var value = ccTypes[k];
                        if (jpStr.search(k) >= 0) type = value;
                    }

                    $cardTypeHiddenField.attr('value', type);

                    //strips out the spaces to sanitize the card number for processing
                    var val = $(this).val();
                    if (isNaN(val)) {
                        val = val.replace(/[^0-9\.]/g, '');
                        if (val.split('.').length > 2) val = val.replace(/\.+$/, "");
                    }
                    $cardNumberHiddenField.val(val);
                });
            }

            $ie8cardType.on('change', function () {
                var val = $(this).val();
                var ccTypes = {
                    "visa": "001",
                    "mastercard": "002",
                    "amex": "003",
                    "discover": "004"
                };

                $cardTypeHiddenField.val(val);
            });

            //handle the dropdowns
            $cardDateFieldM.on('change', function () {
                $cardMonth = $(this).val();
                $cardDateFieldSanitized.val($cardMonth + "-" + $cardYear);
                $displayDate.text($cardMonth + "-" + $cardYear).addClass("jp-card-focused");
            });

            $cardDateFieldY.on('change', function () {
                $cardYear = $(this).val();
                $cardDateFieldSanitized.val($cardMonth + "-" + $cardYear);
                $displayDate.text($cardMonth + "-" + $cardYear).addClass("jp-card-focused");
            });



        }

        var certificateRegex = /^(.*)(\d)+$/i;
        var certificateIndex = $('.cert-number').length;

        // Uses the returned certificate JSON data to populate the Order summmary
        function updateOrderSummary(result) {

            var $paymentDetails = $('.payment-details');
            $paymentDetails.find('.subtotalAmount').html('<strong>' + result.subTotal + '</strong>');
            $paymentDetails.find('.certTotal').html('<strong>' + result.certTotal + '</strong>');
            $paymentDetails.find('.shippingAmount').html('<strong>' + result.shippingHandlingTotal + '</strong>');
            $paymentDetails.find('.taxAmount').html('<strong>' + result.taxTotal + '</strong>');
            $paymentDetails.find('.totalAmount').html('<strong>' + result.cartTotal + '</strong>');

            BLC.ajax({
                url: BLC.servletContext + "/checkout/order/summary",
                type: "POST"
            }, function (data) {
                // $('#orderSummaryInfo').html(data);
                $('.order-summary').html(data);
            });

            var
                $ccTotal = $("#credit-card-total"),
                $paymentForm = $('#payment-form'),
                $payOptions = $('[name="pay-options"]'),
                $btnPayment = $('.btn-payment');
            	
            var afterCertsTotal = result.afterCertsTotal; // example: $9.99
            var rawAfterCertsTotal = result.rawAfterCertsTotal; // example: {amount: 9.99, currency: "USD"}
            var rawAfterCertsTotalAmt = result.rawAfterCertsTotalAmt; // example: 9.99
            
            if (rawAfterCertsTotalAmt == '0.00') {
            	$ccTotal.text('$0.00');
                $('[name="pay-options"]').each(function() {
                	$(this).addClass('pay-blocker');
                });
                $paymentForm.addClass('cert-block');
                $('#ccPaymentOption').prop('checked', false);
                $('#invoiceOption').prop('checked', false);
                $('.payment-options-container').addClass('hide');
                $btnPayment.data('payment-method', '');
            } else {

                var
                    $firstPaymentRadio = $('.non-cert-payment input[value="paymentMethod"]:first'),
                    firstPaymentMethod = $firstPaymentRadio.data('payment-method');
                $ccTotal.text(afterCertsTotal);
                $('[name="pay-options"]').each(function(){
                	$(this).removeClass('pay-blocker');
                });
                $('.payment-options-container').removeClass('hide');
                if($('#creditCard:visible').length){
                    $('#ccPaymentOption').click();
                }
                if($('#invoiceOptions:visible').length){
                    $('#invoiceOption').click();
                }
                //$('#ccPaymentOption').prop('checked', true);
                //$("#creditCard").removeClass("hide");
                //$('#invoiceOption').prop('checked', false);
                //$("#invoiceOptions").addClass("hide");
                $paymentForm.removeClass('cert-block');
                $btnPayment.data('payment-method', firstPaymentMethod);


                $("input[name=amount]").attr('value', rawAfterCertsTotalAmt);

//                var csData = {
//                    amount: rawAfterCertsTotalAmt,
//                    transaction_uuid: $("input[name=transaction_uuid]").val(),
//                    locale: $("input[name=locale]").val(),
//                    reference_number: $("input[name=reference_number]").val(),
//                    currency: $("input[name=currency]").val(),
//                    signed_field_names: $("input[name=signed_field_names]").val(),
//                    signed_date_time: $("input[name=signed_date_time]").val()
//                };
//3969 - Do not invoke signature update until submission
//                BLC.ajax({
//                        url: BLC.servletContext + "/checkout/payment/ajaxGenerateCybersourceSignature",
//                        type: "POST",
//                        data: csData,
//                        dataType: "json"
//                    },
//                    function (result) {
//                       $("input[name=signature]").attr('value', result.signature);
//                    });
            }
        }

        // clones the input row and incriments the id by 1
        function createNewCertGroup($certHtml) {

            var
                $newCert = $certHtml.clone(true, true),
                $certNumber = $newCert.find("input[type='text']");

            $newCert.appendTo('.cert-container');
            $certNumber.val('');
            $certNumber.attr("id", "certificate" + certificateIndex);

            certificateIndex++;
        }


        function certApply() {
            var that = this;

            var
                $form = $('form#certificate-info-form'),
                $certHtml = $(that).closest('.cert-number'),
                $certNumber = $certHtml.find('.certNumber');

            // eSpinners.show('spinner-wrapper', '.order-summary');
            eActivityIndicator.show();

            BLC.ajax({
                    url: $form.attr('action'),
                    type: "POST",
                    data: {
                        certNumber: $certNumber.val(),
                        certificate: $certNumber.val().trim(),
                        id: $certNumber.attr('id')
                    },
                    dataType: "json"
                },
                function (result) {

                    if (result.certError) {

                        $certHtml.find('.cert-group').addClass('has-error');
                        $certHtml.find('.error-msg span').text(result.certError);
                        $certHtml.find('.error-msg').removeClass('hidden');
                        

                        // $thisFieldError = $certHtml.find('.cert-group.field-error');
                        // eFieldErrors.msgs();
                        
                        // if(!$certHtml.find('.error-msg').is(':visible')) {
                        	// eFieldErrors.msgToggle($thisFieldError);
                        // }

                    } else if ($certNumber.val().length !== 0) {

                        $certHtml.find('.cert-group').removeClass('has-error');
                        $certHtml.find('.error-msg span').text('');
                        $certHtml.find('.error-msg').addClass('hidden');
						
						//Endor 4109 start
						$certHtml.find('.certAmountIssued').text(result.certBalance);
                        $certHtml.find('.certAmountApplied').text(result.certBalanceApplied);
                        $certHtml.find('.certAmountRemaining').text(result.certBalanceRemaining);
						//Endor 4109 end
						
                        // update the cart summary
                        updateOrderSummary(result);

                        // clone the input and increase the id number by 1
                        createNewCertGroup($certHtml);

                        if ($('.cert-number').length > 1) {
                            $certHtml.find('.certApplyContainer').addClass('hide');
                            $certHtml.find('.certRemoveContainer').removeClass('hide');
                            $certHtml.find('.certAmount').removeClass('hide');
                            $certNumber.attr('disabled', 'disabled');
                            //Endor 4109 start
                            $certHtml.find('.certBalance').removeClass('hide');
                            $certHtml.find(".certAmtBalance").last().addClass('hide');
                            $certHtml.find('.certAmtBalance').addClass('hide');
                            $('.certAmtBalance.balanceDisplay').addClass('hide');
                            $('.certAmtBalance.balanceDisplay').removeClass('balanceDisplay');
                            //Endor 4109 end
                        }
                    }
                    // eSpinners.hide('spinner-wrapper');
                    eActivityIndicator.hide();
                });
        }

        function certRemove() {

            var that = this;

            // eSpinners.show('spinner-wrapper', '.order-summary');
            eActivityIndicator.show();

            var
                $form = $('form#certificate-info-form'),
                $certHtml = $(that).closest('.cert-number'),
                $certNumber = $certHtml.find('.certNumber');

            BLC.ajax({
                    url: $form.attr('action'),
                    type: "POST",
                    data: {
                        certNumber: $certNumber.val(),
                        certificate: $certNumber.val(),
                        id: $certNumber.attr('id'),
                        remove: 'true'
                    },
                    dataType: "json"
                },
                function (result) {

                    $certHtml.remove();

                    if ($('.cert-number').length > 1) {

                        $certHtml.last().find('.certRemoveContainer').addClass('hide');
                        $certHtml.last().find('.certApplyContainer').removeClass('hide');

                    } else if ($('.cert-number').length === 1) {
                        $certNumber.val('');
                        $(that).closest('.certRemoveContainer').addClass('hide');
                        $(that).closest($certHtml).find('.certApplyContainer').removeClass('hide');
                    }

                    if (result.certError) {
                        $certHtml.find('.error-msg span').text(result.certError);
                        $certHtml.find('.cert-group').addClass('field-error');

                        $thisFieldError = $certHtml.find('.cert-group.field-error');
                        eFieldErrors.msgs();
                        eFieldErrors.msgToggle($thisFieldError);
                    } else {
                        updateOrderSummary(result);
                    }
                    // eSpinners.hide('spinner-wrapper');
                    eActivityIndicator.hide();
                });

        }

        //Endor 4109 Start
        function certBalance() {
            var that = this;
            var
                $form = $('form#certificate-info-form'),
                $certHtml = $(that).closest('.cert-number'),
                $certNumber = $certHtml.find('.certNumber');

            // eSpinners.show('spinner-wrapper', '.order-summary');
            eActivityIndicator.show();

            BLC.ajax({
                    url: $form.attr('action'),
                    type: "POST",
                    data: {
                        certNumber: $certNumber.val(),
                        certificate: $certNumber.val().trim(),
                        id: $certNumber.attr('id'),
                        balance: 'true'
                    },
                    dataType: "json"
                },
                function (result) {

                    if (result.certError) {

                        $certHtml.find('.cert-group').addClass('has-error');
                        $certHtml.find('.error-msg span').text(result.certError);
                        $certHtml.find('.error-msg').removeClass('hidden');

                    } else if ($certNumber.val().length !== 0) {

                        $certHtml.find('.cert-group').removeClass('has-error');
                        $certHtml.find('.error-msg span').text('');
                        $certHtml.find('.error-msg').addClass('hidden');

                        $certHtml.find('.certAmountBalance').text(result.certBalance);
                        $certHtml.find('.certAmtBalance').removeClass('hide');
                        $certHtml.find('.certAmtBalance').removeClass('balanceDisplay');
                        $certHtml.find('.certAmtBalance').addClass('balanceDisplay');
                    }
                    // eSpinners.hide('spinner-wrapper');
                    eActivityIndicator.hide();
                });
        }
        
        $(".certBalance").on("click", certBalance);
        //Endor 4109 end
        $('.certApply').on("click", certApply);       
        $(".certRemove").on("click", certRemove);

        // check for radio button payment type and hide show proper ul
        $('input[name="paymentMethod"]').on('click', function (event) {
            var
                $inputClassName = $(event.target).attr('class'),
                $paymentType = $('.payment-type'),
                $paymentBtn = $('.btn-payment'),
                paymentMethod = $(event.target).data('payment-method'),
                siteAllowsCertificates = $('.siteAllowsCertificates').val(),
                isDealerSite = $('.isDealerSite').val(),
                $creditCardMessage = $("#creditCardMessage").text();;

            $paymentType.addClass('hide');
            $paymentType.removeClass('validate-group')

            $paymentBtn.data('paymentMethod', paymentMethod);

            if ($inputClassName === 'creditCardRadio') {
                $('#creditCard').removeClass('hide');
                $('#creditCard').addClass('validate-group');
                $(".btn-checkout").attr({
                    "data-toggle": "tooltip",
                    "data-placement": "top",
                    "data-original-title": $creditCardMessage
                }).tooltip();
                if (siteAllowsCertificates === 'true') {
                    $('.apply-certificate-wrapper').removeClass('hide');
                } else {
                    $('.apply-certificate-wrapper').addClass('hide');
                }
            } else if ($inputClassName === 'invoiceOptionsRadio') {
                $('#invoiceOptions').removeClass('hide');
                $('#invoiceOptions').addClass('validate-group');
                $(".btn-checkout").attr({
                    "data-toggle": "",
                    "data-placement": "",
                    "data-original-title": ""
                }).tooltip('disable');
                if (siteAllowsCertificates === 'true') {
                    if (isDealerSite === 'true') {
                        $('.apply-certificate-wrapper').addClass('hide');
                    } else {
                        $('.apply-certificate-wrapper').removeClass('hide');
                    }
                } else {
                    $('.apply-certificate-wrapper').addClass('hide');
                }
            }

            // $paymentType.each(function () {
            //     var $this = $(this);
            //     if (!$this.hasClass('validate-group')) {
            //         $this.find('.field-error').removeClass('field-error');
            //         $this.find('input,select,textarea').attr('disabled', 'disabled');
            //     } else {
            //         $this.find('input,select,textarea').removeAttr('disabled');
            //     }
            // });
            $('.grm-form-group').removeClass('has-error');
            //Update shipping and tax, based on payment method selected
            ajaxPaymentMethodUpdate();

        });

        $(document).on('click', '.btn-payment', function (e) {

            e.preventDefault();

            // eSpinners.show('spinner-wrapper', '.order-summary');
            eActivityIndicator.show();

            var
                $btn = $(this),
                $pane = $('#payment'),
                valid = true;

            $btn.attr('disabled', 'disabled');

            $('#bill_to_address_country').removeAttr('disabled');
            $('#bill_to_address_state').removeAttr('disabled');

            var buyingFor = $('#payment-form').find('input[name="buying_for"]:checked').val()
            var paymentMethod = $('#payment-form').find('input[name="paymentMethod"]:checked').val();

            $(".grm-alert-danger").addClass("hidden");
            $('.grm-form-group').removeClass('has-error');

            if ($('#ebuyingClass').is(":visible")) {
                if (buyingFor == null || buyingFor == "") {
                    $('#buyingForErrorHolder').removeClass('hidden');
                    // var $fieldError = $('#payment-form').find('#buyingForErrorHolder').parent('.col-xs-12 .required');
                    // $fieldError.addClass('col-xs-12 required field-error');
                    // $errorMsgSpan = $fieldError.find('.error-msg span');
                    // $errorMsgSpan.css('display:block;')
                    // eFieldErrors.msgToggle($fieldError);
                    // $("#buyingForErrorHolder").find("span");
                    // $("#buyingForErrorHolder").css("display", "block");

                    // errorOccured = true;
                    $btn.removeAttr('disabled');
                    eActivityIndicator.hide();
                    return;
                }else{
                    $('#buyingForErrorHolder').addClass('hidden');
                }
            }
            
            if (paymentMethod == 'CreditCard') {
                $form = $('#payment-form');
                var buyingFor = $form.find('input[name="buying_for"]:checked').val();

                var cardNumber = $form.find('input[name="card_number_unsanitized"]').val().trim();
                var name = $form.find('input[name="bill_to_address_forename"]').val().trim();
                var expMonth = $form.find('select[id="exp_month"]').val().trim();
                var expYear = $form.find('select[name="exp_year"]').val().trim();
                var cardcvn = $form.find('input[name="card_cvn"]').val().trim();

                var countryName = $form.find('select[name="bill_to_address_country"]').val().trim();
                var addressName = $form.find('input[name="bill_to_forename"]').val().trim();
                var surName = $form.find('input[name="bill_to_surname"]').val().trim();
                var addrLine1 = $form.find('input[name="bill_to_address_line1"]').val().trim();
                var city = $form.find('input[name="bill_to_address_city"]').val().trim();
                var zip = $form.find('input[name="bill_to_address_postal_code"]').val().trim();
                var state = $form.find('select[name="bill_to_address_state"]').val().trim();
                var email = $form.find('input[name="bill_to_email"]').val().trim();


                var errorOccured = false;

                $form.find('span[name="error_bill_to_address_postal_code_required"]').addClass('hidden');
                $form.find('span[name="error_bill_to_address_postal_code_invalid_ca"]').addClass('hidden');
                $form.find('span[name="error_bill_to_address_postal_code_invalid_us"]').addClass('hidden');
                $form.find('span[name="error_bill_to_email_required"]').addClass('hidden');
                $form.find('span[name="error_bill_to_email_invalid"]').addClass('hidden');

                if(expYear && expMonth){
                    var d1 = new Date(expYear, expMonth);
                    var d2 = new Date();
                    if(Date.parse(d1) < Date.parse(d2)){
                        $form.find('select[id="exp_year"]').parents('.grm-form-group').addClass('has-error');
                        $form.find('select[id="exp_month"]').parents('.grm-form-group').addClass('has-error');
                        errorOccured = true;
                    }
                }

                // if ($('#ebuyingClass').css('display') != 'block') {
                    if($form.is(":visible")){
		                if (cardNumber == null || cardNumber == "") {
		                    var $fieldError =$form.find('input[name="card_number_unsanitized"]').parent('.grm-form-group');
		                    $fieldError.addClass('has-error');
		                    // $errorMsgSpan = $fieldError.find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		                if (name == null || name == "") {
                            var $fieldError = $form.find('input[name="bill_to_address_forename"]').parent('.grm-form-group');
                            $fieldError.addClass('has-error');
		                    // $fieldError.addClass('col-xs-12 required field-error');
		                    // $errorMsgSpan = $fieldError.find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		                if (expMonth == null || expMonth == "") {
		                    var $fieldError = $form.find('select[id="exp_month"]').parents('.grm-form-group');
		                    $fieldError.addClass('has-error');
		                    // $errorMsgSpan = $('#payment-form').find('select[id="exp_month"]').parents('.select-container.validateme').find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		                if (expYear == null || expYear == "") {
		                    var $fieldError = $form.find('select[id="exp_year"]').parents('.grm-form-group');
		                    $fieldError.addClass('has-error');
		                    // $errorMsgSpan = $('#payment-form').find('select[id="exp_year"]').parents('.select-container.validateme').find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		                if (cardcvn == null || cardcvn == "") {
		                    var $fieldError = $form.find('input[name="card_cvn"]').parent('.grm-form-group');
		                    $fieldError.addClass('has-error');
		                    // $errorMsgSpan = $fieldError.find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		
		                if (countryName == null || countryName == "" || "NONE" == countryName) {
                            var $fieldError = $form.find('select[name="bill_to_address_country"]').parents('.grm-form-group');
                            $fieldError.addClass('has-error');
		                    // $fieldError.addClass('field-error');
		                    // $errorMsgSpan = $('#payment-form').find('select[name="bill_to_address_country"]').parents('.select-container.validateme').find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		
		                if (addressName == null || addressName == "") {
                            var $fieldError = $form.find('input[name="bill_to_forename"]').parent('.grm-form-group');
                            $fieldError.addClass('has-error');
		                    // $fieldError.addClass('col-xs-12 required field-error');
		                    // $errorMsgSpan = $fieldError.find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		
		
		                if (surName == null || surName == "") {
                            var $fieldError = $form.find('input[name="bill_to_surname"]').parent('.grm-form-group');
                            $fieldError.addClass('has-error');
		                    // $fieldError.addClass('col-xs-12 required field-error');
		                    // $errorMsgSpan = $fieldError.find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		
		
		                if (addrLine1 == null || addrLine1 == "") {
                            var $fieldError = $form.find('input[name="bill_to_address_line1"]').parent('.grm-form-group');
                            $fieldError.addClass('has-error');
		                    // $fieldError.addClass('col-xs-12 required field-error');
		                    // $errorMsgSpan = $fieldError.find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		
		
		                if (city == null || city == "") {
                            var $fieldError = $form.find('input[name="bill_to_address_city"]').parent('.grm-form-group');
                            $fieldError.addClass('has-error');
		                    // $fieldError.addClass('col-xs-12 required field-error');
		                    // $errorMsgSpan = $fieldError.find('.error-msg span');
		                    // $errorMsgSpan.css('display:block;')
		                    // eFieldErrors.msgToggle($fieldError);
		                    errorOccured = true;
		                }
		
		
		                if (countryName != null && (countryName == "CA" || countryName == "US")) {
		                    if (zip == null || zip == "") {
                                var $fieldError = $form.find('input[name="bill_to_address_postal_code"]').parent('.grm-form-group');
                                $fieldError.addClass('has-error');
                                $fieldError.find('span[name="error_bill_to_address_postal_code_required"]').removeClass('hidden');
		                        errorOccured = true;
		                    }
		                }
		
		
		                if (countryName != null && countryName == "CA" && zip != null && zip != "") {
			                // must match the pattern A9A 9A9 or A9A-9A9 or A9A9A9
		                    var postalCodeRegex = /^[A-Z][0-9][A-Z][-\s]?[0-9][A-Z][0-9]$/;
		                    if (!postalCodeRegex.test(zip)) {
                                var $fieldError = $form.find('input[name="bill_to_address_postal_code"]').parent('.grm-form-group');
                                $fieldError.addClass('has-error');
                                $fieldError.find('span[name="error_bill_to_address_postal_code_invalid_ca"]').removeClass('hidden');
		                        errorOccured = true;
		                    };
		                }
		
		
		                if (countryName != null && countryName == "US" && zip != null && zip != "") {
			                // must match the pattern 99999 or 99999-9999
		                    var postalCodeRegex = /^[0-9]{5}(-[0-9]{4})?$/;
		                    if (!postalCodeRegex.test(zip)) {
                                var $fieldError = $form.find('input[name="bill_to_address_postal_code"]').parent('.grm-form-group');
                                $fieldError.addClass('has-error');
                                $fieldError.find('span[name="error_bill_to_address_postal_code_invalid_us"]').removeClass('hidden');
		                        errorOccured = true;
		                    };
		                }
		
		
		                if (countryName != null && (countryName == "CA" || countryName == "US")) {
		                    if (state == null || state == "" || "NONE" == state) {
                                var $fieldError = $form.find('select[name="bill_to_address_state"]').parents('.grm-form-group');
                                $fieldError.addClass('has-error');
		                        errorOccured = true;
		                    }
		                }
		                

						BLC.ajax({
							url: BLC.servletContext + "/checkout/payment/billingAddressValidation",
							type: "POST",
							async: false,
							dataType: "json",
							data: $('#payment-form').serialize()
						}, function (data) {
							if (data.error_text) {
								errorOccured = true;
								if(data.addressLine1_Empty_Err){
									var $fieldError = $form.find('input[name="bill_to_address_line1"]').parent('.grm-form-group');
		                            $fieldError.addClass('has-error');
								}
								if(data.fname_length_Err){
									$form.find('input[name="bill_to_forename"]').parent('.grm-form-group').find('.error').text(data.fname_length_Err);
									$form.find('input[name="bill_to_forename"]').parent('.grm-form-group').addClass('has-error');
								}
								
								if(data.lname_length_Err){
									$form.find('input[name="bill_to_surname"]').parent('.grm-form-group').find('.error').text(data.lname_length_Err);
									$form.find('input[name="bill_to_surname"]').parent('.grm-form-group').addClass('has-error');
								}
								
								if(data.addressLine1_length_Err){
									$form.find('input[name="bill_to_address_line1"]').parent('.grm-form-group').find('.error').text(data.addressLine1_length_Err);
									$form.find('input[name="bill_to_address_line1"]').parent('.grm-form-group').addClass('has-error');
								}
								
								if(data.addressLine2_length_Err){
									$form.find('input[name="bill_to_address_line2"]').parent('.grm-form-group').find('.error').text(data.addressLine2_length_Err);
									$form.find('input[name="bill_to_address_line2"]').parent('.grm-form-group').addClass('has-error');
								}
								
								if(data.city_length_Err){
									$form.find('input[name="bill_to_address_city"]').parent('.grm-form-group').find('.error').text(data.city_length_Err);
									$form.find('input[name="bill_to_address_city"]').parent('.grm-form-group').addClass('has-error');
								}
								
								if(data.email_invalid){
									var $fieldError = $form.find('input[name="bill_to_email"]').parent('.grm-form-group');
									$fieldError.addClass('has-error');
									$fieldError.find('span[name="error_bill_to_email_invalid"]').removeClass('hidden');
									
								}
								if(data.email_max_length){
									var $fieldError = $form.find('input[name="bill_to_email"]').parent('.grm-form-group');
									$fieldError.addClass('has-error');
									$fieldError.find('span[name="error_bill_to_email_max_length_70"]').removeClass('hidden');
									
								}
								if(data.email_is_empty){
									var $fieldError = $form.find('input[name="bill_to_email"]').parent('.grm-form-group');
									$fieldError.addClass('has-error');
									$fieldError.find('span[name="error_bill_to_email_required"]').removeClass('hidden');
									
								}
								
								if(data.invalid_postalCode){
									var $fieldError = $form.find('input[name="bill_to_address_postal_code"]').parent('.grm-form-group');
									$fieldError.find('span[name="error_bill_to_address_postal_code_invalid_us"]').text(data.invalid_postalCode);
									$fieldError.find('span[name="error_bill_to_address_postal_code_invalid_us"]').removeClass('hidden');
									$fieldError.addClass('has-error');
								}
								if(data.phoneNumber_err){
									$form.find('input[name="bill_to_phone"]').parent('.grm-form-group').find('.error').text(data.phoneNumber_err);
									$form.find('input[name="bill_to_phone"]').parent('.grm-form-group').addClass('has-error');
								}
								
							}
						});
					
		
		                /*if (email == null || email == "") {
                            var $fieldError = $form.find('input[name="bill_to_email"]').parent('.grm-form-group');
                            $fieldError.addClass('has-error');
                            $fieldError.find('span[name="error_bill_to_email_required"]').removeClass('hidden');
		                    errorOccured = true;
		                } else {
							BLC.ajax({
								url: BLC.servletContext + "/checkout/payment/emailValidation",
								type: "POST",
								async: false,
								dataType: "json",
								data: {
									emailAddress: email
								}
							}, function (data) {
								if (data.error_text) {
									var $fieldError = $form.find('input[name="bill_to_email"]').parent('.grm-form-group');
									$fieldError.addClass('has-error');
									$fieldError.find('span[name="error_bill_to_email_invalid"]').removeClass('hidden');
									errorOccured = true;
								}
							});
						}*/
						
                    }
                // }

                // if ($('#ebuyingClass').is(":visible")) {
                //     if (buyingFor == null || buyingFor == "") {
                //         // var $fieldError = $('#payment-form').find('#buyingForErrorHolder').parent('.col-xs-12 .required');
                //         // $fieldError.addClass('col-xs-12 required field-error');
                //         // $errorMsgSpan = $fieldError.find('.error-msg span');
                //         // $errorMsgSpan.css('display:block;')
                //         // eFieldErrors.msgToggle($fieldError);
                //         // $("#buyingForErrorHolder").find("span");
                //         // $("#buyingForErrorHolder").css("display", "block");

                //         errorOccured = true;
                //     }

                // }

                // eFieldErrors.msgs();
                $btn.removeAttr('disabled');

                if (!errorOccured) {

                    BLC.ajax({
                        url: BLC.servletContext + "/checkout/payment/ajaxCCValidation",
                        type: "POST",
                        dataType: "json",
                        data: $('#payment-form').serialize()
                    }, function (data) {

                        if (data.error_text) {
                            // $('#payment-form').prepend('<div class="alert alert-danger">' + data.error_text + '</alert>');
                            $("#checkout-error-alert").removeClass("hidden");
                            $("#paymentErrorHolder").text(data.error_text);
                            valid = false;
                        }

                        if (data.paymentSubmitTo === 'cc') {

                            $('#invoiceOptions').find('input').attr('disabled', 'disabled');
                            $('#invoiceOptions').find('select').attr('disabled', 'disabled');

                            $('#bill_to_address_country').removeAttr('disabled');
                            $('#bill_to_address_state').removeAttr('disabled');

                            //$('#payment-form').submit();
//3969 - Update signature immediately prior to submission
						    var csData = {
						        amount: $("input[name=amount]").val(),
						        transaction_uuid: $("input[name=transaction_uuid]").val(),
						        locale: $("input[name=locale]").val(),
						        reference_number: $("input[name=reference_number]").val(),
						        currency: $("input[name=currency]").val(),
						        signed_field_names: $("input[name=signed_field_names]").val(),
						        signed_date_time: $("input[name=signed_date_time]").val(),
						        bill_to_forename: $("input[name=bill_to_forename]").val(),
						        bill_to_surname: $("input[name=bill_to_surname]").val()
						    };
						
						    BLC.ajax({
						            url: BLC.servletContext + "/checkout/payment/ajaxGenerateCybersourceSignature",
						            type: "POST",
						            data: csData,
						            dataType: "json"
						        },
						        function (result) {
						            $("input[name=signature]").attr('value', result.signature);
						            $("input[name=signed_field_names]").attr('value', result.signed_field_names);
						            $('#payment-form').submit();
						        });
//3969 - End
                        }
                        eActivityIndicator.hide();
                    });
                }else{
                    eActivityIndicator.hide();
                }
            } else {
                
                $form = $('#payment-form');
                var buyingFor = $form.find('input[name="buying_for"]:checked').val();
                var errorOccured = false;
                var resale = $('#resale');
                
                // if ($('#ebuyingClass').is(":visible")) {
                //     if (buyingFor == null || buyingFor == "") {
                //         var $fieldError = $('#payment-form').find('#buyingForErrorHolder').parent('.col-xs-12 .required');
                //         $fieldError.addClass('col-xs-12 required field-error');
                //         $errorMsgSpan = $fieldError.find('.error-msg span');
                //         $errorMsgSpan.css('display:block;')
                //         eFieldErrors.msgToggle($fieldError);
                //         $("#buyingForErrorHolder").find("span");
                //         $("#buyingForErrorHolder").css("display", "block");

                //         errorOccured = true;
                //     }
                // }

                if (resale.length < 0 && resale.is(":visible")) {
                    if (resale.val() == null) {
                        var $fieldError = $form.find('#resale').parents('.grm-form-group');
                        $fieldError.addClass('has-error');
                        // $fieldError.addClass('col-xs-12 required field-error');
                        // $errorMsgSpan = $fieldError.find('.error-msg span');
                        // $errorMsgSpan.css('display:block;')
                        // eFieldErrors.msgToggle($fieldError);

                        errorOccured = true;
                    }
                }

                // eFieldErrors.msgs();
                $btn.removeAttr('disabled');

                if (!errorOccured) {
                    BLC.ajax({
                        url: BLC.servletContext + "/checkout/payment/ajaxValidation",
                        type: "POST",
                        dataType: "json",
                        data: $('#payment-form').serialize()
                    }, function (data) {
                        console.log(data);
                        // return;
                        if (data.error_text) {
                            // $('#payment-form').prepend('<div class="alert alert-danger">' + data.error_text + '</alert>');
                            $("#checkout-error-alert").removeClass("hidden");
                            $("#paymentErrorHolder").text(data.error_text);
                            valid = false;
                        }

                        if (data.errors) {

                            if ($('#sameAsShipping').is(':checked')) {
                                $('#bill_to_address_country').attr('disabled', 'disabled');
                                $('#bill_to_address_state').attr('disabled', 'disabled');
                            }
                            var errors = data.errors;
                            for (var k in errors) {
                                var $fieldError = $('[name="' + errors[k].name + '"]').parents('.grm-form-group');
                                $fieldError.find('.error-msg-container .error').empty().text(errors[k].error_message);
                                $fieldError.addClass('has-error');
                                // var
                                //     $field = $('[name="' + errors[k].name + '"]'),
                                //     $fieldError = $field.closest('.required'),
                                //     $errorMsgSpan = $fieldError.find('.error-msg span'),
                                //     errorText = errors[k].error_message;

                                // $fieldError.addClass('field-error');
                                // $errorMsgSpan.empty().text(errorText);

                                // eFieldErrors.msgToggle($fieldError);
                            }
                            // eFieldErrors.msgs();
                            valid = false;

                            $btn.removeAttr('disabled');
                        }

                        if (valid && data.paymentSubmitTo === 'ps') {
                            $('.checkout-form:visible').submit();
                        }
                        eActivityIndicator.hide();
                    });

                }else{
                    eActivityIndicator.hide();
                }
            }
            // eSpinners.hide('spinner-wrapper');

        });
        
        /*
         * SHIPPING ADDRESS
         */

        var $checkoutAddressForm = $("#checkout-address-form");

        /* Toggle visibility of Business and Attention */
        $('body').on('click', 'input#addressType_residential', function () {
            $checkoutAddressForm.find('#companyName').hide();
            $checkoutAddressForm.find("label[for='companyName']").hide();
        });

        /* Toggle visibility of Business and Attention */
        $('body').on('click', 'input#addressType_business', function () {
            $checkoutAddressForm.find('#companyName').show();
            $checkoutAddressForm.find("label[for='companyName']").show();
            $checkoutAddressForm.find('#companyName').val('');
        });
        //International - Collect tax id for Brazil
        $('body').on('click', 'input#taxType_CPF', function () {
            $checkoutAddressForm.find('#personalTaxId').show();
            $checkoutAddressForm.find('#personalTaxIdLink').show();
            $checkoutAddressForm.find('#personalTaxId').val('');
            $checkoutAddressForm.find('#corporateTaxId').hide();
            $checkoutAddressForm.find('#corporateTaxIdLink').hide();
            $checkoutAddressForm.find('#corporateTaxId').val('');
            $checkoutAddressForm.find('#personalTaxIdError').show();
            $checkoutAddressForm.find('#corporateTaxIdError').hide();
            $checkoutAddressForm.find(".corporateTaxIdAlert").addClass('hidden');
            $checkoutAddressForm.find(".personalTaxIdAlert").removeClass('hidden');
        });


        $('body').on('click', 'input#taxType_CNPJ', function () {
            $checkoutAddressForm.find('#personalTaxId').hide();
            $checkoutAddressForm.find('#personalTaxIdLink').hide();
            $checkoutAddressForm.find('#personalTaxId').val('');
            $checkoutAddressForm.find('#corporateTaxId').show();
            $checkoutAddressForm.find('#corporateTaxIdLink').show();
            $checkoutAddressForm.find('#corporateTaxId').val('');
            $checkoutAddressForm.find('#personalTaxIdError').hide();
            $checkoutAddressForm.find('#corporateTaxIdError').show();
            $checkoutAddressForm.find(".personalTaxIdAlert").addClass('hidden');
            $checkoutAddressForm.find(".corporateTaxIdAlert").removeClass('hidden');
        });

        $('body').on('click', 'input#addToAddressBook', function () {
            if (this.checked) {
                $checkoutAddressForm.find('#fullName').show();
            } else {
                $checkoutAddressForm.find('#fullName').hide();
            }
        });

        $('[data-submit="edit"]').on('click', function () {
            $("#checkout-address-form").find(".saveType").val('edit');
        });

        $('[data-submit="cancel"]').on('click', function () {


            $checkoutAddressForm.find("#addressType_business").prop('checked', false);
            $checkoutAddressForm.find("#addressType_residential").prop('checked', true);
            $checkoutAddressForm.find("#fullName").val('');
            $checkoutAddressForm.find("#firstName").val('');
            $checkoutAddressForm.find("#lastName").val('');
            $checkoutAddressForm.find("#companyName").val('');
            $checkoutAddressForm.find("#attention").val('');
            $checkoutAddressForm.find("#addressLine1").val('');
            $checkoutAddressForm.find("#addressLine2").val('');
            $checkoutAddressForm.find("#addressLine3").val('');
            $checkoutAddressForm.find("#addressLine4").val('');

            $checkoutAddressForm.find("#city").val('');
            $checkoutAddressForm.find("#postalCode").val('');
            $checkoutAddressForm.find("#primaryPhone").val('');
            $checkoutAddressForm.find("#emailAddress").val('');

            $checkoutAddressForm.find(".select-container").parent().removeClass('field-error');
            $checkoutAddressForm.find("#firstName").parent().removeClass('field-error');
            $checkoutAddressForm.find("#lastName").parent().removeClass('field-error');
            $checkoutAddressForm.find("#addressLine1").parent().removeClass('field-error');
            $checkoutAddressForm.find("#city").parent().removeClass('field-error');
            $checkoutAddressForm.find("#postalCode").parent().removeClass('field-error');
            $checkoutAddressForm.find("#primaryPhone").parent().removeClass('field-error');
            $checkoutAddressForm.find("#emailAddress").parent().removeClass('field-error');

            $checkoutAddressForm.find("#personalTaxId").parent().removeClass('field-error');
            $checkoutAddressForm.find("#corporateTaxId").parent().removeClass('field-error');
            $checkoutAddressForm.find("#externalNumber").parent().removeClass('field-error');
            $checkoutAddressForm.find("#internalNumber").parent().removeClass('field-error');
            $checkoutAddressForm.find("#neighborhood").parent().removeClass('field-error');
            $checkoutAddressForm.find("#reference").parent().removeClass('field-error');
            $checkoutAddressForm.find("#primaryPhoneType").parent().removeClass('field-error');
            $checkoutAddressForm.find("#secondaryPhoneType").parent().removeClass('field-error');
            $checkoutAddressForm.find("#secondaryPhone").parent().removeClass('field-error');
            //International - Collect tax id for Brazil
            $checkoutAddressForm.find("#taxType_CPF").prop('checked', true);
            $checkoutAddressForm.find("#taxType_CNPJ").prop('checked', false);
            $checkoutAddressForm.find('#personalTaxId').show();
            $checkoutAddressForm.find('#personalTaxIdLink').show();
            $checkoutAddressForm.find('#personalTaxIdError').show();
            $checkoutAddressForm.find('#personalTaxId').val('');
            $checkoutAddressForm.find('#dni').val('');
            $checkoutAddressForm.find('#corporateTaxId').hide();
            $checkoutAddressForm.find('#corporateTaxIdLink').hide();
            $checkoutAddressForm.find('#corporateTaxIdError').hide();
            $checkoutAddressForm.find('#corporateTaxId').val('');


            //Capture Government ID for all LATAM Countries
            $checkoutAddressForm.find("#colombiaTaxType_CC").prop('checked', true);
            $checkoutAddressForm.find("#colombiaTaxType_CE").prop('checked', false);
            $checkoutAddressForm.find("#colombiaTaxId").val('');
            $checkoutAddressForm.find("#uruguayTaxType_CC").prop('checked', true);
            $checkoutAddressForm.find("#uruguayTaxType_CE").prop('checked', false);
            $checkoutAddressForm.find("#uruguayTaxId").val('');
            $checkoutAddressForm.find("#argentinaTaxId").val('');
            $checkoutAddressForm.find("#jamaicaTaxId").val('');
            $checkoutAddressForm.find("#latamTaxId").val('');
            $checkoutAddressForm.find("#mexicoTaxId").val('');
            $checkoutAddressForm.find("#ecuadorTaxId").val('');
            // Gitlab 2371 Push TaxID from Chile and Dom. Republic to PeopleSoft
            $checkoutAddressForm.find("#chileTaxId").val('');
            $checkoutAddressForm.find("#domTaxId").val('');
            $checkoutAddressForm.find("#elSalvadorTaxId").val('');
            $checkoutAddressForm.find("#taiwanTaxId").val('');


            $('[data-submit="add"]').removeAttr('disabled');
            $('[data-submit="add"]').removeClass('hide');
            $('[data-submit="edit"]').attr('disabled', 'disabled');
            $('[data-submit="edit"]').addClass('hide');
            $("#checkout-useaddress-form").find("#btn-add-address").parent().removeClass('active');
        });

        if ($checkoutAddressForm.find(".saveType").val() === 'edit') {
            $checkoutAddressForm.find("#isNewAddress").val('false');
            $('[data-submit="add"]').attr('disabled', 'disabled');
            $('[data-submit="add"]').addClass('hide');
            $('[data-submit="edit"]').removeAttr('disabled');
            $('[data-submit="edit"]').removeClass('hide');
        }
        //Added to display pending for shipping address
        if ($("#checkout-address-form #isErrorsExist").length > 0) {
            if ($("#checkout-address-form").find(".saveType").val() == 'add') {
                $('#var-shippingInfo-id').html($('#checkoutOrderSummaryHolder').find('.shippingInfo').html());
            }
            if ($("#checkout-address-form").find(".saveType").val() == 'edit') {
                $('#var-selected-shippingInfo-id').html($("#checkout-useaddress-form").find('#selected-details').html());
            }
            /*$("#checkoutOrderSummaryHolder").find('.shippingInfo').html("<strong><span>" + $('#pendingShippingInfo').html() + "</span></strong>");
            $('#checkoutOrderSummaryHolder').find('#order-summary-adjustmentstotal').html("<strong><span>" + $('#pendingadjustmentstotal').html() + "</span></strong>");
            $('#checkoutOrderSummaryHolder').find('#order-summary-shippingtotal').html("<strong><span>" + $('#pendingshippingtotal').html() + "</span></strong>");
            $('#checkoutOrderSummaryHolder').find('#order-summary-taxtotal').html("<strong><span>" + $('#pendingtaxtotal').html() + "</span></strong>");
            $('#checkoutOrderSummaryHolder').find('#order-summary-ordertotal').html("<strong><span>" + $('#pendingordertotal').html() + "</span></strong>");*/
        }

    }
};;
//resize elements
var rEl = {
    $isotope: $('.isotope'),
    $mobileNav: $('#mobileNav')
};

var eResize = {
    isoText: function () {
        rEl.$isotope.each(function () {
            var
                $iso = $(this),
                $isoContent = $iso.find('.isotope-content');
            eIsotope.textSize($iso);
            eIsotope.textCenter($isoContent);
        });
    },
    isoImage: function () {
        if ($(".isotope").length > 0) {
            rEl.$isotope.not(".videoContainer").each(function () {
                var bgHaver = $(this).children(".image-well");
                var isoH = bgHaver.height();
                var isoW = bgHaver.width();
                var isoRatio = parseInt(isoH / isoW * 10);

                if (isoH > isoW) {
                    if (isoRatio === 11) {
                        bgHaver.css('background-size', "153%");
                    }
                    if (isoRatio === 12) {
                        bgHaver.css('background-size', "153%");
                    }
                    if (isoRatio === 13) {
                        bgHaver.css('background-size', "153%");
                    }
                    if (isoRatio === 14) {
                        bgHaver.css('background-size', "153%");
                    }
                    if (isoRatio === 15) {
                        bgHaver.css('background-size', "180%");
                    }
                    if (isoRatio === 16) {
                        bgHaver.css('background-size', "170%");
                    }
                    if (isoRatio === 17) {
                        bgHaver.css('background-size', "185%");
                    }
                    if (isoRatio === 18) {
                        bgHaver.css('background-size', "187%");
                    }
                    if (isoRatio === 19) {
                        bgHaver.css('background-size', "200%");
                    }
                    if (isoRatio === 20) {
                        bgHaver.css('background-size', "213%");
                    }
                    if (isoRatio === 21) {
                        bgHaver.css('background-size', "221%");
                    }
                    if (isoRatio === 22) {
                        bgHaver.css('background-size', "230%");
                    }
                    if (isoRatio === 23) {
                        bgHaver.css('background-size', "245%");
                    }
                    if (isoRatio === 24) {
                        bgHaver.css('background-size', "250%");
                    }
                    if (isoRatio === 25) {
                        bgHaver.css('background-size', "265%");
                    }
                    if (isoRatio === 26) {
                        bgHaver.css('background-size', "271%");
                    }

                }
                if (isoH === isoW) {
                    //if it's square... leave it alone.
                }
                if (isoW > isoH) {
                    //if it's wider than it is tall... leave it alone.
                }

            });

        } else {
            $(".isotopes").css("display", "none");
        }
    },
    mobileNavCheck: function () {
        var wWidth = $(window).width();
        if (wWidth > 767) {
            if (rEl.$mobileNav.hasClass('in')) rEl.$mobileNav.removeClass('in');
        }
    },
    video: function () {
        var newWidth = eVideo.$figure.width();

        eVideo.$iframes.each(function () {
            var $el = $(this);
            $el
                .width(newWidth)
                .height(newWidth * $el.data('aspectRatio'));
        });
    },
    paginationCarousel: function () {
        var paginationCarousel = $(".paginationCarousel");
        paginationCarousel.trigger('destroy.owl.carousel').removeClass('owl-loaded');
        paginationCarousel.owlCarousel();
    },
    checkoutSummary: function () {
        // trigger resize of two-column checkout order summary table on resize when needed
    }
};

function doClickAction(videoID, $videoIframe) {
    try {
        onYouTubeIframeAPIReady(videoID, $videoIframe);
    } catch (e) {}
}

function doDoubleClickAction(url) {
    if (url !== undefined || url != null) {
        if (url.match("/ecommerce")) {
        } else if (!url.match("/ecommerce")) {
            window.open(url);
            return false;
        }
    }
    window.open(url, '_self');
}

var player;

function onYouTubeIframeAPIReady(videoID, $videoIframe) {
    if (videoID) {
        player = new YT.Player(videoID, {
            events: {
                'onStateChange': onPlayerStateChange
            }
        });
    }
}

function onPlayerStateChange(event) {
    changeOverlay(event.data)
}

function changeOverlay(playerStatus) {
    $display = $videoIframe.closest("div");
    var $videoOverlay = $display.find("div")[0];
    if (playerStatus == -1) {
        $($videoOverlay).css("display", "none"); // unstarted = block
    } else if (playerStatus == 0) {
        $($videoOverlay).css("display", "block"); // ended = block
    } else if (playerStatus == 1) {
        $($videoOverlay).css("display", "none"); // playing = green
    } else if (playerStatus == 2) {
        $($videoOverlay).css("display", "none"); // paused = red
    } else if (playerStatus == 3) {
        $($videoOverlay).css("display", "none"); // buffering = purple
    }
}

var DELAY = 700,
    clicks = 0,
    timer = null;

$(".video-overlay-image").on("click", function (e) {
    clicks++;
    if (clicks === 1) {
        timer = setTimeout(function (e) {
            $(e.currentTarget).css("display", "none");
            let videoID = $(e.currentTarget).siblings("figure").find("iframe").attr("id");
            $videoIframe = $(e.currentTarget).siblings("figure").find("iframe");
            doClickAction(videoID, $videoIframe);
            clicks = 0;
        }, DELAY, e);
    } else if (clicks === 2) {
        clearTimeout(timer);
        let urlText = $(e.currentTarget).attr('href');
        doDoubleClickAction(urlText);
        clicks = 0;
    }
}).on("dblclick", function (e) {
    e.preventDefault();
});;
//initialize our fe functions
$(document).ready(function () {

    //utils.js
    // GRM modal
    eGRMModal.init();
    eCustomTitle.init();
    eUtils.init();
    grmTabs.init();
    grmLogin.init();
    eSpinners.inputSpinner();
    eSortBy.init();
    eSortDropdown.init();
    eFaq.init();
    eButtonTextResize.init();
    eMobileSummary.init();
    eVideo.init();
    eUpdateOrderDetails.init();
    eUpdateOrderHistory.init();
    eUpdateAccountApprovals.init();
    eCountrySelectUpdate.init();
    eResize.video();
    eSocial.init();
    eGlobalAlert.init();
    eUtils.footerFix();
    eMusicPreview.init();
    eOntraSSO.init();
    econtactUsTabItems.init();
    eMyAccountTabItems.init();
    eEvents.init();
    eEvents.allEventsPagination();
    eEvents.clearFilters();
    //Endor 3737 start
    securityQuestionsValidation.init();
    //Endor 3737 end

    //eCheckout.js
    eCheckout.init();
    eCheckout.summaryWidth();

    //eShipping.js
    eShipping.init();

    //fieldErrors.js
    eFieldErrors.init();

    //flyout.js
    eFlyout.init();

    //address.js
    eAddresses.init();

    //pw.js
    ePwSecurity.init();

    eNewPw.validate();

    //carousel.js
    eCarousel.init();
    //eItemDetailCarouselHandler.init();

    //categoryCard.js
    // #1496 Same function used for category card & content card in Hoth home page
    eCategoryCard.init('category-cards'); // Argument is category card class name 
    eCategoryCard.init('content-cards'); // Argument is content card class name 

    //megaSearch.js
    eMegaSearch.init();

    //header.js
    eStickyHeader.init();
    eFancyNav.init();
    eFengoNav.init();
    eMiscNav.init();
    eSingleNav.init();
    eMobileNav.init();
    eLanguageOptions.init();

    //grid.js
    eGridItems.init();
    eGridSort.init();
    eGridTruncate.init();
    eGridInitialResize.init();
    eMissingGridImage.init();
    eTruncateBrandFilter.init();
    eTruncateCategoryFilter.init();
    eTruncateEventFilter.init();
    eEventList.pagination();

    //detail.js
    eDetail.init();
    eDetail.realDeal();
    eDetail.flowers();
    eDetail.readMore();

    //cart.js
    eCart.init();
    eProductOptionsToggle.init();

    //favorites.js
    eFavorites.favorite();
    eFavorites.updateWishList();

    //payment.js
    ePayment.init();

    //resize isotopes on load, also handled on resize
    eResize.isoImage();
    grmHeader.init();

    eContactUsRefresh.init();
    eFormValidator.init();
    eGRMUtils.init();
    eGRMSeachBar.init();
    eGRMProductListPage.init();


    
    eFilterCategories.init();

    // Cookie notice
    eGRMCookieNotice.init();
	
	//Endor 3624 Wishlist and Cart sort
	sortInWishlistAndCart.init();
	    
});

$(window).resize(function () {

    //resize.js
    eResize.isoText();
    eResize.mobileNavCheck();
    eResize.video();
    eResize.isoImage();
    eResize.paginationCarousel();
    eCheckout.summaryWidth();

    toggleMenu();
    if ($(".user-profile .secondary-navigation").is(":visible")) {
        $(".user-profile .secondary-navigation").removeClass("zoomoutmenu");
        $(".user-profile .user.active").removeClass("active");
        $(".cart-flyout-wrapper-fixedOn").hide();
      }
    
    grmHeader.adjustProductImage();

    //wait a while to resize grid items...
    function resizeTimer() {
        //eResize.gridItem();
        eGridInitialResize.init();
    }
    setTimeout(resizeTimer, 1000);
    
    // GL-CAP 2288
    $('.padding-bottom-filler').css('padding-bottom', ($('footer:visible').height() + 60) + 'px');
    if ($('.related-items-container').is(':visible')) {
        $('.related-items-container').css('padding-bottom', ($('footer:visible').height()) + 'px');
    } else {
        $('.product-detail-wrapper').css('padding-bottom', ($('footer:visible').height()) + 'px');
    }

    if ($('.recently-viewed-prods-container').is(':visible')) {
        $('.recently-viewed-prods-container').css('padding-bottom', ($('footer:visible').height()) + 'px');
    }
});;
function switchView(section, current) {
    $('.management-section').hide();
    $('.' + section + ' .view').hide();
    $('.' + section + ' .default-view').show();
    $('.' + section).show();
    $('.menu-option').css('font-weight', 'normal');
    $(current).closest('.menu-option').css('font-weight', 'bold');
};

$(document).on('click', '.update-user-table tbody tr', function () {
    var $this = $(this);
    var id = $this.find('input').val();
    var $updateUserForm = $('.update-user-form');
    var url = $updateUserForm.attr("data-url");
    $.get(url + '/' + id, function (data) {
        $updateUserForm.html(data);
        $this.closest('.view').hide();
        $updateUserForm.closest('.view').show();
        $('.update-user-back').click(function () {
            $('.update-user-form').closest('.view').hide();
            $('.update-user-table').closest('.view').show();
        });
    });
});

$(document).on('click', '.user-allot-user-table tbody tr', function () {
    var $this = $(this);
    var id = $this.find('input').val();
    var $productTable = $('.user-allot-product-table');
    var url = $productTable.attr("data-url");
    $.get(url + '/' + id, function (data) {
        $productTable.html(data);
        $this.closest('.view').hide();
        $productTable.closest('.view').show();
    })
});

$(document).on('change', '.allotment-annual-limit', function () {
    $(this).addClass("dirty");
});

var inProcessRows = 0;
$(document).on('click', '.user-allot-save-button', function () {
    if (inProcessRows) return;
    var csrfToken = $(this).closest('form').find('input[name=csrfToken]').val();
    var $dirtyLimits = $('.allotment-annual-limit.dirty');
    var $dirtyRows = $dirtyLimits.closest('tr');
    inProcessRows = $dirtyRows.length;
    if (inProcessRows) {
        $(this).prop("disabled", true);
    }
    $dirtyRows.each(function (index) {
        var $dirtyRow = $(this);
        var productId = $dirtyRow.find('input[name=productId]').val();
        var userId = $dirtyRow.find('input[name=userId]').val();
        var allotmentId = $dirtyRow.find('input[name=allotmentId]').val();
        var annualLimit = $dirtyRow.find('input[name=annualLimit]').val();
        if (allotmentId) {
            if (annualLimit > 0) {
                updateAllotment($dirtyRow, csrfToken, annualLimit, allotmentId, userId);
            } else {
                deleteAllotment($dirtyRow, csrfToken, allotmentId, userId);
            }
        } else if (annualLimit > 0) {
            addAllotment($dirtyRow, csrfToken, annualLimit, productId, userId);
        } else {
            completeUpdate($dirtyRow);
        }
    });
});

function addAllotment($dirtyRow, csrfToken, annualLimit, productId, userId) {
    var url = $('.user-allot-save-button').attr('data-url-add');
    var $annualLimitInput = $dirtyRow.find('input[name=annualLimit]');
    var payload = {
        "csrfToken": csrfToken,
        "annualLimit": annualLimit,
        "productId": productId,
        "userId": userId
    };
    $.post(url, payload, function (data) {
        indicateSuccess($annualLimitInput);
        $dirtyRow.find('input[name=allotmentId]').val(data);
    }).fail(function () {
        indicateFailure($annualLimitInput);
    }).always(function () {
        completeUpdate($dirtyRow);
    });
}

function updateAllotment($dirtyRow, csrfToken, annualLimit, allotmentId, userId) {
    var url = $('.user-allot-save-button').attr('data-url-update');
    var $annualLimitInput = $dirtyRow.find('input[name=annualLimit]');
    var payload = {
        'userId': userId,
        'allotmentId': allotmentId,
        'csrfToken': csrfToken,
        'annualLimit': annualLimit
    }
    $.post(url, payload, function () {
        indicateSuccess($annualLimitInput);
    }).fail(function () {
        indicateFailure($annualLimitInput);
    }).always(function () {
        completeUpdate($dirtyRow);
    });
}

function deleteAllotment($dirtyRow, csrfToken, allotmentId, userId) {
    var url = $('.user-allot-save-button').attr('data-url-delete');
    var $annualLimitInput = $dirtyRow.find('input[name=annualLimit]');
    var payload = {
        'userId': userId,
        'allotmentId': allotmentId,
        'csrfToken': csrfToken
    }
    $.post(url, payload, function (data) {
        if (data) {
            indicateSuccess($annualLimitInput);
            $dirtyRow.find('input[name=allotmentId]').val(null);
        } else {
            indicateFailure($annualLimitInput, $dirtyRow);
        }
    }).fail(function () {
        indicateFailure($annualLimitInput);
    }).always(function () {
        completeUpdate($dirtyRow);
    });
}

function indicateSuccess($annualLimitInput) {
    $annualLimitInput.css('background-color', '');
    $annualLimitInput.attr("data-orig", $annualLimitInput.val());
}

function indicateFailure($annualLimitInput) {
    $annualLimitInput.css('background-color', 'red');
    $annualLimitInput.val($annualLimitInput.attr("data-orig"));
}

function completeUpdate($dirtyRow) {
    $dirtyRow.find('.allotment-annual-limit').removeClass('dirty');
    if (!--inProcessRows) {
        $('.user-allot-save-button').prop('disabled', false);
        $('.user-allot-save-text').fadeIn(500).delay(2000).fadeOut(500);
    }
}

$(document).on('click', '.user-restriction-user-table tbody tr', function () {
    var $this = $(this);
    var id = $this.find('input').val();
    var $categoryTable = $('.user-restriction-category-table');
    var url = $categoryTable.attr("data-url");
    $.get(url + '/' + id, function (data) {
        $categoryTable.html(data);
        $this.closest('.view').hide();
        $categoryTable.closest('.view').show();
    })
});

$(document).on('change', '.user-restriction-category-table input[name=isRestriction]', function () {
    addOrDeleteRestrictionListener($(this));
});

function addOrDeleteRestrictionListener($this) {
    var val = $this.is(':checked');
    var row = $this.closest('tr');
    var csrfToken = row.closest('form').find('input[name=csrfToken]').val();
    var userId = row.find('input[name=userId]').val();
    if (val) {
        addRestriction(row, userId, csrfToken);
    } else {
        deleteRestriction(row, userId, csrfToken);
    }
}

function addRestriction($row, userId, csrfToken) {
    var url = $('.user-restriction-category-table').attr('data-url-add');
    var categoryId = $row.find('input[name=categoryId]').val();
    var payload = {
        'csrfToken': csrfToken,
        'userId': userId,
        'categoryId': categoryId
    };
    $.post(url, payload, function (data) {
        $row.find('input[name=restrictionId]').val(data);
        $('.user-restriction-save-text').fadeIn(500).delay(2000).fadeOut(500);
    });
}

function deleteRestriction($row, userId, csrfToken) {
    var restrictionId = $row.find('input[name=restrictionId]').val();
    if (!restrictionId) {
        return;
    }
    var url = $('.user-restriction-category-table').attr('data-url-delete');
    var payload = {
        'csrfToken': csrfToken,
        'userId': userId,
        'restrictionId': restrictionId
    };
    $.post(url, payload, function (data) {
        $row.find('input[name=restrictionId]').val(null);
        $('.user-restriction-save-text').fadeIn(500).delay(2000).fadeOut(500);
    })
}

$(document).on('click', '.user-table-last-batch,.user-table-next-batch', function () {
    getBatchOfCustomers($(this));
});

function getBatchOfCustomers($this) {
    var url = $this.attr('data-url');
    $.get(url, function (data) {
        $this.parent().parent().html(data);
    });
}

$(document).on('click', '.user-table-reset-button', function () {
    var url = $(this).attr('data-url');
    var $this = $(this);
    $.get(url, function (data) {
        $this.closest('.user-table-search').parent().html(data);
    });
})

// $(document).on('click', '.user-table-search-button', function () {
//     getCustomersFromSearch($(this));
// });

$(document).on('click', '.user-table-search-button', function (e) {
    var $this = $(this);
    var $container = $this.closest('.user-table-search');
    var userinput = $container.find('.user-table-search-bar').val();
    var pattern = /^[A-Za-z0-9 '.-@]+$/;

    if(pattern.test(userinput) == true && userinput.length > 1) {
        e.preventDefault();
        // console.log("VALID")
        getCustomersFromSearch($(this));
    } 
    // else{
    //     console.log("INVALID 2222222222")
    //     // getCustomersFromSearch($(this));
    // }
});


function getCustomersFromSearch($this) {
    var $container = $this.closest('.user-table-search');
    var query = $container.find('.user-table-search-bar').val();
    var type = $container.find('.user-table-search-type').val();
	var hideDeactivatedCheck = $container.find('.user-table-search-deactivated');
    var url = $container.find('.user-table-search-bar').attr('data-url');
    $.get(url + '?q=' + query + '&type=' + type+"&hideDeactivated="+hideDeactivatedCheck.is(':checked'), function (data) {
        $container.parent().html(data);
    });
}

$(document).on('click', '.allotment-table-last-batch,.allotment-table-next-batch', function () {
    getBatchOfProducts($(this));
});

function getBatchOfProducts($this) {
    var url = $this.attr('data-url');
    $.get(url, function (data) {
        $this.closest('.row').parent().html(data);
    });
}

$(document).on('click', '.allotment-table-reset-button', function () {
    var url = $(this).attr('data-url');
    var $this = $(this);
    $.get(url, function (data) {
        $this.closest('.allotment-table-search').parent().html(data);
    });
});

$(document).on('click', '.allotment-table-search-button', function () {
    getProductsFromSearch($(this));
});

// $(document).on('click', '.allotment-table-search-button', function () {
    // var $this = $(this);
    // var $container = $this.closest('.allotment-table-search-bar');
    // var userinput = $container.find('.allotment-table-search-bar').val();
    // var pattern = /^[A-Za-z0-9 '.-]+$/;

    // if(pattern.test(userinput) == true && userinput.length > 1) {
    //     e.preventDefault();
    //     console.log("VALID CORRECTTT")
    //     getCustomersFromSearch($(this));
    // } 
    // else{
    //     console.log("INVALID 2222222222")
    //     // getCustomersFromSearch($(this));
    // }
// });

function getProductsFromSearch($this) {
    var $container = $this.closest('.allotment-table-search');
    var query = $container.find('.allotment-table-search-bar').val();
    var url = $container.find('.allotment-table-search-bar').attr('data-url');
    $.get(url + '?q=' + query, function (data) {
        $container.parent().html(data);
    });
}

$(document).on('click', '.restriction-table-last-batch,.restriction-table-next-batch', function () {
    getBatchOfCategories($(this));
});

function getBatchOfCategories($this) {
    var url = $this.attr('data-url');
    $.get(url, function (data) {
        $this.closest('.row').parent().html(data);
    });
}
$('.reports-fullscreen').click(function () {
    if ($('.my-account-tab-nav').is(':visible')) {
        $('.my-account-tab-nav').slideUp(400, function () {
            $('.my-account-content-container').css('width', '100%');
        });
    } else {
        $('.my-account-content-container').css('width', '');
        $('.my-account-tab-nav').slideDown(400);
    }
});

var allotmentTableFetched = false;
var orderTableFetched = false;
var inventoryTableFetched = false;
$('.report-view-allotment').click(function () {
    if (!allotmentTableFetched) {
        $.get($('.report-table-allotment-data').attr('data-url'), function (data) {
            $('.report-table-allotment-data').html(data);
            showReportTable('.report-table-allotment');
        });
        allotmentTableFetched = true;
    } else {
        showReportTable('.report-table-allotment');
    }
});

$('.report-view-order').click(function () {
    if (!orderTableFetched) {
        $.get($('.report-table-order-data').attr('data-url'), function (data) {
            $('.report-table-order-data').html(data);
            showReportTable('.report-table-order');
        });
        orderTableFetched = true;
    } else {
        showReportTable('.report-table-order');
    }
});
$('.report-view-inventory').click(function () {
    if (!orderTableFetched) {
        $.get($('.report-table-inventory-data').attr('data-url'), function (data) {
            $('.report-table-inventory-data').html(data);
            showReportTable('.report-table-inventory');
        });
        orderTableFetched = true;
    } else {
        showReportTable('.report-table-inventory');
    }
});

$('.report-view-inventory-3-clover').click(function () {
    window.open("https://www.3clovers.com/bmc-inventory", "_blank", "noopener noreferrer");
});

function showReportTable(visibleTable) {
    $('.report-table').hide();
    $(visibleTable).show();
};
var grmLogin = {
    init: function () {
        // Replace the default background image if a login image has been set in the Admin
        grmLogin.swapBackgroundImage();

        // Bind click and focus events for the Forgot Username/Password link
        grmLogin.eventBindings();

        // Determine if there is an error state and navigate the user to the corresponding tab/form
        grmLogin.determineErrorState();

        // Display login form after the page is loaded 
        grmLogin.displayLoginForm();
        
    },
    displayLoginForm: function () {
        // Wait a half second before displaying the login form to prevent the user from seeing 
        // the form animate as it determines which tab it should display to the user
        setTimeout(function () {
            $('.primary-login-form').css('opacity', '1');
        }, 500);
        
        if($("#loginSubmit").length > 0 ) {
			localStorage.removeItem('loginTime');
			localStorage.removeItem('isSSOLoginFirstTime');
		}
    },
    determineErrorState: function () {
        var mainStoryURL = window.location.href;

        if (mainStoryURL.match("/ecommerce/login/forgotPassword") || mainStoryURL.match("/ecommerce/login/requestPasswordChange")) {
            $('.forgot-link').click();
            setTimeout(function () {
                $('a.forgot-password-tab').click();
            }, 100);
        } else if (mainStoryURL.match("/ecommerce/login/forgotUsername")) {
            $('.forgot-link').click();
            $('a.forgot-username-tab').click();
        } else if (mainStoryURL.endsWith("/ecommerce/login/authenticateProgramUser.htm")) {
            // Determine whether the error state and route the user to the correct tab/form
            var errorTab = $('form').find('.grm-alert-danger').closest('section').attr('id');

            if (!!errorTab) {
                $("a[aria-controls=" + errorTab + "]").click();
            }
        }
    },
    eventBindings: function () {
        $('.forgot-link').on('click', function () {
            $('.primary-login-form').css('display', 'none');
            $('.contactusmsg').css('display', 'none');
            $('.contact-us').show();
            $('.loginhelp').css('display', 'flex');

            var activeSection = $('.loginhelp .tabs').find('.current');
            $('a[href="#'+activeSection.attr("id")+'"]').click();
        });

        $('.forgot-link').on('keydown', function (event) {
            var code = event.keyCode || event.which;

            if (code == 13) {
                event.preventDefault();
                $('.forgot-link').click();
            }

            if (!event.shiftKey && code == 9) {
                event.preventDefault();
                var nextFocus = $(".tabs li a[aria-selected='true']:visible").parent().next('li').find('a');
                if(nextFocus.length){
                    nextFocus.focus();
                }else{
                    $('.footer-link-container .privacy-policy a').focus();
                }
            }
        });

        $('.back-to-sign-in-form').on('click', function () {
            $('.loginhelp').css('display', 'none');
            $('.contactusmsg').css('display', 'none');
            $('.contact-us').show();
            $('.primary-login-form').css('display', 'block');

            $('.primary-login-form .sign-in-tab').click();
        });

        $('.back-to-sign-in-form span').on('keydown', function (event) {
            var code = event.keyCode || event.which;

            if (code == 13) {
                event.preventDefault();
                $('.back-to-sign-in-form').click();
            }
        });

        $('.footer-link-container .privacy-policy a').on('keydown', function (event) {
            var code = event.keyCode || event.which;

            if (!event.shiftKey && code == 9) {
                event.preventDefault();
                $('#logo a').focus();
            }
        });
    },
    swapBackgroundImage: function () {
        var loginImageUrl = $('.content-zone-container .loginImage').attr('src');

        // Invalid URL that gets constructed by the Admin if no login page image is set at the Template or Site level
        var invalidURL = "https://s7d4.scene7.com/is/image/BIworldwide/,?scl=1";

        // We need to make sure that if the invalid URL is being sent that we ignore it and display the image set in the CSS
        if (!!loginImageUrl && loginImageUrl !== invalidURL) {
            $('body#loginPage').css("background-image", "url(" + loginImageUrl + ")");
        }
    }
}
$(".login-navigation .contact-us").on('click', function () {
    $('.primary-login-form').css('display', 'none');
    $('.contactusmsg').css('display', 'block');
    $('.contact-us').hide();
    $('.loginhelp').css('display', 'none'); 
});;
var grmHeader = {
	init: function () {
		$('#myModal span.close').on('click', function () {
			var modal = document.getElementById('myModal');
			modal.style.display = "none";
		});
		$('#myModal').on('click', window, function (event) {
			var modal = document.getElementById('myModal');
			if(event.target == modal && modal.className == 'modalSS'){
				modal.style.display = "block";
			} else if (event.target == modal) {
				modal.style.display = "none";
			}
		});
		$("#normalProduct .pic > img").on('click', function (elem) {
			var src = this.src;
			var $grmModal = $('#imgPreviewModal');
			var modal = document.getElementById('imgPreviewModal');
			var modalContent = modal.getElementsByClassName('modal-content')[0];

			if (modalContent.querySelector('img') !== null) {
				modalContent.querySelector('img')
					.setAttribute('src', src);
			} else {
				var img = document.createElement("IMG");
				img.setAttribute('src', src);
				modalContent.appendChild(img);
			}
			$('body').addClass('overflow-hidden');
			$grmModal.addClass('grm-modal--show');
			$grmModal.find('.grm-modal__close').focus();
			// modal.style.display = "flex";
		});
		$(document).on('click', '#imgPreviewModal', function (evt) {
			if($(evt.target).is($('#imgPreviewModal'))){
				evt.preventDefault();
				$('#imgPreviewModal .grm-modal__close').click();
			}
		});

		grmHeader.adjustProductImage();
		//$('.description-tab a').click();
	},
	adjustProductImage: function () {
		if (window.innerWidth >= 992 && $('.mobileProductHeader').length > 0) {
			var newMargin = $('.mobileProductHeader').height();
			$('#normalProduct, .product-customizer-container').css('margin-top', (newMargin * -1));
		} else {
			$('#normalProduct, .product-customizer-container').css('margin-top', '');
		}
		$('#normalProduct, .product-customizer-container').removeClass("invisible");
	}
};
var grmTabs = function ($) {
    var animateDirection;
    var previousSelection;

    return {

        init: function () {
            if(!$('.primary-login-form .tabs').find('.current').length){
                var loginItem = $('.primary-login-form .tabs').find('section').first();
                loginItem.addClass('current');
            }
            
            if(!$('.loginhelp .tabs').find('.current').length){
                var forgetItem = $('.loginhelp .tabs').find('section').first();
                forgetItem.addClass('current');
            }
            
            // GL 1532
            if(!$('.product-detail-tabs .tabs').find('.current').length){
                var detailItem = $('.product-detail-tabs .tabs').find('section').first();
                detailItem.addClass('current');
            }

            this.cacheDom();
            this.setupAria();
            this.appendIndicator();
            this.bindEvents();
        },

        cacheDom: function () {
            this.$el = $('.tabs');
            this.$tabList = this.$el.find('ul.signin_ul_tab ,ul.forgot_ul_tab ,ul.productdetails_ul_tab');
            this.$tab = this.$tabList.find('li');
            this.$tabFirst = this.$tabList.find('li:first-child a');
            this.$tabLink = this.$tab.find('a');
            this.$tabPanel = this.$el.find('section');
            this.$tabPanelFirst = this.$el.find('section:first-child');
            this.$tabPanelNotFirst = this.$el.find('section:not(:first-of-type)');
            this.$tabListFirstUl = this.$el.find('ul.tab');
            this.$tabListFirstUlLi = this.$tabListFirstUl.find('li');
        },

        bindEvents: function () {
            var that = this;
            if($(".tabs li a[aria-selected='true']:visible").length){
                that.animateIndicator($(".tabs li a[aria-selected='true']:visible")[0]);
            }
            
            that.$tabLink.on('click', function (event) {
                event.preventDefault();
                that.animateIndicator($(this)[0]);
                if($(this).attr('aria-selected') == 'true'){
                    return;
                }
                that.changeTab($(this)[0]);
            });
            that.$tabLink.on('keydown', function (event) {
                if($(this).attr('aria-selected') == 'true'){
                    return;
                }
                that.changeTabKey($(this));
            });
            // Google translate fix
            $("body").on('DOMSubtreeModified', ".tabs li a:visible", function() {
                if($(this).attr('aria-selected') == "true"){
                    var $indicator = that.$tabList.find('.indicator');
                    var offset = $(this).position().left;
                    var outerWidth = $(this).outerWidth();

                    $indicator.css("width",outerWidth);
                    $indicator.transition({
                        x: offset
                    });
                    $(this).focus();

                }
            });
        },

        changeTab: function (elem) {
            var self = $(elem);

            // var targetSection = self.attr('href');
            // this.$el.css("height",$(targetSection).outerHeight(true));

            var tabsWrapper = self.parents('.tabs');
            // clear previous animation
            tabsWrapper.removeClass('ltr');
            tabsWrapper.removeClass('rtl');
            tabsWrapper.find('.enter').removeClass('enter');
            tabsWrapper.find('.exit').removeClass('exit');
            tabsWrapper.find('.current').removeClass('current');
            // add animation
            tabsWrapper.addClass('animating');

            // add direction
            var listItems = tabsWrapper.find('[role="presentation"] > a').toArray();
            animateDirection = $(listItems).index(self) > $(listItems).index(tabsWrapper.find('a[aria-selected="true"]')) ? 'ltr' : 'rtl';
            tabsWrapper.addClass(animateDirection);

            // stop/clear animation
            setTimeout(function() {
                tabsWrapper.find('animating').removeClass('ltr').removeClass('rtl').removeClass('animating');
                // tabsWrapper.find('animating').removeClass('rtl');
                // tabsWrapper.find('animating').removeClass('animating');
                tabsWrapper.find('.enter').removeClass('enter');
                tabsWrapper.find('.exit').removeClass('exit');
            }, 500);

            var targetTabId = self.attr('aria-controls'); //enter
            var currentTabId = tabsWrapper.find('a[aria-selected="true"]').attr('aria-controls'); //exit

            // start animation
            $('#' + currentTabId).removeClass('current').addClass('exit');
            $('#' + targetTabId).addClass('enter current');
            $('#' + currentTabId).hide();
            $('#' + targetTabId).show();

            this.removeTabFocus();
            //this.determineDirection(self);
            this.setSelectedTab(self);
            this.hideAllTabPanels();
            this.setSelectedTabPanel(self);
        },

        animateIndicator: function (elem) {
            elem = $(elem);
            var targetSection = elem.attr('href');
            var that = this;
            setTimeout(function(){
            	var dynValue = $(targetSection).outerHeight(true) - $(".long-description").height();
                /*that.$el.css("height",
                    ($(targetSection).outerHeight(true) + dynValue+40));*/ // section height + tab list height
            });

            var offset = elem.position().left;
            var width = elem.width();
            var outerWidth = elem.outerWidth();
            var $indicator = that.$tabList.find('.indicator');

            $indicator.transition({
                x: offset,
                width: outerWidth
            })
        },

        appendIndicator: function () {
            this.$tabListFirstUl.append('<div class="indicator"></div>');
            var width = $('.tabs > ul li').width();
            $('.indicator').css('width', width);
        },

        changeTabKey: function (elem) {
            var self = $(elem),
                $target = this.setKeyboardDirection(self, event.keyCode);

            if ($target.length) {
                $target.click();
            }
        },

        hideAllTabPanels: function () {
            this.$tabPanel.attr('aria-hidden', 'true');
        },

        removeTabFocus: function (self) {
            var $this = self || $('[role="tab"]');

            $this.attr({
                'tabindex': '-1',
                'aria-selected': null
            });
        },

        selectFirstTab: function () {
            this.$tabFirst.attr({
                'aria-selected': 'true',
                'tabindex': '0'
            });
        },

        setupAria: function () {
            this.$tabListFirstUl.attr('role', 'tablist');
            this.$tabListFirstUlLi.attr('role', 'presentation');
            this.$tabLink.attr({
                'role': 'tab',
                'tabindex': '-1'
            });
            this.$tabLink.each(function () {
                var $this = $(this);

                $this.attr('aria-controls', $this.attr('href').substring(1));
            });
            this.$tabPanel.attr({
                'role': 'tabpanel'
            });
            this.$tabPanelNotFirst.attr({
                'aria-hidden': 'true'
            });
            this.selectFirstTab();
        },

        setKeyboardDirection: function (self, keycode) {
            var $prev = self.parents('li').prev().children('[role="tab"]'),
                $next = self.parents('li').next().children('[role="tab"]');

            switch (keycode) {
                case 37:
                    return $prev;
                    break;
                case 39:
                    return $next;
                    break;
                default:
                    return false;
                    break;
            }
        },

        setSelectedTab: function (self) {
            previousSelection = self;
            self.attr({
                'aria-selected': true,
                'tabindex': '0'
            }).focus();
        },

        setSelectedTabPanel: function (self) {
            $('#' + self.attr('href').substring(1)).attr('aria-hidden', null);
        },

        determineDirection: function (elem) {
            var targetElemets = $('.product-detail-tabs section, .primary-login-form section, .loginhelp section');
            targetElemets.removeClass(animateDirection);
            var listItems = $('[role="presentation"] > a').toArray();
            animateDirection = $(listItems).index(elem) > $(listItems).index(previousSelection) ? 'animate-right' : 'animate-left';

            targetElemets.addClass(animateDirection);
        }

    };
}(jQuery);;
var desktopMenuAnimationTime = mobileMenuAnimationTime = "100"; //Menu animation time defined in ms
// Open mobile/tablet navigation menu
$(".hamburger-menu").on("click", function(event) {
  event.stopPropagation();
  $('html, body').animate({scrollTop: 0}, 'slow');
  //var menuHeight = GetTopMenuHeight();
  var menuHeight = 30;
  $(".mobile-navigation").css("top", menuHeight);
  var icon = this;
  $(icon).removeClass("active");
  $(".close-menu").toggleClass("active");

  //$('body:not(.menu-open)').toggleClass('menu-open');
  $(document)
    .find(".cartFlyout.flyout.cartflyoutopen")
    .removeClass("cartflyoutopen")
    .removeAttr("style");
  $(".cart-flyout-wrapper-fixedOn").hide();
  $(document)
    .find(".dropdown.grm-dropdown.open")
    .removeClass("open");
  SlideMobileMenu("ltr", "headmenu", "headmenu");
  $(".mobile-navigation").removeClass("hidehomemenu");
  $(".mobile-navigation").addClass("showhomemenu");
  $("body").addClass("overflow-hidden");
});


$(".marketplace-list, .cart-flyout-wrapper-fixedOn").on("click", function(event) {
  event.stopPropagation();
  $("#marketplaces").removeClass("active");
  $(".cart-flyout-wrapper-fixedOn").hide();
  $(".cart-flyout-wrapper-fixedOn").css({"z-index":'999'});
});

// Close mobile/tablet navigation menu
$(".close-menu").on("click", function(event) {
  event.stopPropagation();
  var icon = this;
  $(".mobile-navigation").addClass("hidehomemenu");
  CloseHeadMenu();
  $(icon).removeClass("active");
  $(".hamburger-menu").toggleClass("active");
});
// Open sub-category menu on mobile/tablet
$(
  ".mobile-navigation .primary-category, .mobile-navigation .secondary-category"
).on("click", function(event) {
  event.stopPropagation();
  var category = this;
  var nextMenu = $(category)
    .find("span")
    .attr("menu-nxt");
  var preMenu = $(category)
    .find("span")
    .attr("menu-pre");
  $(".sub-menu, .tertiary-sub-menu").addClass("active");
  $(".mobile-navigation .previous-category").attr("style", "display: flex;");
  $(".mobile-navigation .previous-category .menu-cate-name").html(
    $(".catename_" + nextMenu).html()
  );
  $(".mobile-navigation .previous-category").attr("menu-pre", preMenu);
  $(".mobile-navigation .previous-category").attr("menu-current", nextMenu);
  SlideMobileMenu("ltr", nextMenu, preMenu);
});
// Open sub-category menu on Desktop
$(
  ".primary-navigation-desktop .primary-category, .primary-navigation-desktop .secondary-category"
).on("click", function(e) {
  e.stopPropagation();
  var category = this;
  if (
    $(category)
      .prop("tagName")
      .toLowerCase() == "a"
  ) {
    CloseDesktopHeadMenu();
    return true;
  }
  $(".sub-menu").removeClass("zoominmenu");
  var nextMenu = $(category)
    .find("span")
    .attr("menu-nxt");
  var preMenu = $(category)
    .find("span")
    .attr("menu-pre");
  if ($(category).is(".menu-option.primary-category")) {
    if ($(category).is(".menu-option.primary-category.active")) {
      $("." + nextMenu).addClass("zoominmenu");
      $("." + nextMenu).one(
        "webkitAnimationEnd oanimationend msAnimationEnd animationend",
        function(event) {
          $("." + nextMenu).removeClass("zoominmenu");
        }
      );
      CloseDesktopHeadMenu();
    } else {
      $(".sub-menu-ul, .tertiary-sub-menu, .fourth-sub-menu").removeClass(
        "current"
      );
      $("." + nextMenu + " .sub-menu-ul").addClass("current");
      $(".sub-menu").removeClass("zoomoutmenu");
      $(".home-menu .menu-option, .nav-desk-menuarrow").removeClass("active");
      $(category).addClass("active");
      $("." + nextMenu).addClass("zoomoutmenu");
      $(".cart-flyout-wrapper-fixedOn").show();
    }
    var pos = $(
      ".primary-navigation-desktop .primary-category.active"
    ).position();
    if (pos) {
      var menuWidth =
        $(".primary-navigation-desktop .primary-category.active").outerWidth() /
        2;
      var menuCenter = parseInt(pos.left) + parseInt(menuWidth);
      var menuLeft = menuCenter - 150;
      var menuHeight = $("." + nextMenu + "-ul").height();
      $("." + nextMenu).css({
        left: menuLeft + "px",
        top: parseInt(pos.top + 45) + "px",
        height: menuHeight + "px"
      });
      $("." + nextMenu).one(
        "webkitAnimationEnd oanimationend msAnimationEnd animationend",
        function(event) {
          $(".nav-desk-menuarrow").css({
            left: parseInt(menuCenter+8) + "px",
            top: parseInt(pos.top + 45) + "px"
          });
          $(".nav-desk-menuarrow").addClass("active");
        }
      );
    }
  } else {
    SlideDesktopMenu("ltr", nextMenu, preMenu);
    setTimeout(function() {
      var menuHeight = $("." + nextMenu + "-ul").height();
      $(".sub-menu.zoomoutmenu").css({ height: parseInt(menuHeight) + "px" });
    }, desktopMenuAnimationTime);
  }
  $(document)
    .find(".user.active")
    .toggleClass("active");
  $(document)
    .find(".secondary-navigation.zoomoutmenu")
    .removeClass("zoomoutmenu");
  $(document)
    .find(".cartFlyout.flyout.cartflyoutopen")
    .removeClass("cartflyoutopen")
    .removeAttr("style");
  $(document)
    .find(".cart-flyout-wrapper")
    .removeClass("fixedOn");
  $(document)
    .find(".dropdown.open")
    .removeClass("open");
});

$(".mobile-navigation .previous-category").click(function(event) {
  event.stopPropagation();
  var preMenu = $(this).attr("menu-pre");
  var currentMenu = $(this).attr("menu-current");
  if (preMenu == "headmenu") {
    $(".sub-menu, .tertiary-sub-menu").removeClass("active");
    SlideMobileMenu("rtl", preMenu, currentMenu);
    $(".mobile-navigation .previous-category").hide();
    $(".mobile-navigation .previous-category .menu-cate-name").html("");
  } else {
    $(".mobile-navigation .previous-category").attr("style", "display: flex;");
    $(".mobile-navigation .previous-category .menu-cate-name").html(
      $(".catename_" + preMenu).html()
    );
    $(".mobile-navigation .previous-category").attr(
      "menu-pre",
      $(".mobile-navigation ." + preMenu + " .previous-cate").attr("menu-pre")
    );
    $(".mobile-navigation .previous-category").attr("menu-current", preMenu);
    SlideMobileMenu("rtl", preMenu, currentMenu);
  }
});
$(".primary-navigation-desktop .previous-category").click(function(event) {
  event.stopPropagation();
  var preMenu = $(this).attr("menu-pre");
  var currentMenu = $(this).attr("menu-current");
  SlideDesktopMenu("rtl", preMenu, currentMenu);
  setTimeout(function() {
    var menuHeight = $("." + preMenu).height();
    $(".sub-menu.zoomoutmenu").css({ height: menuHeight + "px" });
  }, desktopMenuAnimationTime);
});


$("a.master").click(function(event) {
	
  event.preventDefault();
  event.stopPropagation();
  toggleMenu();
  $(this).toggleClass("active");
  if ($(".marketplaces").hasClass("active") &&  $(".cart-flyout-wrapper-fixedOn").is(":visible")){
    $(".cart-flyout-wrapper-fixedOn").css({"z-index":'999'});
    $(".market-places_dropdown").css({"z-index":'999'})
    $(".cart-flyout-wrapper-fixedOn").hide();
	}
  else{
	$(".cart-flyout-wrapper-fixedOn").css({"z-index":'99990'});
	$(".market-places_dropdown").css({"z-index":'99991'});
	$(".cart-flyout-wrapper-fixedOn").show();
    } 
  if ($(".marketplaces").is(":visible")) {
    $(".marketplaces")
      .addClass("zoominmenu")
      .removeClass("zoomoutmenu");
    $(".marketplaces").one(
      "webkitAnimationEnd oanimationend msAnimationEnd animationend",
      function(event) {
        $(".marketplaces").removeClass("zoominmenu");
      }
    );
  } else {
    $(".marketplaces")
      .addClass("zoomoutmenu")
      .removeClass("zoominmenu");
  }
  //$(this).toggleClass("active");
  $("#marketplaces").toggleClass("active");
  
  //$(".cart-flyout-wrapper-fixedOn").css({"z-index":'99999', "display": 'none'});
  
});

$("a.user").click(function(event) {
  event.preventDefault();
  event.stopPropagation();
  toggleMenu();
  CloseCartFlyout();
  if ($(".cart-flyout-wrapper-fixedOn").is(":visible"))
    $(".cart-flyout-wrapper-fixedOn").hide();
  else $(".cart-flyout-wrapper-fixedOn").show();

  if ($(".user-profile .secondary-navigation").is(":visible")) {
    $(".user-profile .secondary-navigation")
      .addClass("zoominmenu")
      .removeClass("zoomoutmenu");
    $(".user-profile .secondary-navigation").one(
      "webkitAnimationEnd oanimationend msAnimationEnd animationend",
      function(event) {
        $(".user-profile .secondary-navigation").removeClass("zoominmenu");
      }
    );
  } else {
    $(".user-profile .secondary-navigation")
      .addClass("zoomoutmenu")
      .removeClass("zoominmenu");
  }
  $(this).toggleClass("active");
  var viewport = $(window).width();
  if (viewport > 2559 && $(".user").hasClass("active")){
    $(".cart-flyout-wrapper-fixedOn").attr("style", "right: 0;");
    $("#secondary-navigation").attr("style", "position: absolute;");
  }
});
$(".home-menu, .grm-footer").click(function(event) {
  //mobile: allows user to click in blank areas of menu without closing menu
  event.stopPropagation();

  $(document)
    .find(".dropdown.grm-dropdown.open")
    .removeClass("open");
  $(document)
    .find(".dropdown.open")
    .removeClass("open");
});
$(".home-menu a").click(function(event) {
  event.stopPropagation();
  toggleMenu();
});
$(".wrapper, .home-refresh-container").click(function() {
  var hold = $(".user.active").first();
  hold = $(hold)
    .toggleClass("active")
    .siblings("#secondary-navigation");
  $(hold).slideToggle(250);
  if ($(hold).is(":visible")) {
    $(hold)
      .addClass("zoominmenu")
      .removeClass("zoomoutmenu");
    $(hold).one(
      "webkitAnimationEnd oanimationend msAnimationEnd animationend",
      function(event) {
        $(hold).removeClass("zoominmenu");
      }
    );
  }
  toggleMenu();
  if (
    $(".cart-flyout-wrapper-fixedOn").is(":visible") &
    !$(".cartFlyout.flyout").hasClass("cartflyoutopen")
  ) {
    $(".cart-flyout-wrapper-fixedOn").hide();
  }
});
$(".menu-option").on("keyup", function(event) {
  if (event.keyCode === 13) {
    $(this).trigger("click");
  } else {
    var self = $(event.target);
    var $target = setKeyboardDirection(self, event.keyCode);

    if ($target.length) {
      setSelectedMenuOption($target);
    }
  }
  event.stopPropagation();
});
$(".secondary-category, .tertiary-category, .view-all-products").on(
  "focusout",
  function(event) {
    $(this).removeAttr("tabindex");
    $(this).removeAttr("aria-selected");

    event.stopPropagation();
  }
);
$(".languageSelect").focusin(function(event) {
  $(this).css("outline", "1px dotted blue");
});
$(".languageSelect").focusout(function(event) {
  $(this).css("outline", "");
});

function updateNavigationMenu(element) {
  var parent = element.parentElement;
  var subMenu = $(element).children('[class*="-menu"]')[0];

  if (!!subMenu) {
    $(parent).toggleClass("expanded");
  }
}

function updateHeaderNavigation(element) {
  var parent = element.parentElement;
  var subMenu = $(element).children('[class*="-menu"]')[0];
  var option = $(subMenu)
    .children(":visible")
    .first();

  if (parent.className.indexOf("home-menu") === -1 && !!subMenu) {
    $(parent).toggleClass("expanded");
  }
  setSelectedMenuOption(option);
}

function toggleMenu() {
  CloseHeadMenu();
  CloseDesktopHeadMenu();
  $(document)
    .find(".close-menu.active")
    .removeClass("active");
  $(document)
    .find(".hamburger-menu:not(.active)")
    .toggleClass("active");
  $(document)
    .find("body.menu-open")
    .toggleClass("menu-open");
}

function setKeyboardDirection(self, keycode) {
  var $prev, $next;
  if (self.hasClass("primary-category")) {
    $next = self
      .find(".sub-menu")
      .children(":visible")
      .first();
  } else {
    $prev = self.prev();
    $next = self.next();
  }

  switch (keycode) {
    case 38:
      return $prev;
      break;
    case 40:
      return $next;
      break;
    default:
      return false;
      break;
  }
}

function setSelectedMenuOption(self) {
  self
    .attr({
      "aria-selected": true,
      tabindex: "0"
    })
    .focus();
}

//To get top menu height for desktop
function GetTopMenuHeight() {
  var totalHeight;
  var scroll = $(window).scrollTop();
  var headerHeight = $(".navbar").height();
  var headerTopHeight = $(".header-top").outerHeight();
  if (scroll >= headerTopHeight) totalHeight = parseInt(headerHeight + 3);
  else totalHeight = parseInt(headerHeight + headerTopHeight + 3);
  return totalHeight;
}
//Menu Slide option added for Desktop
function SlideDesktopMenu(slidepos, enterid, exitid) {
  $("." + exitid).addClass("exit");
  setTimeout(function() {
    $(".sub-menu").addClass(slidepos);
    $("." + enterid).addClass("enter");
  }, 0);
  setTimeout(function() {
    $(".sub-menu-ul, .tertiary-sub-menu, .fourth-sub-menu").removeClass(
      "current"
    );
    $("." + exitid).removeClass("exit");
    $("." + enterid)
      .addClass("current")
      .removeClass("enter");
    $(".sub-menu").removeClass("rtl");
    $(".sub-menu").removeClass("ltr");
  }, desktopMenuAnimationTime);
}
//Menu Slide option added for Mobile
function SlideMobileMenu(slidepos, enterid, exitid) {
  $("." + exitid)
    .addClass("exit")
    .removeClass("current");
  if (exitid == "headmenu")
    $(".grm-footer")
      .addClass("exit")
      .removeClass("current");
  $("." + enterid).addClass("enter");
  if (enterid == "headmenu") $(".grm-footer").addClass("enter");
  setTimeout(function() {
    $(".mobile-navigation").addClass(slidepos);
  }, 0);
  setTimeout(function() {
    $("." + exitid).removeClass("exit");
    if (exitid == "headmenu") $(".grm-footer").removeClass("exit");
    $(".headmenu, .sub-menu, .tertiary-sub-menu, .grm-footer").removeClass(
      "current"
    );
    $("." + enterid)
      .addClass("current")
      .removeClass("enter");
    if (enterid == "headmenu")
      $(".grm-footer")
        .addClass("current")
        .removeClass("enter");
    $(".mobile-navigation").removeClass("rtl");
    $(".mobile-navigation").removeClass("ltr");
  }, mobileMenuAnimationTime);
}
//Menu close for Desktop
function CloseDesktopHeadMenu() {
  if ($(".headmenu .primary-category").hasClass("active")) {
    setTimeout(function() {
      $(".sub-menu-ul, .tertiary-sub-menu, .fourth-sub-menu").removeClass(
        "current"
      );
    }, desktopMenuAnimationTime);
    $(".nav-desk-menuarrow").removeClass("active");
    $(".sub-menu").removeClass("zoomoutmenu");
    $(".headmenu .primary-category").removeClass("active");
    if (!$(".cartFlyout.flyout").hasClass("cartflyoutopen"))
      $(".cart-flyout-wrapper-fixedOn").hide();
  }
}
//Menu close for Mobile
function CloseHeadMenu() {
  $(document)
    .find(".mobile-navigation.showhomemenu")
    .removeClass("showhomemenu");
  setTimeout(function() {
    $(document)
      .find(
        ".mobile-navigation .headmenu.current, .mobile-navigation .grm-footer.current, .mobile-navigation .sub-menu.current, .mobile-navigation .tertiary-sub-menu.current"
      )
      .removeClass("current");
  }, mobileMenuAnimationTime);
  $(".mobile-navigation .previous-category").hide();
  $(document)
    .find(".sub-menu.active, .tertiary-sub-menu.active")
    .removeClass("active");
  $(document)
    .find("body.overflow-hidden")
    .removeClass("overflow-hidden");
}

$(document).on("keydown", function(e) {
  if (e.key === "Escape" || e.key === "Esc") {
    CloseDesktopHeadMenu();
    if ($(".user-profile .secondary-navigation").is(":visible")) {
      $(".user-profile .secondary-navigation")
        .addClass("zoominmenu")
        .removeClass("zoomoutmenu");
      $(".user-profile .secondary-navigation").one(
        "webkitAnimationEnd oanimationend msAnimationEnd animationend",
        function(event) {
          $(".user-profile .secondary-navigation").removeClass("zoominmenu");
        }
      );
      $(".user-profile .user.active").removeClass("active");
      $(".cart-flyout-wrapper-fixedOn").hide();
    }
  }
});
;
var eFilterCategories = {
    init: function () {
			
		var labelTriggeredByJQuery = false;
		 // Correct usage with event delegation
		$(document).on('click', '.checktree label', function(event) {
		    // This will work for dynamically added elements
		    var triggeredElementLabel = $(event.target);
		    if (triggeredElementLabel.is('span')) {
      			// Get the parent of the span
      			var triggeredElementLabel = triggeredElementLabel.parent();
      		}
		    if(triggeredElementLabel.is('label')){
				labelTriggeredByJQuery = true;
				$("#"+triggeredElementLabel.attr('for')+"").trigger("click");
			}
		});

		//debugger;
		if($("#jsonData").length == 0) {
			return false;
		}
		//This Code help to indetify its mobile or small devices
		var isMobileResolution = false;
		 if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
        // This code will run if the user is using a mobile browser
	        console.log("User is using a mobile browser");
	        isMobileResolution = true;
	        $('.filter-by-container').trigger('click');
	    }
		/*************************************************************
		Note: Here in this bellow method "checkTreeCodeActivation()" initiate
		chekctree core behaviours and next local storage expireblog to ride localstorage
		"clearallfilter" remove all complete url query params
		**************************************************************/
		eFilterCategories.checkTreeCodeActivation();
		eFilterCategories.expireLocalStoargeFlag();
		eFilterCategories.clearallFilter();
        /***************************************************************
        Note: isSearchPage set this flag to identify page is search or 
        category page.
        ***************************************************************/
        var currentURL = window.location.href;
        var searchTerm = /\/search/i; // 'i' for case-insensitive search
        /* Note : "isSearchPage" Key help to indentify this is "Search" result page*/
        var isSearchPage = searchTerm.test(currentURL) ? true : false;
        
        var urlRootCatId = new URL(currentURL);
	    var rootCatId = (urlRootCatId.searchParams).get('rCatId');
			
        /***************************************************************
        Note : This bellow code used to reset arrowInfo as empty from localstorage
        because "/categoryLeftNav" details only present in URL atleast 
        one category selection.
        *****************************Bellow condition will make empty object while page load first time***********************************/
		if (currentURL.indexOf('/categoryLeftNav') === -1 && currentURL.indexOf('/search') === -1) {
			localStorage.setItem("arrowInfo", JSON.stringify({
						  collapsed: [],
						  expanded: []
						}));
			localStorage.setItem("eventCatId", '');
        }
        /***************************************************************
        Note : This sort of code help to identify for the search and also 
        category selection queryParam details (from the URL) 
        and push it inside an array. 
        ****************************************************************/
        var isCatIdPresentUrl = false;
		var mockData = [];
		var queryArray = [];
        var query = window.location.search.substring(1); // Get the query string without the '?'
        var queryParams = query.split('&'); // Split query parameters
        for (var i = 0; i < queryParams.length; i++) {
            var pair = queryParams[i].split('=');
            var key = decodeURIComponent(pair[0]);
            var value = decodeURIComponent(pair[1]);
            if (!isSearchPage && key === 'catId') {
		        isCatIdPresentUrl =  true;
		        queryArray.push(value);
		    }
		    if (isSearchPage && key === 'exCatId') {
		        //isCatIdPresentUrl =  true;
		        queryArray.push(value);
		    }
        }

		/***************************************************************
		"isMenuClick" this flag help to identify menu got clicked.
		if url do not have any query params its considered as menu click 
		for now. so as default its declared as true.
		**************************************************************/
		var isMenuClick = true;
        
        /***************************************************************
        Note : Sample test data for checktree jquery
            mockData.push({
                 item:{
                     id: 'id3',
                     label: 'Merchandise',
                     value:1,
                     checked: false
                 },
                 children: [{
                    item:{
                         id: 'id31',
                         label: 'The Real Deal',
                         value:1,
                         checked: true
                     }
                 }]
                   });
        ***************************************************************/
        
        /***************************************************************
        Note: #catIdsCountMap this has value of search result categories. 
        And we format this result as an array set "catIdsCountMapArray".
        This bellow section help to format as an array.
        ***************************************************************/
        var catIdsCountMapArray = [];
        if ($("#catIdsCountMap").val()) {
            var obj = $("#catIdsCountMap").val();
            var validJSON = obj.replace(/(\w+)=(\w+)/g, '"$1": $2');
            catIdsCountMapArray = JSON.parse(validJSON);
        }

		/***************************************************************
        Note: Checking category left nav model details present or not.
        Also "categoryLeftNavJson" used to store in local storage
        ***************************************************************/
		var categoryLeftNavFromLocalStorage = localStorage.getItem('categoryLeftNavJson');
		if (!isSearchPage && categoryLeftNavFromLocalStorage !== null) { 
				mockData = JSON.parse(localStorage.getItem('categoryLeftNavJson'));
		} else {
			if($("#jsonData").length > 0 && $.trim($("#jsonData").html()) !== '' ) {
				/***************************************************************
		        Note: In case of search result page first we have to do desired 
		        format for checktree as per sample mockdata in the top section 
		        with the help of "convertToDesiredFormat". And from the result ,
		        have to filter and map only search result categories using method 
		        "filterFromMapforSearch".
		        ***************************************************************/
		        var jsonData = JSON.parse($("#jsonData").text());
				 if (isSearchPage) {
	             	mockData = eFilterCategories.filterFromMapforSearch(eFilterCategories.convertToDesiredFormat( jsonData , isSearchPage, catIdsCountMapArray));           	
	        	} else {
	    	        mockData = eFilterCategories.convertToDesiredFormat(jsonData, false, catIdsCountMapArray);
					/**********************loading mockdata in local storage - init ***************/
		        	if(mockData != null && JSON.stringify(mockData) != null && mockData != '' && mockData && mockData.length > 0){
						localStorage.setItem('categoryLeftNavJson', JSON.stringify(mockData));
						$("#jsonData").remove(); // Remove mock data from dom
	    				$("#catIdsCountMap").remove();
					}
		        	
		        	/*****************loading mockdata in local storage - End *********************/
	        	}
	        	
			}
		}

        if (mockData && mockData.length > 0) {
	        if(mockData != null && JSON.stringify(mockData) != null && mockData != ''){
				$("#jsonData").remove(); // Remove mock data from dom
				$("#catIdsCountMap").remove();
			}
            /***************************************************************
            Note: This is the place where we loading data to "checkTree".
            ***************************************************************/
            $('#tree-container').checkTree({
                data: mockData,
                onExpand : function(){
							eFilterCategories.toggleSectionVisibility(true,isSearchPage);  
						},
                onCollapse : function(){
						 	   eFilterCategories.toggleSectionVisibility(false,isSearchPage);
						}
             });
            
            if(isSearchPage) {
				eFilterCategories.searchPageChecktreeActionHandler(queryArray);
				/**************************Target category search impl - Init***********************************/
				var urlTargetSearchCatId = new URL(currentURL);
    			var searchCatId = (urlTargetSearchCatId.searchParams).get('searchCatId');
				if(searchCatId){
					$(".checktree").find("li").hide();
					$(".checktree").find("li[rel='_"+searchCatId+"']").show();
					$(".checktree").find("li[rel='_"+searchCatId+"']").find('li').show();
					var elem = $(".checktree").find("li[rel='_"+searchCatId+"']").eq(0);
					$(".checktree").html(elem);
				}
				/**************************Target category search impl - End************************************/
			}
            /******************************************** */
            if(!isSearchPage){
				// Call the function to find the paths to the target IDs starting from inputData
				var paths = []; // An array to store the paths  
				eFilterCategories.findPathToIds(mockData, queryArray, [], paths);
				/**************************************************************************
				Note : ExpandSpecificNodes Given node paths
				***************************************************************************/
			  	$.each(paths, function(pathItem,value) {
			    	eFilterCategories.expandSpecificNodes($('.checktree'), value );
				});
			}
			/******************************************** */
        }

		/* 	Note : After expand all categories this method help to make 
         *  selection of checkbox only given categories (parameter) from the url
         */
        if(!isSearchPage){
			eFilterCategories.markCheckedFromURLParam(queryArray);
		}
		
		if(!isSearchPage && isMenuClick && rootCatId) {   // This method help to identify category level and render it in category left nav 
			var rootCatIds = [];
			var segments = [];
			rootCatIds.push(rootCatId);
			var rootCatIdPaths = []; // An array to store the paths  
			eFilterCategories.findPathToIds(mockData, rootCatIds , [], rootCatIdPaths);
			//debugger;
			//var segments = rootCatIdPaths[0];
			if (rootCatIdPaths && rootCatIdPaths.length > 0) {
				segments = rootCatIdPaths[0];
			}
			var pathlevel='';
			var $currentLi;
			for (var i = 0; i < segments.length; i++) {
			    pathlevel = segments[i];
			    $currentLi = $(".checktree").find("li[rel='_"+pathlevel+"']").eq(0);
			    $currentLi.find(".arrow:first").click();
			}	
			
			if(isCatIdPresentUrl){
				$(".checktree").find("li:visible:not(.updated)").hide();
				$(".checktree").find("li[rel='_"+pathlevel+"']").eq(0).parent().parent().find("li").show();
				$currentLi.find(".arrow:first").click();
			}
			$(".checktree").html($currentLi); // Replace Current ".checktree" node with selected category level
		}
		
		if(!isSearchPage && !rootCatId){
			var myString = (window.location.pathname).replace('/ecommerce','');
			var segments = myString.split('/');
			var pathlevel='';
			for (var i = 0; i < segments.length; i++) {
			  if (segments[i]) {
					pathlevel += "/"+segments[i];
				    $(".checktree").find("li").hide();
				    $(".checktree").find("li input[data-url='"+pathlevel+"']").eq(0).parents("li").show();
				    $(".checktree").find("li input[data-url='"+pathlevel+"']").eq(0).parent().parent().show();
					$(".checktree").find(".arrow:visible:last").click();
					$(".checktree").html($(".checktree").find("li input[data-url='"+pathlevel+"']").eq(0).parent().parent());
			  }
			}	
		}
		
		
		////////////////////////////////////Regain on selected UI arrow details Init//////////////////////////////////////////////////
			var arrowInfo = JSON.parse(localStorage.getItem("arrowInfo")) || {
							  collapsed: [],
							  expanded: []
							};
			//var arrowInfo = JSON.parse(arrowInfoString);
			//console.log(arrowInfo.collapsed);
			$.each(arrowInfo.collapsed, function(index, value) {
				//debugger;
			    const specificAttributeLi = $('.checktree li[data-node-id="'+value+'"]'); 
			    if (specificAttributeLi.length > 0) {
					const thisCategoryArrow = specificAttributeLi.find('.arrow').first(); 
					if(thisCategoryArrow.hasClass("expanded")){
						thisCategoryArrow.click();	
					}
			    }
			});
			
			$.each(arrowInfo.expanded, function(index, value) {
			    const specificAttributeLi = $('.checktree li[data-node-id="'+value+'"]'); 
			    if (specificAttributeLi.length > 0) {
					const thisCategoryArrow = specificAttributeLi.find('.arrow').first(); 
					if(thisCategoryArrow.hasClass("collapsed")){
						thisCategoryArrow.click();	
					}
			    }
			});
			
		////////////////////////////////////Regain on selected UI arrow details End//////////////////////////////////////////////////
		
	$("#tree-container").on("click", "li[rel^='_'] div.checkbox", function(event) {

		if (!isSearchPage) {
			eFilterCategories.categoryPageCheckboxInitAction();
		}
		var uncheckedValues = [];
		if (isSearchPage) {
			uncheckedValues = eFilterCategories.searchPageCheckboxInitAction();
		}	

	    if (event.isTrigger && labelTriggeredByJQuery == false) {
	        //console.log("Triggered click");
	        event.preventDefault();
	    } else {
	        //console.log("User-initiated click");
	        //console.log("current checked or unchecked category id");
	        var currentEventCatId = $(this).parent('li').attr('data-node-id');
	        if(currentEventCatId && currentEventCatId != ''){
	        	localStorage.setItem("eventCatId", currentEventCatId);
	        }
			if (isSearchPage) {   /// Search checkbox check or uncheck => Redirection
				var currentURL = window.location.href;
				var newCurrentURL = eFilterCategories.removeQueryParam(currentURL, "exCatId");
				
				var queryParameters = uncheckedValues.map(function (exCatId) {
										  return 'exCatId=' + exCatId;
										});
				var queryString = queryParameters.join('&');
				if(newCurrentURL.includes('?') && window.location.search ==''){
					newCurrentURL.replace('?', '');
				}
				var updatedURL = newCurrentURL + (newCurrentURL.includes('?') ? '&' : queryString != '' ? '?': '') + queryString;
				if (updatedURL.endsWith('&')) {
				  updatedURL = updatedURL.slice(0, -1);
				}		
				// Use the updated URL to navigate to the new page
				window.location.href = updatedURL;
			}
			else {   			/// Category checkbox check or uncheck => Redirection
		    		
						//var urlQueryString = "?catId=" + catIdArray.join('&catId=');
						var allCheckboxDetail = $(".checktree").find(".checked:visible");
			    		///var allCheckboxDetail = $(".checktree").find(".checked");
						var catIdArray = [];
						$.each(allCheckboxDetail, function() {
								catIdArray.push($(this).find('input[type="hidden"]').val());
						});
					
					
					//Endor- 3761 init for capture half checked items 
						var halfCheckedCheckboxDetail = $(".checktree").find(".half_checked:visible");
			    		///var allCheckboxDetail = $(".checktree").find(".checked");
						var hcatIdArray = [];
						$.each(halfCheckedCheckboxDetail, function() {
								hcatIdArray.push($(this).find('input[type="hidden"]').val());
						});
					//Endor-3761 End for capture half checked items
					/////////////////////////////////////////////////
					
						// Add the query string to the existing URL
						var currentURL = window.location.href;
						// Define the query parameter key you want to remove
						
						// Call the function to remove the parameter
						var newCurrentURL = eFilterCategories.removeQueryParam(currentURL, "catId");
						newCurrentURL = eFilterCategories.removeQueryParam(newCurrentURL, "mlCat");
						newCurrentURL = eFilterCategories.removeQueryParam(newCurrentURL, "rCatId");
						//Part of Endor-3761 
						newCurrentURL = eFilterCategories.removeQueryParam(newCurrentURL, "hCatId");
						
						if(catIdArray.length == 0){  // No Category present in URL means redirect to Parent Category URL
							var remainingURLWithoutCatID = newCurrentURL;
							var remainingQueryParams = new URL(remainingURLWithoutCatID);
							var parentCategoryUrl = $(".checktree").find("li:first").find("input:first").attr("data-url");
							window.location.href = window.location.origin+'/ecommerce'+parentCategoryUrl+( (remainingQueryParams && remainingQueryParams.search) ? remainingQueryParams.search : '');
						}else{ // In case Minimum one Category presnet in URL means redirect to "/categoryLeftNav" with parent rCatId and selected catId
							
							var remainingURLWithoutCatIDMlCat = new URL(newCurrentURL);
							var remainingQueryParams = new URL(remainingURLWithoutCatIDMlCat);
							
							var queryParam = ( (remainingQueryParams && remainingQueryParams.search) ? remainingQueryParams.search : '').substring(1);
							// Construct an array of query parameter strings
							var queryParameters = catIdArray.map(function (catId) {
							  return 'catId=' + catId;
							});
							hcatIdArray.map(function (hcatId) { //Part of Endor-3761 
							  //return 'hcatId=' + hcatId;
							  queryParameters.push('hCatId=' + hcatId);
							});
							
							// Join the query parameter strings with '&' to create the full query string
							if(catIdArray.length > 1){
								queryParameters.push('mlCat=1');
							}
	
							// RootCat Id formation here
							if($(".checktree").find("li:first").attr("data-node-id")){
								 queryParameters.push('rCatId='+$(".checktree").find("li:first").attr("data-node-id"));
							}
							var queryString = queryParameters.join('&');
	
							///////////////////////////////////////////////
							updatedURL = (window.location.origin+ '/ecommerce/categoryLeftNav')+"?"+queryString+(queryParam ? "&"+queryParam : "");
							//////////////////////////////////////////////
							window.location.href = updatedURL;
						}
						

				}
		    }
		    
		});
		
		
		if(!isSearchPage){
			var paramCheck = "catId";
			var isExpandViewMoreSection = eFilterCategories.findGivenParamPresentInURL(paramCheck);
		}
		else {
			var paramCheck = "q";
			var isExpandViewMoreSection = eFilterCategories.findGivenParamPresentInURL(paramCheck);		
		}
		eFilterCategories.viewMoreClickHandler(isExpandViewMoreSection, isSearchPage);
		if(isMobileResolution){
			$('.filter-container-overlay').trigger('click');
		}
		
		//Breadcum restrict with parent level if multiple categories checked
		var currentUrlInfo = new URL(currentURL);
	    var ismlCatPresent = (currentUrlInfo.searchParams).get('mlCat');
		if(!isSearchPage && ismlCatPresent){
			eFilterCategories.breadcumforMultipleCategory();
		}
/***********************************UncheckLogics Start************************************************/
/************************************UncheckLogics End***********************************************/  
		//Bellow script getting called while this code load to invoke further actions         
		eFilterCategories.remeberArrowHandler();      
		
		/*************Scroll to recent checked category***************/
		eFilterCategories.scrollToElement(localStorage.getItem("eventCatId"));
		//////Orphan category - init 4382/////
		var liCount = $('ul.checktree li').length;
		if(liCount == 0){
			$('.category-filter-container').hide();
		}
		//////Orphan category - end 4382/////
    },
    scrollToElement : function(dataNodeId){
    			if(dataNodeId && dataNodeId != ''){
    				// Your selected li element
         			 var targetElement = $('.category-filter li[data-node-id="' + dataNodeId + '"]');

       					 // Scroll to the selected li element
      				  $('.category-filter').animate({
          				  scrollTop: targetElement.offset().top - $('.category-filter').offset().top + $('.category-filter').scrollTop()
       				 }, 1000); // Adjust the animation speed as needed
      			  }else{
    				$('.category-filter').animate({
    					    scrollTop: 0
	  	  	  		}, 1000);
    			  }
    },
	remeberArrowHandler : function(){
		$(".checktree .arrow").on("click", function(node) {
			if (node.isTrigger) {
	        	//console.log("Triggered click");
	        	node.preventDefault();
	   		}else{
				var arrowInfo = JSON.parse(localStorage.getItem("arrowInfo")) || {
							  collapsed: [],
							  expanded: []
							};
					var arrow_id = node.currentTarget.parentNode.getAttribute('data-node-id');
					if((node.currentTarget.classList).contains('collapsed')){
						  // Check if the value is in the collapsed array
						  var collapsedIndex = arrowInfo.collapsed.indexOf(arrow_id);
						  if (collapsedIndex !== -1) {
						    // Remove it from the collapsed array
						    arrowInfo.collapsed.splice(collapsedIndex, 1);
						  }
					      // Check if the value is not already in the expanded array
				         (arrowInfo.expanded.indexOf(arrow_id) === -1) ?  arrowInfo.expanded.push(arrow_id) : '';
					}
					
					if((node.currentTarget.classList).contains('expanded')){
						  // Check if the value is in the expanded array
						  var expandedIndex = arrowInfo.expanded.indexOf(arrow_id);
						  if (expandedIndex !== -1) {
						    // Remove it from the expanded array
						    arrowInfo.expanded.splice(expandedIndex, 1);
						  } 
						  // Check if the value is not already in the collapsed array
					      (arrowInfo.collapsed.indexOf(arrow_id) === -1) ? arrowInfo.collapsed.push(arrow_id) : '';
					}
				
				 // Update local storage
			      localStorage.setItem("arrowInfo", JSON.stringify(arrowInfo));
			}
			
		});
		
		$("#search_send, #search_send-xs").on("click", function(event) {
        // Check if the event is a click or a keypress and if the key pressed is Enter (key code 13)
				localStorage.setItem("arrowInfo", JSON.stringify({
				  collapsed: [],
				  expanded: []
				}));
				localStorage.setItem("eventCatId", '');	
        });
	},
    breadcumforMultipleCategory : function() {
		var url = $(".checktree").find("li:first").find("input:first").attr("data-url");
		$(".breadcum-list").find("li:has(a[data-label='"+url+"'])").nextAll('li').hide();
		$(".breadcum-list").find("li:has(a[data-label='"+url+"'])").find("div").hide();
	},
    getQueryParam : function(param) {
        var urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
    },
    findGivenParamPresentInURL : function(param){
        // Check if "catId" exists in the URL
        var flag = eFilterCategories.getQueryParam(param);
        return flag? true: false;
	},
    excludeCheckBoxIds : function(){
		var uncheckedValues = eFilterCategories.searchPageCheckboxInitAction();
	    // Now, divIds array contains the IDs of the selected divs
	    return uncheckedValues;
	},
    expandAllNodes : function($ul) {
        $ul.find('li').each(function () {
            var $li = $(this);
            var $arrow = $li.find('.arrow');
            if ($arrow.length && $arrow.hasClass('collapsed')) {
                $arrow.click();
            }
            if ($li.find('ul').length) {
                eFilterCategories.expandAllNodes($li.find('ul'));
            }
        });
    },
    toggleSectionVisibility : function(isExpand,isSearchPage) {
	       //if(!isSearchPage){
		//debugger;
		var categoryFilterHeight = 0;
		if(!isSearchPage){
			categoryFilterHeight = $(".checktree li:first").height();
		}else{
			$(".checktree li").each(function() {
			  categoryFilterHeight += $(this).height();
			});
		}
		//(!isSearchPage && $(".checktree li:first").height() > 400)  || (isSearchPage && categoryFilterHeight > 400)
		//(!$(".categorySectionExpandBtn").find('span:visible').attr('data-alt') == 'viewless' || $(".categorySectionExpandBtn:visible").length > 0) 
				//debugger;
				
				if(  isExpand && ( ($(".categorySectionExpandBtn").find('span:visible').attr('data-alt') != 'viewless') ||  $(".categorySectionExpandBtn:visible").length == 0) ) {
					var itemCount = $('.checktree  li').length;
			        if ( isExpand && (itemCount > 12 && categoryFilterHeight > 400 )  ) {
						$('.category-filter').css({ 'height': 'auto', 'overflow-y': 'auto', 'max-height' : '400px' });
			            $('.categorySectionExpandBtn').show();
						$('#categoryViewLessClk').hide();
		            	$('#categoryViewMoreClk').show();
			        } 	
				}
				
		        var visibleItemCount = $('.checktree  li:visible').length;
		        if( (!isExpand && ( (visibleItemCount == 1 ) ||  (visibleItemCount < 12 && categoryFilterHeight < 400)  ) ) ) {
						$('.category-filter').css({ 'height': 'auto', 'overflow-y': 'auto', 'max-height' : '400px' });
						$('.categorySectionExpandBtn').hide();
			   }
			//}

	},
	measureCheckTreeHeight :function(){
		var treeHeight = 0;
		    $('.checktree li:visible').each(function() {
		      treeHeight += $(this).outerHeight(true);
		    });
		    return treeHeight;
	},
    viewMoreClickHandler: function (isExpandViewMoreSection, isSearchPage) {
		var categoryFilterHeight = 0;
		if(!isSearchPage){
			categoryFilterHeight = $(".checktree li:first").height();
		}else{
			$(".checktree li").each(function() {
			  categoryFilterHeight += $(this).height();
			});
		}


		$(".categorySectionExpandBtn").hide();
		
		var visibleItemCount = $('.checktree  li:visible').length;
		if((!isSearchPage && $(".checktree li:first").height() > 400)  || (isSearchPage && categoryFilterHeight > 400)){
			$(".categorySectionExpandBtn").show();
			$('#categoryViewLessClk').hide();
			$('.category-filter').css({ 'overflow-y':'hidden',  'height' : '400px' , 'max-height' : '400px' });
			
			if(isSearchPage && visibleItemCount < 12){
				$(".categorySectionExpandBtn").hide();
				$('.category-filter').css({ 'overflow-y':'hidden',  'height' : 'auto' , 'max-height' : 'none' });
			}
		}else{
			if(isSearchPage  && visibleItemCount < 12){
				$('.categorySectionExpandBtn').show();	
			}
		}
		
					
		$(".categorySectionExpandBtn").click(function () {
			if ( $(this).find('span:visible').attr('data-alt') == 'viewmore') {  //view more click
				if( (!isSearchPage && $(".checktree li:first").height() > 400)  || (isSearchPage && categoryFilterHeight > 400) ){
					$('.category-filter').css({ 'height': 'auto', 'overflow-y': 'auto', 'max-height' : '800px' });
				}
				$('#categoryViewMoreClk').hide();
            	$('#categoryViewLessClk').show();
			}
			else
			if ($(this).find('span:visible').attr('data-alt') == 'viewless') { 	//view less click
				$('.category-filter').css({ 'overflow-y':'auto',  'height' : '400px' , 'max-height' : '400px' });
				$('#categoryViewLessClk').hide();
            	$('#categoryViewMoreClk').show();
			}
			var visibleItemCount = $('.checktree  li:visible').length;
			if(isSearchPage && visibleItemCount < 12){
				$(".categorySectionExpandBtn").hide();
				$('.category-filter').css({ 'overflow-y':'hidden',  'height' : 'auto' , 'max-height' : 'none' });
			}
		});
			
	    if(isExpandViewMoreSection){
			if( $(".categorySectionExpandBtn").find('span:visible').attr('data-alt') == 'viewmore' ){
				$(".categorySectionExpandBtn").click();	
			}
		}
    },
    filterData : function(data, filteredIds) {
            if (!data || data.length === 0) {
                return [];
            }
            return data.reduce((result, item) => {
                const children = eFilterCategories.filterData(item.children, filteredIds);

                if (filteredIds.includes((item.item.id).replace(/_/g, '')) || children.length > 0) {
                    result.push({
                        item: item.item,
                        children,
                    });
                }
                return result;
            }, []);
     },
    getParentUrl : function(itemCurrentUrl){
	        var inputString = itemCurrentUrl;
			var lastIndex = inputString.lastIndexOf("/");
			if (lastIndex !== -1) {
			  var result = inputString.substr(0, lastIndex + 1);
			  return result.slice(0, -1) != undefined? result.slice(0, -1) : '';
			}
			return '';
	},
	convertToDesiredFormat :function(input,isSearchPage, catIdsCountMapArray) {
            if (!Array.isArray(input)) {
                return null;
            }

            return input.map((item) => {
                const newItem = {
                    item: {
                        id: `_${item.id}`,
                        label: item.label,
                        value: item.id,
                        //checked: isSearchPage ? true : false,
                        checked: isSearchPage ? true : false,
                        parentUrl  : eFilterCategories.getParentUrl(item.url),
                        url: item.url,
                        count: (catIdsCountMapArray && catIdsCountMapArray[item.id] > 0 ? catIdsCountMapArray[item.id] : 0)
                    },
                    children: [],
                };
                if (Array.isArray(item.submenu) && item.submenu.length > 0) {
                    newItem.children = eFilterCategories.convertToDesiredFormat(item.submenu, isSearchPage, catIdsCountMapArray);
                }
                return newItem;
            });
     },
	expandSpecificNodes:function($ul, itemIds) { //["13650", "13651", "51963"]
		  $ul.find('li').each(function() {
		    var $li = $(this);
		    var itemId = $li.attr('data-node-id'); //13650
			    if (itemIds.includes(itemId)) {
			      var $arrow = $li.find('.arrow');
				      if ( ($arrow.length && $arrow.hasClass('collapsed') && !$arrow.hasClass('expanded') ) ) {
				        $arrow.click();
				      }
			    }
			    if ($li.find('ul').length) {
			      eFilterCategories.expandSpecificNodes($li.find('ul'), itemIds);
			    }
		  });
	},
	findPathToIds: function(data, targetIds, currentPath, paths) {
			  for (const item of data) {
			    const itemId = (item.item.id).replace(/_/g, '');
			    //const itemId = item.item.value;
			    const newPath = currentPath.concat(itemId);
			    if (targetIds.includes(itemId)) {
			      paths.push(newPath);
			    }
			
			    if (item.children) {
			      eFilterCategories.findPathToIds(item.children, targetIds, newPath, paths);
			    }
			  }
			  
	},
	markCheckedFromURLParam :function(queryArray) {
            checkedIds = queryArray;
            checkedIds.forEach(function (id, index) {
                var checkboxElement = $('li[rel="_' + id + '"] div.checkbox');
                if(checkboxElement.length > 0 && !checkboxElement.hasClass("checked")){
					checkboxElement[0].click();
				}   
            });
    },
	filterFromMapforSearch :function(mockdata) {
            var obj = $("#catIdsCountMap").val();
            var validJSON = obj.replace(/(\w+)=(\w+)/g, '"$1": $2');
            catIdsCountMap = JSON.parse(validJSON);
            var submenuIdsToFilter = Object.keys(catIdsCountMap);
            var filteredItemss = eFilterCategories.filterData(mockdata, $.unique(submenuIdsToFilter));
            return filteredItemss;
    },
	searchPageChecktreeActionHandler :function(queryArray){
			eFilterCategories.expandAllNodes($(".checktree"));
			$.each(queryArray, function(pathItem,value) {
				$("#_"+value+"").click();
				 var $arrow = $("#_"+value+"").parent().siblings().eq(1);
			      if ( ($arrow.length && $arrow.hasClass('expanded') && !$arrow.hasClass('collapsed') ) ) {
			        $arrow.click();
			      }
			});
	},
	categoryPageChecktreeActionHandler :function(){
		
	},
	headerMenuSelectionPageChecktreeActionHandler :function(){
		
	},
	expireLocalStoargeFlag : function(){
		var expireTimimg = new Date(new Date().setMinutes(new Date().getMinutes() + 15));
		var localGetValue = new Date(JSON.parse(localStorage.getItem("cflag")));
		if(localStorage.getItem("cflag") && JSON.parse(localStorage.getItem("cflag")) != null && localGetValue < new Date()){
			localStorage.removeItem("categoryLeftNavJson");
			localStorage.setItem("cflag", JSON.stringify(expireTimimg));
		}
		if(localStorage.getItem("cflag") == null) {
			localStorage.setItem("cflag" , JSON.stringify(expireTimimg));
		}
		
	},
	clearallFilter :function(){
		var currentURL = window.location.href;
        var searchTerm = /\/search/i; // 'i' for case-insensitive search
        var isSearchPage = searchTerm.test(currentURL) ? true : false;
		if (currentURL.indexOf('?') === -1) {
			$(".clearallfilterBtn").hide();
		}
		
		$(".clearallfilterBtn").click(function(){
			//var baseURL = currentURL.split('?')[0];
			//var rootCatId = "?rCatId="+$(".checktree").find("li:first").attr("data-node-id");
			//window.location.href = baseURL+rootCatId;
			if(isSearchPage){
				var q = eFilterCategories.getQueryParam("q");
				window.location.href = window.location.origin+window.location.pathname+"?q="+(q ? q : '');
			}else{
				var parentCategoryUrl = $(".checktree").find("li:first").find("input:first").attr("data-url");
				window.location.href = window.location.origin+'/ecommerce'+parentCategoryUrl;
			}

		});
		$(".category-filter-clear").click(function(){
			/*var currentURL = window.location.href;
			currentURL = eFilterCategories.removeQueryParam(currentURL, 'catId');
			window.location.href = eFilterCategories.removeQueryParam(currentURL, 'mlCat');*/
			
			if(isSearchPage){
				var currentURL = window.location.href;
				currentURL = eFilterCategories.removeQueryParam(currentURL, 'exCatId');
				window.location.href = currentURL;
			}else{
				var currentURL = window.location.href;
				var remainingURLWithoutCatID = eFilterCategories.removeQueryParam(currentURL , "catId");
				var remainingQueryParams = new URL(remainingURLWithoutCatID);
				var parentCategoryUrl = $(".checktree").find("li:first").find("input:first").attr("data-url");
				window.location.href = window.location.origin+'/ecommerce'+parentCategoryUrl+( (remainingQueryParams && remainingQueryParams.search) ? remainingQueryParams.search : '');
			}
		});
		
	},
	// Function to remove a query parameter by key
	removeQueryParam :function(url, paramKey) {
		     var urlParts = url.split('?');
			  if (urlParts.length > 1) {
			    var baseUrl = urlParts[0];
			    var queryParams = urlParts[1].split('&');
			
			    var remainingParams = [];
			
			    for (var i = 0; i < queryParams.length; i++) {
			      var param = queryParams[i].split('=');
			      var key = param[0];
			
			      // If the key is not the target key, add it to the remainingParams array
			      if (key !== paramKey) {
			        remainingParams.push(queryParams[i]);
			      }
			    }
			
			    if (remainingParams.length > 0) {
			      // Reconstruct the URL with the remaining query parameters
			      return baseUrl + '?' + remainingParams.join('&');
			    } else {
			      // If there are no remaining query parameters, return just the base URL
			      return baseUrl;
			    }
			  } else {
			    return url; // No query parameters in the URL
			  }
	},
	expandLiToLastChecked :function($li) {
	    // Find the last child with a checked state
	    var $lastCheckedChild = $li.find("li:has(.checked):last");
	
	    // Expand the parent <li> up to the last checked child
	    //$li.parents("li").addBack().find("> div.arrow.collapsed").removeClass("collapsed").addClass("expanded");
		$li.parents("li").addBack().find("> div.arrow.collapsed").click();
	
	    // If there is a lastCheckedChild, expand it recursively
	    if ($lastCheckedChild.length) {
	      eFilterCategories.expandLiToLastChecked($lastCheckedChild);
	    }
	},
	collapseUncheckedItems :function($element) {
	  $element.find('> ul > li').each(function() {
	    var $li = $(this);
	    var $checkbox = $li.find('.checkbox');
	    if (!$checkbox.hasClass('checked') || !$checkbox.hasClass('half_checked')) {
	      $li.find('.arrow').removeClass('expanded').addClass('collapsed');
	      $li.find('ul').hide();
	    }
	    
	    // Recursively check child elements
	    if ($li.find('ul').length) {
	      eFilterCategories.collapseUncheckedItems($li);
	    }
	  });
	},
	categoryPageCheckboxInitAction : function(){
		  // Find all <li> elements with a child containing the "half_checked" class
		  var $halfCheckedLi = $("li:has(.half_checked)");
		  // Expand the parent <li> elements until the last child with a checked state
		  $halfCheckedLi.each(function() {
		    var $parentLi = $(this);
		    eFilterCategories.expandLiToLastChecked($parentLi);
		  });
		  
		 $(".checktree").find("li:has(ul)").each(function () {
				if ($(this).find("li .checkbox").length == $(this).find("li .checked").length) {
					$(this).find("ul").hide();
					$(this).find(".arrow").removeClass("expanded").addClass("collapsed");
				}
		 });
	},
	searchPageCheckboxInitAction :function(){
			var uncheckedValues = [];
			var topLevelItems = $('ul.checktree > li');
			
				// Function to recursively collapse unchecked <li> elements and their children
				function collapseUncheckedItems($items) {
				  $items.each(function() {
				    var $li = $(this);
				    var $checkbox = $li.find('.checkbox');
				
				    if (!$checkbox.hasClass('checked')) {
				      // The item is unchecked, collapse it
				      $li.find('.arrow').removeClass('expanded').addClass('collapsed');
				      $li.find('ul').hide();
				    }
				
				    // Recursively call the function for child <li> elements
				    collapseUncheckedItems($li.find('li'));
				  });
				}
				collapseUncheckedItems(topLevelItems);


				function processCheckboxes($element) {
				  $element.find('> li').each(function() {
				    var $li = $(this);
				    var $checkbox = $li.find('.checkbox input[type="hidden"]');
				    var furtherFlag = true;
				    if (!$checkbox.parent('.checkbox').hasClass('checked') && !$checkbox.parent('.checkbox').hasClass('half_checked')) {
				      // The associated checkbox doesn't have the "checked" class
				      	if($checkbox.parent('.checkbox').attr('data-info-checkbox') == 'parent'){
							furtherFlag = false;
						}
				      	uncheckedValues.push($checkbox.val());
				    }
				    
				    // Recursively process child elements
				    if ($li.find('> ul').length && furtherFlag) {
				      processCheckboxes($li.find('> ul'));
				    }
				  });
				}
	
				processCheckboxes($('ul.checktree'));
				
				return uncheckedValues;
	},
	checkTreeCodeActivation(){
		jQuery.fn.checkTree = function (settings) {

                            settings = $.extend({
                                data: [],               // input data which will be used to initilze the tree
                                onExpand: null,        // an event will be triggered when the tree node was expanded
                                onCollapse: null,      // an event will be triigered when the tree node was collapsed
                                onPreCheck: null,      // an event will be triggered before the tree node was checked
                                onCheck: null,         // an event will be triggered when the tree node was checked
                                onUnCheck: null,       // an event will be triggered when the tree node was unchecked
                                onLabelHoverOver: null,// an event will be triggered when mouse hover over the label
                                onLabelHoverOut: null  // an event will be triggered when mouse hover out the label
                            }, settings);

                            var container = $(this), $tree = this;
                            
                            
                            function getChildrenHtml(treesdata) {
                                var result = '', len = treesdata.length, node, clen, arrowClass, checkedClass = ''
                                checkedChildren;
                                for (i = 0; i < len; i++) {
                                    node = treesdata[i];
                                    $.data($tree, node.item.id, node); //attach node data to node id
                                    clen = node.children ? node.children.length : 0;
                                    arrowClass = 'collapsed';
                                    if (clen === 0) {
                                        arrowClass = 'nochildren';
                                        checkClass = node.item.checked ? 'checked' : '';
                                    } else {
                                        var checkedChildren = $.grep(node.children, function (el) {
                                            return el.item.checked;
                                        });
                                        checkClass = checkedChildren.length === 0 ? '' : checkedChildren.length === clen ? 'checked' : 'half_checked';
                                    }

                                    result += '<li rel="' + node.item.id + '" data-node-id="' + node.item.value + '"><div class="checkbox'+(checkClass? ' '+checkClass: '')+'" data-info-checkbox="'+((arrowClass == 'nochildren')? 'child' : 'parent')+'" id="'+node.item.value+'" ><input type="hidden" data-parent-url="'+node.item.parentUrl+'" id="'+node.item.id+'" data-query-search="'+ ( (window.location.search.substring(1)) ? window.location.search.substring(1) : '')+'" value="'+node.item.value+'"  data-url="' + node.item.url + '" data-info="'+((arrowClass == 'nochildren')? 'child' : 'parent')+'" /></div><label for="'+node.item.value+'">' +
                                                 node.item.label+'   <span style="font-size: 12px;">('+node.item.count+')</span></label><div class="arrow ' + arrowClass + '"></div></li>';
                                }

                                return result;
                            }

                            //display children node with data sourceeeee@@@
                            function updateChildrenNodes($li, data, isExpanded) {
                                if (data.children && data.children.length > 0) {
                                    var innerHtml = isExpanded ? '<ul>' : '<ul style="display:none;">';
                                    innerHtml += getChildrenHtml(data.children) + '</ul>';
                                    $li.append(innerHtml);
                                }

                                $li.addClass('updated');
                            }

                            // Function to recursively expand all nodes
                            function expandAllNodes($ul) {
                                $ul.find('li').each(function() {
                                    var $li = $(this);
                                    var $arrow = $li.find('.arrow');
                                    if ($arrow.length && $arrow.hasClass('collapsed')) {
                                        $arrow.click();
                                    }
                                    if ($li.find('ul').length) {
                                        expandAllNodes($li.find('ul'));
                                    }
                                });
                            }
                            
                            //initialize the check tree with the input data
                            (function initalCheckTree() {
                                var treesHtml = '<ul class="checktree">';
                                treesHtml += getChildrenHtml(settings.data);
                                container.empty().append(treesHtml + '<ul>');
                                //debugger;
                                expandAllNodes(container.find('.checktree'));
                            })();

                            //bind select change to checkbox
                            container.off('selectchange', '.checkbox').on('selectchange', '.checkbox', function () {
                                if (settings.onPreCheck) {
                                    if (!settings.onPreCheck($(this).parent())) {
                                        return;
                                    }
                                }

                                var $li = $(this).parent();
                                var dataSource = $.data($tree, $li.attr('rel'));
                                var $all = $(this).siblings('ul').find('.checkbox');
                                var $checked = $all.filter('.checked');

                                //all children checked
                                if ($all.length === $checked.length) {
                                    $(this).removeClass('half_checked').addClass('checked');
                                    dataSource.item.checked = true;
                                    if (settings.onCheck) {
                                        settings.onCheck($li);
                                    }
                                    //all children are unchecked
                                } else if ($checked.length === 0) {
                                    dataSource.item.checked = false;
                                    $(this).removeClass('checked').removeClass('half_checked');
                                    if (settings.onUnCheck) {
                                        settings.onUnCheck($li);
                                    }
                                    //some children are checked
                                } else {
                                    dataSource.item.checked = false;
                                    if (settings.onHalfCheck && !$(this).hasClass('half_checked')) {
                                        settings.onHalfCheck($li);
                                    }

                                    $(this).removeClass('checked').addClass('half_checked');
                                }
                            });

                            //expand and collapse node
                            container.off('click', '.arrow').on('click', '.arrow', function () {
                                if ($(this).hasClass('nochildren')) {
                                    return;
                                }

                                var $li = $(this).parent();
                                if (!$li.hasClass('updated')) {
                                    updateChildrenNodes($li, $.data($tree, $li.attr('rel')), true);
                                    $(this).removeClass('collapsed').addClass('expanded');
                                    if (settings.onExpand) {
                                        settings.onExpand($li);
                                    }
                                } else {
                                    $(this).siblings("ul").toggle();
                                    if ($(this).hasClass('collapsed')) {
                                        $(this).removeClass('collapsed').addClass('expanded');
                                        if (settings.onExpand) {
                                            settings.onExpand($li);
                                        }
                                    } else {
                                        $(this).removeClass('expanded').addClass('collapsed');
                                        if (settings.onCollapse) {
                                            settings.onCollapse($li);
                                        }
                                    }
                                }
                                
                                 // Check or uncheck child nodes when expanding or collapsing
					            if ($(this).hasClass('expanded') && $(this).siblings().eq(0).hasClass("checked") ) {
					                //debugger;
					                // Parent node is expanding, check child nodes
					                $li.find('.checkbox').addClass('checked');
					            }
                            });

                            //check and uncheck node
                            container.off('click', '.checkbox').on('click', '.checkbox', function () {
                                var $li = $(this).parent();
                                var dataSource = $.data($tree, $li.attr('rel'));
                                if (!$li.hasClass('updated')) {
                                    updateChildrenNodes($li, dataSource, false);
                                }

                                if (settings.onPreCheck) {
                                    if (!settings.onPreCheck($li)) {
                                        return;
                                    }
                                }

                                $(this).removeClass('half_checked').toggleClass('checked');

                                if ($(this).hasClass('checked')) {
                                    dataSource.item.checked = true;
                                    if (settings.onCheck) {
                                        settings.onCheck($li, true);
                                    }

                                    $(this).siblings('ul').find('.checkbox').not('.checked').removeClass('half_checked').addClass('checked').each(function () {
                                        var $subli = $(this).parent();
                                        $.data($tree, $subli.attr('rel')).item.checked = true;
                                        if (settings.onCheck) {
                                            settings.onCheck($subli, false);
                                        }
                                    });
                                } else {
                                    dataSource.item.checked = false;
                                    if (settings.onUnCheck) {
                                        settings.onUnCheck($li, true);
                                    }

                                    $(this).siblings('ul').find('.checkbox').filter('.checked').removeClass('half_checked').removeClass('checked').each(function () {
                                        var $subli = $(this).parent();
                                        $.data($tree, $subli.attr('rel')).item.checked = false;
                                        if (settings.onUnCheck) {
                                            settings.onUnCheck($subli, false);
                                        }
                                    });
                                }

                                $(this).parents('ul').siblings('.checkbox').trigger('selectchange');
                            });

                            //click label also trigger check action
                            container.off('click', 'label').on('click', 'label', function (e) {
                                e.preventDefault();
                                //$(this).prev('.checkbox').trigger('click');
                            });

                            container.off('mouseenter', 'label').on('mouseenter', 'label', function () {
                                $(this).addClass("hover");
                                if (settings.onLabelHoverOver) settings.onLabelHoverOver($(this).parent());
                            });

                            container.off('mouseleave', 'label').on('mouseleave', 'label', function () {
                                $(this).removeClass("hover");
                                if (settings.onLabelHoverOut) settings.onLabelHoverOut($(this).parent());
                            });

                        };
	}
};
var eCustomTitle = {
    init: function () {
			/*
			custom.title.home=Home
			custom.title.product_listing=Product Listing
			custom.title.product_details=Product Details
			custom.title.cart=Cart
			custom.title.checkout=Checkout
			custom.title.search_results=Search Results
			custom.title.myaccount_profile=Profile Details
			custom.title.myaccount_orderhistory=Order History
			custom.title.myaccount_wishlist=Favorite List
			custom.title.myaccount_help_center=Help Center
			custom.title.myaccount_contactus=Contact Us
			custom.title.login=Login
			custom.title.register=Register
			*/
			if( $("#custom-title").length > 0) { //&& $(".master .user-name").text() == 'Merchandise's
				 var messagePropertyCustomeTitle = $("#custom-title").text();
				 var currentPageDetails =  $("#custom-title").attr("data-title-for");
				 var currentPageTitle =  $('title').text();
				 // Split the string by space
				 var values = currentPageTitle.split('-');
				// Check if there is at least a second values
				if (values.length == 2 && (currentPageDetails == 'product_listing' || currentPageDetails== 'product_details') ) {
					//Breadcum restrict with parent level if multiple categories checked
					var currentURL = window.location.href;
					var currentUrlInfo = new URL(currentURL);
				    var ismlCatPresent = (currentUrlInfo.searchParams).get('mlCat');
					if(ismlCatPresent) {
						values[0] =  ($(".cat-heading").length > 0) ? $(".cat-heading").text() : '';
					}
					 values[1] = messagePropertyCustomeTitle;
					 var resultCustomPageTitle = values.join(' - ');
					 $('title').text(resultCustomPageTitle);
				} else if(currentPageDetails== 'search_results') {
				    	if(values.length == 3) {
							values.pop();
						}
					values[0] = messagePropertyCustomeTitle;
					var resultCustomPageTitle = values.join(' - ');
				    $('title').text(resultCustomPageTitle); 
				} else {
				   $('title').text(messagePropertyCustomeTitle); 
				} 

			 }
	}
};
/*-
 * #%L
 * BroadleafCommerce Common Libraries
 * %%
 * Copyright (C) 2009 - 2024 Broadleaf Commerce
 * %%
 * Licensed under the Broadleaf Fair Use License Agreement, Version 1.0
 * (the "Fair Use License" located  at http://license.broadleafcommerce.org/fair_use_license-1.0.txt)
 * unless the restrictions on use therein are violated and require payment to Broadleaf in which case
 * the Broadleaf End User License Agreement (EULA), Version 1.1
 * (the "Commercial License" located at http://license.broadleafcommerce.org/commercial_license-1.1.txt)
 * shall apply.
 * 
 * Alternatively, the Commercial License may be replaced with a mutually agreed upon license (the "Custom License")
 * between you and Broadleaf Commerce. You may not use this file except in compliance with the applicable license.
 * #L%
 */
/* Utility methods provided by Broadleaf Commerce */
var BLC = (function($) {
    
    var redirectUrlDiv = "blc-redirect-url",
        extraDataDiv   = "blc-extra-data",
        internalDataDiv   = "blc-internal-data",
        preAjaxCallbackHandlers = [],
        internalDataHandlers = [],
        servletContext = "/ecommerce",
        siteBaseUrl = "http://equifaxecuador.awardsworldwide.com";
    
    function addPreAjaxCallbackHandler(fn) {
        preAjaxCallbackHandlers.push(fn);
    }

    function addInternalDataHandler(fn) {
        internalDataHandlers.push(fn);
    }
    
    /**
     * Runs all currently registered pre-ajax-callback handlers. If any such handler returns false,
     * we will stop invocation of additional handlers as well as the callback function.
     */
    function runPreAjaxCallbackHandlers($data) {
        return runGenericHandlers($data, preAjaxCallbackHandlers);
    }

    /**
     * Runs all currently registered internal data handlers. If any such handler returns false,
     * we will stop invocation of additional handlers as well as the callback function.
     */
    function runInternalDataHandlers($data) {
        return runGenericHandlers($data, internalDataHandlers);
    }
    
    function runGenericHandlers($data, handlers) {
        for (var i = 0; i < handlers.length; i++) {
            if (!handlers[i]($data)) {
                return false;
            }
        }
        return true;
    }
    
    function redirectIfNecessary($data) {
        // If $data is JSON & ajaxredirect value is valid
        if ($data.constructor === {}.constructor && typeof $data.ajaxredirect !== 'undefined'
            && $data.ajaxredirect != null && $data.ajaxredirect !== "") {
            window.location = $data.ajaxredirect;
            return false;
        }

        if (!($data instanceof jQuery)) {
            return true;
        }

        if ($data.attr('id') == redirectUrlDiv) {
            var redirectUrl = $data.text();
            if (redirectUrl != null && redirectUrl !== "") {
                window.location = redirectUrl;
                return false;
            }
        }

        return true;
    }
    
    function getInternalData($data) {
        var extractedData = extractData($data, internalDataDiv);

        if (($data instanceof jQuery) && ($data.attr('id') == internalDataDiv + "-container")) {
            $data.unwrap();
        }

        return extractedData;
    }

    function getExtraData($data) {
        return extractData($data, extraDataDiv);
    }
    
    function extractData($data, dataDivId) {
        if (!($data instanceof jQuery)) {
            return null;
        }
        
    	var extractedData = null;

	    var $dataDiv = $data.find('#' + dataDivId);
    	if ($dataDiv.length > 0) {
    	    try {
    	        extractedData = $.parseJSON($dataDiv.text());
    	    } catch (e) {
    	        console.log("Could not parse data as JSON: " + $dataDiv.text());
    	    }
	        $dataDiv.remove();
    	}

	    return extractedData;
    }
    
    function get(options, callback) {
        if (options == null) {
            options = {};
        }
        options.type = 'GET';
        return BLC.ajax(options, callback);
    }

    function post(options, callback) {
        if (options == null) {
            options = {};
        }
        options.type = 'POST';
        return BLC.ajax(options, callback);
    }
    
    function ajax(options, callback) {
        if (options.type == null) {
            options.type = 'GET';
        }

        var baseUrl = window.location.href;
        if (baseUrl.indexOf('isPostAdd') != -1) {
            if (options.url.indexOf('isPostAdd') < 0) {
                if (options.url.indexOf('?') > 0) {
                    options.url += "&";
                } else {
                    options.url += "?";
                }
                options.url += "isPostAdd=true";
            }
        }
        var savedCatalogElement = $('input[name ="catalogEntityCatalogDiscriminatorId"]');
        var savedCatalog=null;

        if(savedCatalogElement.length){
            //0 should be the one we need, other can be from the modal form
            savedCatalog = savedCatalogElement[0].value;
            if(savedCatalog.length>0){
                if(options.url.indexOf('?')>0){
                    options.url+="&catalogEntityCatalogDiscriminatorId="+savedCatalog;
                }else{
                    options.url+="?catalogEntityCatalogDiscriminatorId="+savedCatalog;
                }
            }
        }
        if (options.type.toUpperCase() == 'POST') {
            if (typeof options.data == 'string') {
                if (options.data.indexOf('csrfToken') < 0) {
                    var csrfToken = getCsrfToken();
                    if (csrfToken != null) {
                        if (options.data.indexOf('=') > 0) {
                            options.data += "&";
                        }
                        
                        options.data += "csrfToken=" + csrfToken;
                    }
                }
                if (options.data.indexOf('stateVersionToken') < 0) {
                    var stateVersionToken = getStateVersionToken();
                    if (stateVersionToken != null) {
                        if (options.data.indexOf('=') > 0) {
                            options.data += "&";
                        }

                        options.data += "stateVersionToken=" + stateVersionToken;
                    }
                }
            } else if (typeof options.data == 'object') {
                if (options.data['csrfToken'] == null || options.data['csrfToken'] == '') {
                    var csrfToken = getCsrfToken();
                    if (csrfToken != null) {
                        options.data['csrfToken'] = csrfToken;
                    }
                }
                if (options.data['stateVersionToken'] == null || options.data['stateVersionToken'] == '') {
                    var stateVersionToken = getStateVersionToken();
                    if (stateVersionToken != null) {
                        options.data['stateVersionToken'] = stateVersionToken;
                    }
                }
            } else if (!options.data) {
                options.data = {};
                var csrfToken = getCsrfToken();
                options.data = {};
                if (csrfToken) {
                    options.data['csrfToken'] = csrfToken;
                }
                var stateVersionToken = getStateVersionToken();
                if (stateVersionToken) {
                    options.data['stateVersionToken'] = stateVersionToken;
                }
            }
        }
        
        options.success = function(data) {
            if (typeof data == "string" && !this.noParse) {
                data = $($.trim(data));
            }
            
            var internalData = getInternalData(data);
            if (internalData != null) {
                runInternalDataHandlers(internalData);
            }
            
            if (options.trackAnalytics != false) {
                trackAjaxAnalytics(this, data);
            }
                        
            if (runPreAjaxCallbackHandlers(data)) {
                var extraData = getExtraData(data);
                callback(data, extraData);
            }
        };
        
        if (!options.error) {
            options.error = function(data) {
                BLC.defaultErrorHandler(data);
            };
        }
        
        return $.ajax(options);
    }
    
    function trackAjaxAnalytics(options, data) {
        try {
            if (window.ga && ga.create) {
                ga('send', 'pageview', options.url);
                console.log('Tracked GA pageview: ' + options.url);
                
                if (options.additionalAnalyticsEvents) {
                    for (var i = 0; i < options.additionalAnalyticsEvents.length; i++) {
                        ga('send', options.additionalAnalyticsEvents[i]);
                        console.log('Tracked additional GA event: ' + options.additionalAnalyticsEvents[i]);
                    }
                }
            }
            
            if (typeof ga != 'undefined') {
                var trackers = ga.getAll();
                for (var i = 0; i < trackers.length; i++) {
                    var tracker = trackers[i];
                    console.log('Tracked GA pageview: ' + options.url + ' for tracker: ' + tracker.get('name'));
                    tracker.send('pageview', options.url);
                    
                    if (options.additionalAnalyticsEvents) {
                        for (var i = 0; i < options.additionalAnalyticsEvents.length; i++) {
                            var event = options.additionalAnalyticsEvents[i];
                            tracker.send(event);
                            console.log('Tracked additional GA event: ' + event + ' for tracker: ' + tracker.get('name'));
                        }
                    }
                }
            }
        } catch (err) {
            console.log(err);
        }
    }
        
    function getCsrfToken() {
        var csrfTokenInput = $('input[name="csrfToken"]');
        if (csrfTokenInput.length == 0) {
            return null;
        }
        
        return csrfTokenInput.val();
    }

    function getStateVersionToken() {
        var stateVersionTokenInput = $('input[name="stateVersionToken"]');
        if (stateVersionTokenInput.length == 0) {
            return null;
        }

        return stateVersionTokenInput.val();
    }
    
    function defaultErrorHandler(data) {
        if (data.getAllResponseHeaders()) {
            alert("An error occurred while processing your request.");
        }
    }
    
    function serializeObject($object) {
        var o = {};
        var a = $object.serializeArray();
        $.each(a, function() {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    }

    /**
     * Add a URL parameter (or changing it if it already exists)
     * @param {search} string  this is typically document.location.search
     * @param {key}    string  the key to set
     * @param {val}    string  value
     */
    function addUrlParam(search, key, val){
        var newParam = key + '=' + val,
            params = '?' + newParam;

        // If the "search" string exists, then build params from it
        if (search) {
            // Try to replace an existing instance
            params = search.replace(new RegExp('[\?]' + key + '[^&]*'), '?' + newParam);

            // If nothing was replaced, then check if it exists as a trailing param
            if (params === search) {
                params = search.replace(new RegExp('[\&]' + key + '[^&]*'), '&' + newParam);

                // If nothing was replaced and the key is not already present, then add the new param to the end
                if ((params === search) && (search.indexOf(val) == -1) ) {
                    params += '&' + newParam;
                }
            }
        }

        return document.location.search = params;
    }

    /**
     * Add a URL parameter (or changing it if it already exists)
     * This method does the same as {@link #addUrlParam (search, key, val)},
     * but does not update document.location.search to prevent page reload
     * @param {search} string  this is typically document.location.search
     * @param {key}    string  the key to set
     * @param {val}    string  value
     */
    function addUrlQueryParam(search, key, val){
        var newParam = key + '=' + val,
            params = '?' + newParam;

        // If the "search" string exists, then build params from it
        if (search) {
            // Try to replace an existing instance
            params = search.replace(new RegExp('[\?]' + key + '[^&]*'), '?' + newParam);

            // If nothing was replaced, then check if it exists as a trailing param
            if (params === search) {
                params = search.replace(new RegExp('[\&]' + key + '[^&]*'), '&' + newParam);

                // If nothing was replaced and the key is not already present, then add the new param to the end
                if ((params === search) && (search.indexOf(val) == -1) ) {
                    params += '&' + newParam;
                }
            }
        }

        return params;
    }

    /**
     * Gathers all parameters from the current url
     */
    function getUrlParameters() {
        var baseUrl = window.location.href;
        var indexOfQ = baseUrl.indexOf('?');
        var urlParams = null;
        if (indexOfQ >= 0) {
            urlParams = baseUrl.substring(indexOfQ + 1);
            if (urlParams != null && urlParams != '') {
                var params = decodeURI(encodeURI(urlParams.replace(/&/g, "\",\"").replace(/=/g, "\":\"")));
                if (params.includes('|')) {
                    params = params.replace(/\|/g, '%7C');
                }
                return JSON.parse('{"' + params + '"}');
            }
        }
        return {};
    }

    /**
     * Add URL parameters to an existing url
     * @param {url}     string
     * @param {params}    map of parameter keys to values
     */
    function buildUrlWithParams (url, params) {
        if (url.lastIndexOf("?") > -1) {
            url = url + "&" + $.param(params);
        } else {
            if (!$.isEmptyObject(params)) {
                url = url + "?" + $.param(params);
            }
        }

        return url;
    }
    
    addPreAjaxCallbackHandler(function($data) {
        return BLC.redirectIfNecessary($data);
    });
    
    return {
        addPreAjaxCallbackHandler : addPreAjaxCallbackHandler,
        addInternalDataHandler : addInternalDataHandler,
        redirectIfNecessary : redirectIfNecessary,
        getExtraData : getExtraData,
        get : get,
        post : post,
        ajax : ajax,
        getStateVersionToken : getStateVersionToken,
        defaultErrorHandler : defaultErrorHandler,
        serializeObject : serializeObject,
        getUrlParameters : getUrlParameters,
        addUrlParam : addUrlParam,
        addUrlQueryParam : addUrlQueryParam,
        buildUrlWithParams : buildUrlWithParams,
        servletContext : servletContext,
        siteBaseUrl : siteBaseUrl
    }
})($);

$("a.add-url-param-click").on('click', function () {
    var param = $(this).attr('data-param');
    var prop = $(this).attr('data-prop');
    BLC.addUrlParam(document.location.search, prop, param);
    return false;
});
;
